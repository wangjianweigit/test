<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tk.analysis.activity.dao.ActivityAnalysisDao">
	<!-- DW:平台+商品+业务的权限条件 -->
	<sql id="dw_public_psy_where">
	   	and t1.product_key = dp.product_key
	   	and t1.member_key = dm.member_key
	   <!-- 童库平台 -->
	   <if test="public_user_platform_type ==1">
	   		and dp.product_type in (0,1)
	   		and dm.stationed_user_id = 1
	   		<if test="public_user_type != null and public_user_type == 2"><!-- 管理员 -->
	   			<!-- 业务权限 -->
	   			and dm.store_id in 
	   			<foreach collection="ids" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				</foreach>
	   	   		<!-- 商品分类 -->
	   	   		and dp.product_first_classify in 
	   	   		<foreach collection="typeIds" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				</foreach>
       		</if>
       		<if test="public_user_type != null and public_user_type == 3"><!-- 业务员 -->
			    and dm.ywy_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 4"><!-- 业务经理 -->
			    and dm.ywjl_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 5"><!-- 店长 -->
			    and dm.dz_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 6"><!-- 营业员 -->
	        	and dm.store_id in 
	        	<foreach collection="ids" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				</foreach>
	        </if>
	        <if test="public_user_type != null and public_user_type == 9"><!-- 销售管理 -->
	        	and dm.ywjl_user_id in 
	        	<foreach collection="ids" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				 </foreach>
	        </if>
	   </if>
	   <!-- 私有平台 -->
	   <if test="public_user_platform_type ==2">
	   		and dp.product_type = 3
	   		and dp.stationed_user_id = #{public_user_stationed_user_id,jdbcType=INTEGER}
			and dm.stationed_user_id = #{public_user_stationed_user_id,jdbcType=INTEGER}
	   </if>
	   <!-- 全部 -->
	   <if test="public_user_platform_type ==9">
	   		and dm.member_key > 0
	   		<if test="public_user_type != null and public_user_type == 2"><!-- 管理员 -->
	   			<!-- 业务权限 -->
	   			and dm.store_id in 
	   			<foreach collection="ids" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				</foreach>
	   	   		<!-- 商品分类 -->
	   	   		and dp.product_first_classify in 
	   	   		<foreach collection="typeIds" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				</foreach>
       		</if>
       		<if test="public_user_type != null and public_user_type == 3"><!-- 业务员 -->
			    and dm.ywy_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 4"><!-- 业务经理 -->
			    and dm.ywjl_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 5"><!-- 店长 -->
			    and dm.dz_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 6"><!-- 营业员 -->
	        	and dm.store_id in 
	        	<foreach collection="ids" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				</foreach>
	        </if>
	        <if test="public_user_type != null and public_user_type == 9"><!-- 销售管理 -->
	        	and dm.ywjl_user_id in 
	        	<foreach collection="ids" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				 </foreach>
	        </if>
	   </if>
	</sql>
	<!-- DW:平台+业务的权限条件 -->
	<sql id="dw_public_py_where">
	   <!-- 童库平台 -->
	   <if test="public_user_platform_type ==1">
	   		and dm.stationed_user_id = 1
	   		<if test="public_user_type != null and public_user_type == 2"><!-- 管理员 -->
	   			<!-- 业务权限 -->
	   			and dm.store_id in 
	   			<foreach collection="ids" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				 </foreach>
       		</if>
       		<if test="public_user_type != null and public_user_type == 3"><!-- 业务员 -->
			    and dm.ywy_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 4"><!-- 业务经理 -->
			    and dm.ywjl_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 5"><!-- 店长 -->
			    and dm.dz_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 6"><!-- 营业员 -->
	        	and dm.store_id in 
	        	<foreach collection="ids" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				 </foreach>
	        </if>
	        <if test="public_user_type != null and public_user_type == 9"><!-- 销售管理 -->
	        	and dm.ywjl_user_id in 
	        	<foreach collection="ids" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				 </foreach>
	        </if>
	   </if>
	   <!-- 私有平台 -->
	   <if test="public_user_platform_type ==2">
			and dm.stationed_user_id = #{public_user_stationed_user_id,jdbcType=INTEGER}
	   </if>
	   <!-- 全部 -->
	   <if test="public_user_platform_type ==9">
	   		and dm.member_key > 0
	   		<if test="public_user_type != null and public_user_type == 2"><!-- 管理员 -->
	   			<!-- 业务权限 -->
	   			and dm.store_id in 
	   			<foreach collection="ids" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				 </foreach>
       		</if>
       		<if test="public_user_type != null and public_user_type == 3"><!-- 业务员 -->
			    and dm.ywy_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 4"><!-- 业务经理 -->
			    and dm.ywjl_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 5"><!-- 店长 -->
			    and dm.dz_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 6"><!-- 营业员 -->
	        	and dm.store_id in 
	        	<foreach collection="ids" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				 </foreach>
	        </if>
	        <if test="public_user_type != null and public_user_type == 9"><!-- 销售管理 -->
	        	and dm.ywjl_user_id in 
	        	<foreach collection="ids" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				 </foreach>
	        </if>
	   </if>
	</sql>
	<!-- DW:平台+商品的权限条件 -->
	<sql id="dw_public_ps_where">
	   <!-- 童库平台 -->
	   <if test="public_user_platform_type ==1">
	   		and t.product_type in (0,1)
	   		<if test="public_user_type != null and public_user_type == 2"><!-- 管理员 -->
	   	   		<!-- 商品分类 -->
	   	   		and t.product_first_classify in 
	   	   		<foreach collection="typeIds" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				</foreach>
       		</if>
	   </if>
	   <!-- 私有平台 -->
	   <if test="public_user_platform_type ==2">
	   		and t.product_type = 3
	   		and t.stationed_user_id = #{public_user_stationed_user_id,jdbcType=INTEGER}
	   </if>
	   <!-- 全部 -->
	   <if test="public_user_platform_type ==9">
	   		and t.product_key > 0
	   		<if test="public_user_type != null and public_user_type == 2"><!-- 管理员 -->
	   	   		<!-- 商品分类 -->
	   	   		and t.product_first_classify in 
	   	   		<foreach collection="typeIds" item="item" open="(" close=")" separator=",">
				 	#{item,jdbcType=INTEGER}
				</foreach>
       		</if>
	   </if>
	</sql>
							<!-- #################        公用         ################ -->
	
							<!-- #################        今日活动情况实时汇总         ################ -->
	<!-- 实时 支付买家数、活动销售总额 -->
	<select id="r_queryRealTime_ActivityPayPurchaseNumberMoney" parameterType="java.util.Map" resultType="java.util.Map">
		select count(distinct t1.member_key) purchase_number,nvl(sum(t1.pay_money),0) pay_money
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.payment_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.begin_date &lt; sysdate
		   and da.end_date > sysdate
           and dt.date_short = #{date_short,jdbcType=VARCHAR}
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 实时 活动商品定金 -->
	<select id="r_queryRealTime_ActivityPreFirstMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0)
		  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.order_key = t2.order_key
		   and t1.payment_date_key = dt.date_key
		   and t2.activity_key = da.activity_key
		   and da.begin_date &lt; sysdate
		   and da.end_date > sysdate
		   and dt.date_short = #{date_short,jdbcType=VARCHAR}
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 实时 活动商品数 -->
	<select id="r_queryRealTime_ActivityProductCount" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(1)
		  from dim_product t,fact_activity_product t1,dim_activity da
         where t.product_key = t1.product_key
           and t1.activity_key = da.activity_key
		   and da.begin_date &lt; sysdate
		   and da.end_date > sysdate
		 <include refid="dw_public_ps_where"/>
	</select>
	<!-- 实时 活动数 -->
	<select id="r_queryRealTime_ActivityCount" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(1)
		  from dim_activity
		 where state = 2
		   and begin_date &lt; sysdate
		   and end_date > sysdate
	</select>
	<!-- 实时 活动商品访客数 -->
	<select id="r_queryRealTime_ActivityProductVisitorCount" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(distinct t1.member_key) 
		  from fact_user_log_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.log_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.begin_date &lt; sysdate
		   and da.end_date > sysdate
           and dt.date_short = #{date_short,jdbcType=VARCHAR}
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 实时 活动商品分享次数 -->
	<select id="r_queryRealTime_ActivityProductShareCount" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(distinct t1.member_key) 
		  from fact_user_log_operate t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.log_date_key = dt.date_key
		   and t1.operate_key = 2
		   and t1.activity_key = da.activity_key
		   and da.begin_date &lt; sysdate
		   and da.end_date > sysdate
           and dt.date_short = #{date_short,jdbcType=VARCHAR}
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 实时 活动销售额 折线图 -->
	<select id="r_queryRealTime_ActivityPayMoney_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.hours24_value as create_date,nvl(sum(a.pay_money),0) pay_money
		  from
		(select t1.payment_date_time_key,t1.pay_money
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.payment_date_key = dt.date_key
           and dt.date_short = #{date_short,jdbcType=VARCHAR}
           and t1.activity_key = da.activity_key
		   and da.begin_date &lt; sysdate
		   and da.end_date > sysdate
		   <include refid="dw_public_psy_where"/>) a,dim_time dt
           where a.payment_date_time_key = dt.time_key
           group by dt.hours24_value
           order by dt.hours24_value
	</select>
	<!-- 实时 活动商品定金 折线图 -->
	<select id="r_queryRealTime_ActivityPreFirstMoney_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.hours24_value as create_date,nvl(sum(a.pre_first_money),0) pre_first_money
		  from
		(select t1.payment_date_time_key,nvl(t1.product_money*(t2.earnest_money/t2.product_money),0) pre_first_money
		  from fact_pre_order_product t1,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.order_key = t2.order_key
		   and t1.payment_date_key = dt.date_key
           and dt.date_short = #{date_short,jdbcType=VARCHAR}
           and t2.activity_key = da.activity_key
		   and da.begin_date &lt; sysdate
		   and da.end_date > sysdate
		   <include refid="dw_public_psy_where"/>) a,dim_time dt
           where a.payment_date_time_key = dt.time_key
           group by dt.hours24_value
           order by dt.hours24_value
	</select>
	<!-- 实时 活动商品销售额 -->
	<select id="r_queryRealTime_ActivityPayMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.pay_money),0) 
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.payment_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.begin_date &lt; sysdate
		   and da.end_date > sysdate
           and dt.date_short = #{date_short,jdbcType=VARCHAR}
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 实时 平台商品销售额 -->
	<select id="r_queryRealTime_PayMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.pay_money),0)
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm
		 where t1.payment_date_key = dt.date_key
           and dt.date_short = #{date_short,jdbcType=VARCHAR}
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 实时 平台商品定金 -->
	<select id="r_queryRealTime_PreFirstMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0)
		  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm
		 where t1.order_key = t2.order_key
		   and t1.payment_date_key = dt.date_key
		   and dt.date_short = #{date_short,jdbcType=VARCHAR}
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 实时 活动支付单数 -->
	<select id="r_queryRealTime_ActivityPayNum" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(distinct t1.order_key) 
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.payment_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.begin_date &lt; sysdate
		   and da.end_date > sysdate
           and dt.date_short = #{date_short,jdbcType=VARCHAR}
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 实时 平台支付单数 -->
	<select id="r_queryRealTime_PayNum" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(distinct t1.order_key) 
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm
		 where t1.payment_date_key = dt.date_key
           and dt.date_short = #{date_short,jdbcType=VARCHAR}
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 实时 活动列表 -->
	<select id="r_queryRealTime_ActivityList" parameterType="java.util.Map" resultType="java.util.Map">
		select activity_id,
			   activity_name,
			   activity_type,
			   to_char(begin_date,'yyyy-mm-dd hh24:mi:ss') begin_date,
			   to_char(end_date,'yyyy-mm-dd hh24:mi:ss') end_date
		  from dim_activity
		 where state = 2
		   and begin_date &lt; sysdate
		   and end_date > sysdate
		   and activity_type = #{activity_type,jdbcType=INTEGER}
		   order by end_date asc,activity_id asc
	</select>
	<!-- 活动详情 -->
	<select id="r_queryActivityDetail" parameterType="java.util.Map" resultType="java.util.Map">
		select activity_id,
			   activity_name,
			   activity_image,
			   activity_type,
			   case when begin_date &gt; sysdate then 0
				    when end_date &lt; sysdate then 2
			   	    else 1 end as start_state,
			   to_char(apply_begin_date,'yyyy-mm-dd hh24:mi:ss') apply_begin_date,
			   to_char(apply_end_date,'yyyy-mm-dd hh24:mi:ss') apply_end_date，
			   to_char(begin_date,'yyyy-mm-dd hh24:mi:ss') begin_date,
			   to_char(end_date,'yyyy-mm-dd hh24:mi:ss') end_date,
			   ceil(end_date-begin_date) as days,
			   ceil(sysdate-begin_date) as now_days,
			   (select to_char(wm_concat(site_name)) from dim_site where site_key in (select site_key from fact_activity_site where activity_key = t.activity_key)) site_name
		  from dim_activity t
		 where activity_id = #{activity_id,jdbcType=INTEGER}
	</select>
	<!-- 参与活动会员数 -->
	<select id="r_queryActivityMemberCount" parameterType="java.util.Map" resultType="java.lang.Float">
		select case when t.group_key = 0 then -1
		       else (select count(1) from fact_user_group_detail t1,dim_member dm where group_key = t.group_key
		        and t1.member_key = dm.member_key
		       <include refid="dw_public_py_where"/>) end member_count
		  from fact_activity_detail t,dim_activity da
		 where t.activity_key = da.activity_key
   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
	</select>
	<!-- 活动商品数 -->
	<select id="r_queryActivityProductCount" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(1)
		  from dim_product t,fact_activity_product t1,dim_activity da
         where t.product_key = t1.product_key
           and t1.activity_key = da.activity_key
   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		 <include refid="dw_public_ps_where"/>
	</select>
	<!-- 品牌数量 -->
	<select id="r_queryActivityBrandCount" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(distinct t.brand_id)
		  from dim_product t,fact_activity_product t1,dim_activity da
         where t.product_key = t1.product_key
           and t1.activity_key = da.activity_key
   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		 <include refid="dw_public_ps_where"/>
	</select>
	<!-- 商家数量 -->
	<select id="r_queryActivityStationedCount" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(distinct t.stationed_user_id)
		  from dim_product t,fact_activity_product t1,dim_activity da
         where t.product_key = t1.product_key
           and t1.activity_key = da.activity_key
   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		 <include refid="dw_public_ps_where"/>
	</select>
							<!-- #################        今日活动定金情况         ################ -->
	<!-- 实时 预定订单笔数 -->
	<select id="r_queryRealTime_PreOrderNum" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(1)
		  from fact_pre_order t1,dim_pre_order t2,dim_date dt,dim_activity da,dim_member dm
		 where t1.create_date_key = dt.date_key
		   and t1.order_key = t2.order_key
		   and t2.order_state = #{order_state,jdbcType=INTEGER}
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   and dt.date_short = #{date_short,jdbcType=VARCHAR}
		   and t1.member_key = dm.member_key
		 <include refid="dw_public_py_where"/>
	</select>
	<!-- 实时 成交总额 -->
	<select id="r_queryRealTime_PaymentMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t.payment_money),0) - nvl(sum(t.pre_earnest_money),0)
		  from fact_order t
         where order_key in 
               (select t1.order_key
                  from fact_order_product t1,dim_date dt,dim_member dm,dim_activity da
                 where t1.payment_date_key = dt.date_key
                   and t1.activity_key = da.activity_key
                   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   		   and dt.date_short = #{date_short,jdbcType=VARCHAR}
		   		   and t1.member_key = dm.member_key
           		   <include refid="dw_public_py_where"/>)
	</select>
	<!-- 实时 预定订单的定金 -->
	<select id="r_queryRealTime_earnestMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.earnest_money),0)
		  from fact_pre_order t1,dim_date dt,dim_member dm,dim_activity da
		 where t1.payment_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   and dt.date_short = #{date_short,jdbcType=VARCHAR}
		   and t1.member_key = dm.member_key
		   <include refid="dw_public_py_where"/>
	</select>
							<!-- #################        今日活动趋势分析         ################ -->
	<!-- 商品分享次数 -->
	<select id="r_queryActivityTrend_ProductShareCount" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(distinct t1.member_key) 
		  from fact_user_log_operate t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.log_date_key = dt.date_key
		   and t1.operate_key = 2
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 商品销售总额 -->
	<select id="r_queryActivityTrend_PayMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.pay_money),0) 
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.payment_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 预定订单的定金 -->
	<select id="r_queryActivityTrend_PreFirstMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0)
		  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.order_key = t2.order_key
		   and t1.payment_date_key = dt.date_key
		   and t2.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 活动支付单笔数 -->
	<select id="r_queryActivityTrend_PayNum" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(distinct t1.order_key) 
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.payment_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 分享支付单数 -->
	<select id="r_queryActivityTrend_SharePayNum" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(distinct t1.order_key) 
		  from fact_order_product t1,dim_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.order_key = t2.order_key
		   and t1.payment_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and t2.share_type = 2
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 折线图 商品分享次数<天> -->
	<select id="r_queryRealTime_Trend_ShareCountD_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.hours24_value as create_date,count(distinct a.member_key) share_count
		  from (select t1.log_time_key,t1.member_key
				  from fact_user_log_operate t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.log_date_key = dt.date_key
				   and t1.operate_key = 2
				   and t1.activity_key = da.activity_key
				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		           and dt.date_short = #{date_short,jdbcType=VARCHAR}
				   <include refid="dw_public_psy_where"/>) a,dim_time dt
		   where a.log_time_key = dt.time_key
           group by dt.hours24_value
           order by dt.hours24_value
	</select>
	<!-- 折线图 商品销售总额<天> -->
	<select id="r_queryRealTime_Trend_PayMoneyD_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.hours24_value as create_date,nvl(sum(a.pay_money),0) pay_money
		  from (select t1.payment_date_time_key,t1.pay_money
				  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.payment_date_key = dt.date_key
				   and t1.activity_key = da.activity_key
				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		           and dt.date_short = #{date_short,jdbcType=VARCHAR}
				   <include refid="dw_public_psy_where"/>) a,dim_time dt
           where a.payment_date_time_key = dt.time_key
           group by dt.hours24_value
           order by dt.hours24_value
	</select>
	<!-- 折线图 预定订单的定金<天> -->
	<select id="r_queryRealTime_Trend_PreFirstMoneyD_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.hours24_value as create_date,nvl(sum(a.pre_first_money),0) pre_first_money
		  from (select t1.payment_date_time_key,nvl(t1.product_money*(t2.earnest_money/t2.product_money),0) pre_first_money
				  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.order_key = t2.order_key
				   and t1.payment_date_key = dt.date_key
				   and t2.activity_key = da.activity_key
				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
				   and dt.date_short = #{date_short,jdbcType=VARCHAR}
				   <include refid="dw_public_psy_where"/>) a,dim_time dt
           where a.payment_date_time_key = dt.time_key
           group by dt.hours24_value
           order by dt.hours24_value
	</select>
	<!-- 折线图 活动支付单笔数<天> -->
	<select id="r_queryRealTime_Trend_PayNumD_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.hours24_value as create_date,count(distinct a.order_key) pay_num
		  from (select t1.payment_date_time_key,t1.order_key
				  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.payment_date_key = dt.date_key
				   and t1.activity_key = da.activity_key
				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		           and dt.date_short = #{date_short,jdbcType=VARCHAR}
				   <include refid="dw_public_psy_where"/>) a,dim_time dt
           where a.payment_date_time_key = dt.time_key
           group by dt.hours24_value
           order by dt.hours24_value
	</select>
	<!-- 折线图 分享支付单数<天> -->
	<select id="r_queryRealTime_Trend_SharePayNumD_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.hours24_value as create_date,count(distinct a.order_key) share_pay_num
		  from (select t1.payment_date_time_key,t1.order_key
				  from fact_order_product t1,dim_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.order_key = t2.order_key
				   and t1.payment_date_key = dt.date_key
				   and t1.activity_key = da.activity_key
				   and t2.share_type = 2
				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		           and dt.date_short = #{date_short,jdbcType=VARCHAR}
				   <include refid="dw_public_psy_where"/>) a,dim_time dt
           where a.payment_date_time_key = dt.time_key
           group by dt.hours24_value
           order by dt.hours24_value
	</select>
							<!-- #################        今日活动商品列表         ################ -->
	<!-- 活动商品总数 -->
	<select id="r_queryProductCount" parameterType="java.util.Map" resultType="int">
		select count(1)
		  from dim_product t,fact_activity_product t1,dim_activity da
		 where t.product_key = t1.product_key
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		 <include refid="dw_public_ps_where"/>
	</select>
	<!-- 排序获取某一页的商品排行-商品浏览量 -->
	<select id="r_queryProduct_PvCount" parameterType="java.util.Map" resultType="string">
		select itemnumber
		  from (
		select a.*,rownum rn
		  from (
		select t.itemnumber,nvl(t1.pv_count,0) pv_count
		  from (select t.itemnumber,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
		  	   (select t1.product_key,count(*) pv_count
				  from fact_user_log_product t1,dim_date dt,dim_product dp,dim_member dm
				 where t1.log_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1
			where t.product_key = t1.product_key(+)
           order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 排序获取某一页的商品排行-活动销量 -->
	<select id="r_queryProduct_PayCount" parameterType="java.util.Map" resultType="string">
		select itemnumber
		  from (
		select a.*,rownum rn
		  from (
		select t.itemnumber,nvl(t1.pay_count,0) pay_count
		  from (select t.itemnumber,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
			  	(select t1.product_key,nvl(sum(t1.product_count),0) pay_count
				  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.payment_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   and t1.activity_key = da.activity_key
				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1
			where t.product_key = t1.product_key(+)
		   order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 排序获取某一页的商品排行-活动销售总额 -->
	<select id="r_queryProduct_PayMoney" parameterType="java.util.Map" resultType="string">
		select itemnumber
		  from (
		select a.*,rownum rn
		  from (
		select t.itemnumber,nvl(t1.product_money,0)+nvl(t2.pre_first_money,0) pay_money
		  from (select t.itemnumber,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
        	   (select t1.product_key,nvl(sum(t1.pay_money),0) product_money
		          from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		         where t1.payment_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
 				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
  				   and t1.activity_key = da.activity_key
  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
  				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1,
			   (select t1.product_key,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
				  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.order_key = t2.order_key
				   and t1.payment_date_key = dt.date_key
				   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   and t2.activity_key = da.activity_key
  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
  				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t2
		 where t.product_key = t1.product_key(+)
		   and t.product_key = t2.product_key(+)
           order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 排序获取某一页的商品排行-活动买家数 -->
	<select id="r_queryProduct_PurchaseNumber" parameterType="java.util.Map" resultType="string">
		select itemnumber
		  from (
		select a.*,rownum rn
		  from (
		select t.itemnumber,nvl(t1.purchase_number,0) purchase_number
		  from (select t.itemnumber,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
			  	(select t1.product_key,count(distinct t1.member_key) purchase_number
				  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.payment_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   and t1.activity_key = da.activity_key
				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1
			where t.product_key = t1.product_key(+)
		   order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 查询默认排序的商品排行 -->
	<select id="r_queryProductListBy_Default" parameterType="java.util.Map" resultType="string">
		select itemnumber
		  from (
		select a.*,rownum rn
		  from (
		select t.itemnumber,nvl(t1.product_money,0)+nvl(t2.pre_first_money,0) pay_money
		  from (select t.itemnumber,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
        	   (select t1.product_key,nvl(sum(t1.pay_money),0) product_money
		          from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		         where t1.payment_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
 				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
  				   and t1.activity_key = da.activity_key
  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
  				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1,
			   (select t1.product_key,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
				  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.order_key = t2.order_key
				   and t1.payment_date_key = dt.date_key
				   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   and t2.activity_key = da.activity_key
  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
  				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t2
		 where t.product_key = t1.product_key(+)
		   and t.product_key = t2.product_key(+)
           order by pay_money desc) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 查询活动商品列表 -->
	<select id="r_queryProductList" parameterType="java.util.Map" resultType="java.util.Map">
		select itemnumber,
			   product_name,
			   product_img_url,
			   activity_product_id,
			   activity_discount,
			   activity_service_discount,
			   activity_type
		  from (select t.itemnumber,t.product_name,t.product_img_url,t1.activity_product_id,t1.activity_discount,da.activity_service_discount,da.activity_type
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t
		 where itemnumber in
		 <foreach collection="productList" item="item" open="(" close=")" separator=",">
		 	#{item,jdbcType=VARCHAR}
		 </foreach>
		 order by decode(t.itemnumber
		 <foreach collection="productList" item="item" index="_index" open="," close="" separator=",">
            #{item},${_index}
         </foreach>)
	</select>
	<!-- 根据活动商品ID查询商品阶梯优惠信息 -->
	<select id="queryProductLadderDiscount" parameterType="java.lang.Long" resultType="java.util.HashMap">
		select
			ps.activity_product_id,
			ps.product_itemnumber,
			ps.product_spec,
			ps.min_count,
			getsaleprice_adoptcost(ps.product_itemnumber,ps.prize) as prize
		from tbl_activity_product_specprize ps
		where ps.activity_product_id in
		<foreach collection="list" open="(" close=")" item="item" separator="union all">
			select #{item.ACTIVITY_PRODUCT_ID,jdbcType=INTEGER} as activity_product_id
			  from dual
		</foreach>
		order by product_spec,min_count asc
	</select>
	<!-- 商品列表-获取商品活动价 -->
	<select id="queryProductHdPrice" parameterType="java.util.Map" resultType="java.util.Map">
		select a.itemnumber,getProduct_OldHdPrice_Qj(A.ITEMNUMBER,A.ACTIVITY_DISCOUNT,A.ACTIVITY_SERVICE_DISCOUNT) hd_price
		  from (
		  	<foreach collection="list" item="item" open="(" separator="union all" close=")">
		  		select #{item.ITEMNUMBER,jdbcType=VARCHAR} as itemnumber,
		  			   #{item.ACTIVITY_DISCOUNT,jdbcType=INTEGER} as activity_discount,
		  			   #{item.ACTIVITY_SERVICE_DISCOUNT,jdbcType=INTEGER} as activity_service_discount
		  		  from dual
		  	</foreach>
		  ) a
	</select>
	<!-- 商品列表-浏览量 -->
	<select id="r_queryProductPvCount" parameterType="java.util.Map" resultType="java.util.Map">
		select dp.itemnumber,count(*) pv_count
		  from fact_user_log_product t1,dim_date dt,dim_product dp,dim_member dm
		 where t1.log_date_key = dt.date_key
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   and dp.itemnumber in
		   <foreach collection="productList" item="item" open="(" close=")" separator=",">
		 	#{item,jdbcType=VARCHAR}
		   </foreach>
		   <include refid="dw_public_psy_where"/>
		   group by dp.itemnumber
	</select>
	<!-- 商品列表-活动销量，活动销售总额，活动买家数 -->
	<select id="r_queryProduct_PayPurchaseNumberCountMoney" parameterType="java.util.Map" resultType="java.util.Map">
		select dp.itemnumber,count(distinct t1.member_key) purchase_number,nvl(sum(t1.product_count),0) pay_count,nvl(sum(t1.pay_money),0) pay_money
          from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
         where t1.payment_date_key = dt.date_key
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   and dp.itemnumber in
		   <foreach collection="productList" item="item" open="(" close=")" separator=",">
		 	#{item,jdbcType=VARCHAR}
		   </foreach>
		   <include refid="dw_public_psy_where"/>
		   group by dp.itemnumber
	</select>
	<!-- 商品列表-预定订单的定金 -->
	<select id="r_queryProduct_PreFirstMoney" parameterType="java.util.Map" resultType="java.util.Map">
		select dp.itemnumber,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
		  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.order_key = t2.order_key
		   and t1.payment_date_key = dt.date_key
		   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   and t2.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   and dp.itemnumber in
		   <foreach collection="productList" item="item" open="(" close=")" separator=",">
		 	#{item,jdbcType=VARCHAR}
		   </foreach>
		   <include refid="dw_public_psy_where"/>
		   group by dp.itemnumber
	</select>
							<!-- #################        活动分析         ################ -->
	<!-- 活动日历 -->
	<select id="r_queryActivityAnalysisList" parameterType="java.util.Map" resultType="java.util.Map">
		select *
		  from (select da.activity_key,
		  	           da.activity_id,
					   da.activity_name,
					   da.activity_type,
		  			   case when da.begin_date &gt; sysdate then 0
						    when da.end_date &lt; sysdate then 2
					   	    else 1 end as start_state,
		               to_char(create_date,'mm') month_date
				  from dim_activity da
			     where to_char(da.create_date,'yyyy') = #{year,jdbcType=INTEGER}
			       and da.is_delete = 1) t
	     <where>
			<if test="start_state != null">
				and t.start_state IN
	            <foreach item="item" collection="start_state" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="activity_type != null and activity_type != ''">
				and t.activity_type = #{activity_type,jdbcType=INTEGER}
			</if>
			<if test="site_id != null and site_id != ''">
				and exists (select 1 from fact_activity_site where activity_key = t.activity_key
					 and site_key in (select site_key from dim_site where site_id=#{site_id,jdbcType=INTEGER}))
			</if>
	     </where>
	</select>
							<!-- #################        活动分析详情         ################ -->
	<!-- 活动商品销量、商品销售总额、支付买家数 -->
	<select id="r_queryActivityPurchaseNumberCountMoney" parameterType="java.util.Map" resultType="java.util.Map">
		select count(distinct t1.member_key) purchase_number,nvl(sum(t1.product_count),0) pay_count,nvl(sum(t1.pay_money),0) pay_money
		  from fact_order_product t1,dim_product dp,dim_member dm,dim_activity da
		 where t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 预定订单的定金 -->
	<select id="r_queryActivityProductPreFirstMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0)
		  from fact_pre_order_product t1 ,fact_pre_order t2,dim_product dp,dim_member dm,dim_activity da
		 where t1.order_key = t2.order_key
		   and t2.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 活动未发退款总额 -->
	<select id="r_queryActivityUnsentRefundMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.product_money),0) unsend_refund_money
          from fact_aso_refund_product t1,dim_after_sales_order t,dim_product dp,dim_member dm
         where t1.after_sales_order_key = t.after_sales_order_key
           and t.after_sales_order_type = 1
           and t.refund_state = 2
           and t.refund_order_number in
           	   (select do.order_number
           	      from dim_order do,fact_order_product t2,dim_activity da
           	     where do.order_key = t2.order_key
		           and t2.activity_key = da.activity_key
		           and da.activity_id = #{activity_id,jdbcType=INTEGER}) 
           <include refid="dw_public_psy_where"/>
	</select>
	<!-- 活动成交总额 -->
	<select id="r_queryActivityPaymentMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t.payment_money),0) - nvl(sum(t.pre_earnest_money),0)
		  from fact_order t
         where order_key in
         	   (select t1.order_key
         	      from fact_order_product t1,dim_member dm,dim_activity da
         	     where t1.activity_key = da.activity_key
				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
				   and t1.member_key = dm.member_key
		           <include refid="dw_public_py_where"/>)
	</select>
	<!-- 预定订单的定金 -->
	<select id="r_queryActivityPreFirstMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.earnest_money),0)
		  from fact_pre_order t1,dim_member dm,dim_activity da
		 where t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   and t1.member_key = dm.member_key
		   <include refid="dw_public_py_where"/>
	</select>
							<!-- #################        活动趋势分析         ################ -->
	<!-- 活动商品访客数 -->
	<select id="r_queryActivityTrend_ProductVisitorCount" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(distinct t1.member_key) 
		  from fact_user_log_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.log_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 活动支付买家数 -->
	<select id="r_queryActivityTrend_PayPurchaseNumber" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(distinct t1.member_key)
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.payment_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 活动支付件数 -->
	<select id="r_queryActivityTrend_PayCount" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.product_count),0) 
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.payment_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 折线图 活动商品访客数 -->
	<select id="r_queryActivityTrend_ProductVisitorCount_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.date_values as create_date,count(distinct t1.member_key) visitor_count
		  from fact_user_log_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.log_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
           group by dt.date_values
	</select>
	<!-- 折线图 活动销售总额，活动支付件数，活动支付买家数 -->
	<select id="r_queryActivityTrend_PayPurchaseNumberCountMoney_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.date_values as create_date,count(distinct t1.member_key) purchase_number,nvl(sum(t1.product_count),0) pay_count,nvl(sum(t1.pay_money),0) pay_money
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.payment_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
           group by dt.date_values
	</select>
	<!-- 折线图 预定订单的定金 -->
	<select id="r_queryActivityTrend_PreFirstMoney_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.date_values as create_date,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
		  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.order_key = t2.order_key
		   and t1.payment_date_key = dt.date_key
		   and t2.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
           group by dt.date_values
	</select>
	<!-- 折线图 活动支付单笔数 -->
	<select id="r_queryActivityTrend_PayNum_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.date_values as create_date,count(distinct t1.order_key) pay_num
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.payment_date_key = dt.date_key
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
           group by dt.date_values
	</select>
	<!-- 折线图 商品分享次数 -->
	<select id="r_queryActivityTrend_ShareCount_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.date_values as create_date,count(distinct t1.member_key) share_count
		  from fact_user_log_operate t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.log_date_key = dt.date_key
		   and t1.operate_key = 2
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
           group by dt.date_values
	</select>
	<!-- 折线图 分享支付单数 -->
	<select id="r_queryActivityTrend_SharePayNum_Chart" parameterType="java.util.Map" resultType="java.util.Map">
		select dt.date_values as create_date,count(distinct t1.order_key) share_pay_num
		  from fact_order_product t1,dim_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.order_key = t2.order_key
		   and t1.payment_date_key = dt.date_key
		   and t2.share_type = 2
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
           group by dt.date_values
	</select>
							<!-- #################        销售占比         ################ -->
	<!-- 平台商品销售额 -->
	<select id="r_queryPayMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.pay_money),0) 
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm
		 where t1.payment_date_key = dt.date_key
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 平台商品定金 -->
	<select id="r_queryPreFirstMoney" parameterType="java.util.Map" resultType="java.lang.Float">
		select nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0)
		  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm
		 where t1.order_key = t2.order_key
		   and t1.payment_date_key = dt.date_key
		   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
	</select>
	<!-- 平台支付单数 -->
	<select id="r_queryPayNum" parameterType="java.util.Map" resultType="java.lang.Float">
		select count(distinct t1.order_key) 
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm
		 where t1.payment_date_key = dt.date_key
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   <include refid="dw_public_psy_where"/>
	</select>
							<!-- #################        活动商品排行         ################ -->
	<!-- 排序获取某一页的商品排行-未发退款总额 -->
	<select id="r_queryProduct_UnsendRefundMoney" parameterType="java.util.Map" resultType="string">
		select itemnumber
		  from (
		select a.*,rownum rn
		  from (
		select t.itemnumber,nvl(t1.unsend_refund_money,0) unsend_refund_money
		  from (select t.itemnumber,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
		  	   (select t1.product_key,nvl(sum(t1.product_money),0) unsend_refund_money
		          from fact_aso_refund_product t1,dim_after_sales_order t,dim_date dt,dim_product dp,dim_member dm
		         where t1.aso_refund_date_key = dt.date_key
                   and t1.after_sales_order_key = t.after_sales_order_key
                   and t.after_sales_order_type = 1
		           and t.refund_state = 2
                   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
                   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
                   and t.refund_order_number in
                       (select do.order_number
                   	      from dim_order do,fact_order_product t2,dim_activity da
                   	     where do.order_key = t2.order_key
		                   and t2.activity_key = da.activity_key
		                   and da.activity_id = #{activity_id,jdbcType=INTEGER})
                   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
                   <include refid="dw_public_psy_where"/>
                   group by t1.product_key) t1
			where t.product_key = t1.product_key(+)
           order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 未发退款总额 -->
	<select id="r_queryProductUnsendRefundMoney" parameterType="java.util.Map" resultType="java.util.Map">
		select dp.itemnumber,nvl(sum(t1.product_money),0) unsent_return_money
          from fact_aso_refund_product t1,dim_after_sales_order t,dim_date dt,dim_product dp,dim_member dm
         where t1.aso_refund_date_key = dt.date_key
           and t1.after_sales_order_key = t.after_sales_order_key
           and t.after_sales_order_type = 1
           and t.refund_state = 2
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
           and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
           and t.refund_order_number in 
           	   (select do.order_number
           	      from dim_order do,fact_order_product t2,dim_activity da
           	     where do.order_key = t2.order_key
		           and t2.activity_key = da.activity_key
		           and da.activity_id = #{activity_id,jdbcType=INTEGER})
           <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   and dp.itemnumber in
		   <foreach collection="productList" item="item" open="(" close=")" separator=",">
		 	#{item,jdbcType=VARCHAR}
		   </foreach>
		   <include refid="dw_public_psy_where"/>
		   group by dp.itemnumber
	</select>
							<!-- #################        品牌排行         ################ -->
	<!-- 品牌总数 -->
	<select id="r_queryBrandCount" parameterType="java.util.Map" resultType="int">
		select count(distinct t.brand_id)
		  from dim_product t,fact_activity_product t1,dim_activity da
         where t.product_key = t1.product_key
           and t1.activity_key = da.activity_key
   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		 <include refid="dw_public_ps_where"/>
	</select>
	<!-- 排序获取某一页的品牌排行-活动销量 -->
	<select id="r_queryBrand_PayCount" parameterType="java.util.Map" resultType="string">
		select brand_id
		  from (
		select a.*,rownum rn
		  from (
		select t.brand_id,nvl(sum(t1.product_count),0) pay_count
		  from (select t.brand_id,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
			  	(select t1.product_key,nvl(sum(t1.product_count),0) product_count
				  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.payment_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   and t1.activity_key = da.activity_key
				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1
		   where t.product_key = t1.product_key(+)
		   group by t.brand_id
		   order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 排序获取某一页的品牌排行-活动销售总额 -->
	<select id="r_queryBrand_PayMoney" parameterType="java.util.Map" resultType="string">
		select brand_id
		  from (
		select a.*,rownum rn
		  from (
		select t.brand_id,nvl(sum(t1.product_money),0)+nvl(sum(t2.pre_first_money),0) pay_money
		  from (select t.brand_id,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
        	   (select t1.product_key,nvl(sum(t1.pay_money),0) product_money
		          from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		         where t1.payment_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
 				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
  				   and t1.activity_key = da.activity_key
  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
  				   <if test="site_id != null">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1,
			   (select t1.product_key,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
				  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.order_key = t2.order_key
				   and t1.payment_date_key = dt.date_key
				   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   and t2.activity_key = da.activity_key
  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
  				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t2
		 where t.product_key = t1.product_key(+)
		   and t.product_key = t2.product_key(+)
		   group by t.brand_id
           order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 排序获取某一页的品牌排行-活动买家数 -->
	<select id="r_queryBrand_PayPurchaseNumber" parameterType="java.util.Map" resultType="string">
		select brand_id
		  from (
		select a.*,rownum rn
		  from (
		select t.brand_id,nvl(sum(t1.purchase_number),0) purchase_number
		  from (select t.brand_id,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
			  	(select t1.product_key,count(distinct t1.member_key) purchase_number
				  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.payment_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   and t1.activity_key = da.activity_key
				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1
		   where t.product_key = t1.product_key(+)
		   group by t.brand_id
		   order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 查询默认排序的品牌列表 -->
	<select id="r_queryBrandListBy_Default" parameterType="java.util.Map" resultType="string">
		select brand_id
		  from (
		select a.*,rownum rn
		  from (
		select t.brand_id,nvl(sum(t1.product_money),0)+nvl(sum(t2.pre_first_money),0) pay_money
		  from (select t.brand_id,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
        	   (select t1.product_key,nvl(sum(t1.pay_money),0) product_money
		          from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		         where t1.payment_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
 				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
  				   and t1.activity_key = da.activity_key
  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
  				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1,
			   (select t1.product_key,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
				  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.order_key = t2.order_key
				   and t1.payment_date_key = dt.date_key
				   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   and t2.activity_key = da.activity_key
  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
  				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t2
		 where t.product_key = t1.product_key(+)
		   and t.product_key = t2.product_key(+)
		   group by t.brand_id
           order by pay_money desc) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 品牌列表 -->
	<select id="r_queryBrandList" parameterType="java.util.Map" resultType="java.util.Map">
		select brand_id,
			   case when t.brand_name is null then '定制品牌'
			   else t.brand_name end brand_name,
			   (select logo from qx_dic_product_brand where id = t.brand_id) brand_logo
		  from (select t.brand_id,t.brand_name
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>
		        group by t.brand_id,t.brand_name) t
		 where t.brand_id in 
		 <foreach collection="brandList" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=INTEGER}
         </foreach>
		 order by
			decode(t.brand_id
				<foreach collection="brandList" item="item" index="_index" open="," close="" separator=",">
		            #{item},${_index}
		        </foreach>)
	</select>
	<!-- 品牌列表-活动销量，活动销售总额，活动买家数 -->
	<select id="r_queryBrand_PayPurchaseNumberCountMoney" parameterType="java.util.Map" resultType="java.util.Map">
		select dp.brand_id,count(distinct t1.member_key) purchase_number,nvl(sum(t1.product_count),0) pay_count,nvl(sum(t1.pay_money),0) pay_money
          from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
         where t1.payment_date_key = dt.date_key
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   and dp.brand_id in
		   <foreach collection="brandList" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=INTEGER}
           </foreach>
		   <include refid="dw_public_psy_where"/>
		   group by dp.brand_id
	</select>
	<!-- 品牌列表-预定订单的定金 -->
	<select id="r_queryBrand_PreFirstMoney" parameterType="java.util.Map" resultType="java.util.Map">
		select dp.brand_id,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
		  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.order_key = t2.order_key
		   and t1.payment_date_key = dt.date_key
		   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   and t2.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   and dp.brand_id in
		   <foreach collection="brandList" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=INTEGER}
           </foreach>
		   <include refid="dw_public_psy_where"/>
		   group by dp.brand_id
	</select>
							<!-- #################        入驻商排行         ################ -->
	<!-- 入驻商总数 -->
	<select id="r_queryStationedCount" parameterType="java.util.Map" resultType="int">
		select count(distinct t.stationed_user_id)
		  from dim_product t,fact_activity_product t1,dim_activity da
         where t.product_key = t1.product_key
           and t1.activity_key = da.activity_key
   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		 <include refid="dw_public_ps_where"/>
	</select>
	<!-- 排序获取某一页的入驻商排行-活动销量 -->
	<select id="r_queryStationed_PayCount" parameterType="java.util.Map" resultType="string">
		select stationed_user_id
		  from (
		select a.*,rownum rn
		  from (
		select t.stationed_user_id,nvl(sum(t1.product_count),0) pay_count
		  from (select t.stationed_user_id,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
			  	(select t1.product_key,nvl(sum(t1.product_count),0) product_count
				  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.payment_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   and t1.activity_key = da.activity_key
				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1
		   where t.product_key = t1.product_key(+)
		   group by t.stationed_user_id
		   order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 排序获取某一页的入驻商排行-活动销售总额 -->
	<select id="r_queryStationed_PayMoney" parameterType="java.util.Map" resultType="string">
		select stationed_user_id
		  from (
		select a.*,rownum rn
		  from (
		select t.stationed_user_id,nvl(sum(t1.product_money),0)+nvl(sum(t2.pre_first_money),0) pay_money
		  from (select t.stationed_user_id,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
        	   (select t1.product_key,nvl(sum(t1.pay_money),0) product_money
		          from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		         where t1.payment_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
 				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
  				   and t1.activity_key = da.activity_key
  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
  				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1,
			   (select t1.product_key,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
				  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.order_key = t2.order_key
				   and t1.payment_date_key = dt.date_key
				   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   and t2.activity_key = da.activity_key
  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
  				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t2
		 where t.product_key = t1.product_key(+)
		   and t.product_key = t2.product_key(+)
		   group by t.stationed_user_id
           order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 排序获取某一页的入驻商排行-活动买家数 -->
	<select id="r_queryStationed_PayPurchaseNumber" parameterType="java.util.Map" resultType="string">
		select stationed_user_id
		  from (
		select a.*,rownum rn
		  from (
		select t.stationed_user_id,nvl(sum(t1.purchase_number),0) purchase_number
		  from (select t.stationed_user_id,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
			  	(select t1.product_key,count(distinct t1.member_key) purchase_number
				  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.payment_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   and t1.activity_key = da.activity_key
				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1
		   where t.product_key = t1.product_key(+)
		   group by t.stationed_user_id
		   order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 查询默认排序的入驻商列表 -->
	<select id="r_queryStationedListBy_Default" parameterType="java.util.Map" resultType="string">
		select stationed_user_id
		  from (
		select a.*,rownum rn
		  from (
		select t.stationed_user_id,nvl(sum(t1.product_money),0)+nvl(sum(t2.pre_first_money),0) pay_money
		  from (select t.stationed_user_id,t.product_key
		          from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>) t,
        	   (select t1.product_key,nvl(sum(t1.pay_money),0) product_money
		          from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		         where t1.payment_date_key = dt.date_key
		           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
 				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
  				   and t1.activity_key = da.activity_key
  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
  				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t1,
			   (select t1.product_key,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
				  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
				 where t1.order_key = t2.order_key
				   and t1.payment_date_key = dt.date_key
				   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
				   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
				   and t2.activity_key = da.activity_key
  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
  				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				   <include refid="dw_public_psy_where"/>
				   group by t1.product_key) t2
		 where t.product_key = t1.product_key(+)
		   and t.product_key = t2.product_key(+)
		   group by t.stationed_user_id
           order by pay_money desc) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
           where rn &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	<!-- 入驻商列表 -->
	<select id="r_queryStationedList" parameterType="java.util.Map" resultType="java.util.Map">
		select stationed_user_id,stationed_user_name
		  from (select t.stationed_user_id,t.stationed_user_name
				  from dim_product t,fact_activity_product t1,dim_activity da
		         where t.product_key = t1.product_key
		           and t1.activity_key = da.activity_key
		   		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
           		   <include refid="dw_public_ps_where"/>
				  group by t.stationed_user_id,t.stationed_user_name) t
		  where t.stationed_user_id in
		 <foreach collection="stationedList" item="item" open="(" close=")" separator=",">
		 	#{item,jdbcType=INTEGER}
		 </foreach>
		 order by decode(t.stationed_user_id
		 <foreach collection="stationedList" item="item" index="_index" open="," close="" separator=",">
            #{item},${_index}
         </foreach>)
	</select>
	<!-- 入驻商列表-活动销量，活动销售总额，活动买家数 -->
	<select id="r_queryStationed_PayPurchaseNumberCountMoney" parameterType="java.util.Map" resultType="java.util.Map">
		select dp.stationed_user_id,count(distinct t1.member_key) purchase_number,nvl(sum(t1.product_count),0) pay_count,nvl(sum(t1.pay_money),0) pay_money
          from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
         where t1.payment_date_key = dt.date_key
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   and dp.stationed_user_id in
		   <foreach collection="stationedList" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=INTEGER}
           </foreach>
		   <include refid="dw_public_psy_where"/>
		   group by dp.stationed_user_id
	</select>
	<!-- 入驻商列表-预定订单的定金 -->
	<select id="r_queryStationed_PreFirstMoney" parameterType="java.util.Map" resultType="java.util.Map">
		select dp.stationed_user_id,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
		  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.order_key = t2.order_key
		   and t1.payment_date_key = dt.date_key
		   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   and t2.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   <if test="site_id != null and site_id != ''">
		   and dm.site_id = #{site_id,jdbcType=INTEGER}
		   </if>
		   and dp.stationed_user_id in
		   <foreach collection="stationedList" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=INTEGER}
           </foreach>
		   <include refid="dw_public_psy_where"/>
		   group by dp.stationed_user_id
	</select>
							<!-- #################        活动会员排行         ################ -->
	<!-- 查询活动参与会员的类型 -->
	<select id="r_queryActivityMemberType" parameterType="java.util.Map" resultType="int">
		select case when t1.group_key = 0 then 1
		       else 2 end member_type
		  from fact_activity_detail t1,dim_activity da
		 where t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
	</select>
	<!-- 会员总数 -->
	<select id="r_queryUserCount" parameterType="java.util.Map" resultType="int">
		<choose>
			<when test="type == 2">
				select count(1)
				  from fact_activity_detail t1,fact_user_group_detail t2,dim_activity da,dim_member dm
				 where t1.activity_key = da.activity_key
		   	       and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   	       and t1.group_key = t2.group_key
		   	       and t2.member_key = dm.member_key
		   	       <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
		   	       <include refid="dw_public_py_where"/>
			</when>
			<otherwise>
				select count(1)
				  from dim_member dm
				 where 1=1
				   <if test="site_id != null and site_id != ''">
				   and dm.site_id = #{site_id,jdbcType=INTEGER}
				   </if>
				 <include refid="dw_public_py_where"/>
			</otherwise>
		</choose>
	</select>
	<!-- 排序获取某一页的会员排行-购买数量 -->
	<select id="r_queryUser_PayCount" parameterType="java.util.Map" resultType="string">
		<choose>
			<when test="type == 2">
				select user_id
				  from (
				select a.*,rownum rn
				  from (
				select t.user_id,nvl(t1.pay_count,0) pay_count
				  from (select dm.member_key,dm.user_id
						  from fact_activity_detail t1,fact_user_group_detail t2,dim_activity da,dim_member dm
						 where t1.activity_key = da.activity_key
				   	       and da.activity_id = #{activity_id,jdbcType=INTEGER}
				   	       and t1.group_key = t2.group_key
				   	       and t2.member_key = dm.member_key
				   	       <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
				   	       <include refid="dw_public_py_where"/>) t,
					  	(select t1.member_key,nvl(sum(t1.product_count),0) pay_count
						  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
						 where t1.payment_date_key = dt.date_key
				           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
						   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
						   and t1.activity_key = da.activity_key
						   and da.activity_id = #{activity_id,jdbcType=INTEGER}
						   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						   <include refid="dw_public_psy_where"/>
						   group by t1.member_key) t1
					where t.member_key = t1.member_key(+)
				   order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
		           where rn &gt;#{start_rownum,jdbcType=INTEGER}
			</when>
			<otherwise>
				select user_id
				  from (
				select a.*,rownum rn
				  from (
				select t.user_id,nvl(t1.pay_count,0) pay_count
				  from (select member_key,user_id
						  from dim_member dm
						 where 1=1
						   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						 <include refid="dw_public_py_where"/>) t,
					  	(select t1.member_key,nvl(sum(t1.product_count),0) pay_count
						  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
						 where t1.payment_date_key = dt.date_key
				           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
						   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
						   and t1.activity_key = da.activity_key
						   and da.activity_id = #{activity_id,jdbcType=INTEGER}
						   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						   <include refid="dw_public_psy_where"/>
						   group by t1.member_key) t1
					where t.member_key = t1.member_key(+)
				   order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
		           where rn &gt;#{start_rownum,jdbcType=INTEGER}
			</otherwise>
		</choose>
	</select>
	<!-- 排序获取某一页的会员排行-支付商品总额 -->
	<select id="r_queryUser_PayMoney" parameterType="java.util.Map" resultType="string">
		<choose>
			<when test="type == 2">
				select user_id
				  from (
				select a.*,rownum rn
				  from (
				select t.user_id,nvl(t1.product_money,0)+nvl(t2.pre_first_money,0) pay_money
				  from (select dm.member_key,dm.user_id
						  from fact_activity_detail t1,fact_user_group_detail t2,dim_activity da,dim_member dm
						 where t1.activity_key = da.activity_key
				   	       and da.activity_id = #{activity_id,jdbcType=INTEGER}
				   	       and t1.group_key = t2.group_key
				   	       and t2.member_key = dm.member_key
				   	       <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
				   	       <include refid="dw_public_py_where"/>) t,
					  	(select t1.member_key,nvl(sum(t1.pay_money),0) product_money
						  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
						 where t1.payment_date_key = dt.date_key
				           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
						   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
						   and t1.activity_key = da.activity_key
						   and da.activity_id = #{activity_id,jdbcType=INTEGER}
						   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						   <include refid="dw_public_psy_where"/>
						   group by t1.member_key) t1,
						(select t1.member_key,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
						  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
						 where t1.order_key = t2.order_key
						   and t1.payment_date_key = dt.date_key
						   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
						   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
						   and t2.activity_key = da.activity_key
		  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		  				   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						   <include refid="dw_public_psy_where"/>
						   group by t1.member_key) t2
					where t.member_key = t1.member_key(+)
					  and t.member_key = t2.member_key(+)
				   order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
		           where rn &gt;#{start_rownum,jdbcType=INTEGER}
			</when>
			<otherwise>
				select user_id
				  from (
				select a.*,rownum rn
				  from (
				select t.user_id,nvl(t1.product_money,0)+nvl(t2.pre_first_money,0) pay_money
				  from (select member_key,user_id
						  from dim_member dm
						 where 1=1
						 <if test="site_id != null and site_id != ''">
					     and dm.site_id = #{site_id,jdbcType=INTEGER}
					     </if>
						 <include refid="dw_public_py_where"/>) t,
					  	(select t1.member_key,nvl(sum(t1.pay_money),0) product_money
						  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
						 where t1.payment_date_key = dt.date_key
				           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
						   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
						   and t1.activity_key = da.activity_key
						   and da.activity_id = #{activity_id,jdbcType=INTEGER}
						   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						   <include refid="dw_public_psy_where"/>
						   group by t1.member_key) t1,
						(select t1.member_key,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
						  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
						 where t1.order_key = t2.order_key
						   and t1.payment_date_key = dt.date_key
						   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
						   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
						   and t2.activity_key = da.activity_key
		  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		  				   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						   <include refid="dw_public_psy_where"/>
						   group by t1.member_key) t2
					where t.member_key = t1.member_key(+)
					  and t.member_key = t2.member_key(+)
				   order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
		           where rn &gt;#{start_rownum,jdbcType=INTEGER}
			</otherwise>
		</choose>
	</select>
	<!-- 排序获取某一页的会员排行-未发退款商品总额 -->
	<select id="r_queryUser_UnsendRefundMoney" parameterType="java.util.Map" resultType="string">
		<choose>
			<when test="type == 2">
				select user_id
				  from (
				select a.*,rownum rn
				  from (
				select t.user_id,nvl(t1.unsend_refund_money,0) unsend_refund_money
				  from (select dm.member_key,dm.user_id
						  from fact_activity_detail t1,fact_user_group_detail t2,dim_activity da,dim_member dm
						 where t1.activity_key = da.activity_key
				   	       and da.activity_id = #{activity_id,jdbcType=INTEGER}
				   	       and t1.group_key = t2.group_key
				   	       and t2.member_key = dm.member_key
				   	       <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
				   	       <include refid="dw_public_py_where"/>) t,
					  	(select t1.member_key,nvl(sum(t1.product_money),0) unsend_refund_money
				          from fact_aso_refund_product t1,dim_after_sales_order t,dim_date dt,dim_product dp,dim_member dm
				         where t1.aso_refund_date_key = dt.date_key
		                   and t1.after_sales_order_key = t.after_sales_order_key
		                   and t.after_sales_order_type = 1
				           and t.refund_state = 2
		                   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		                   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		                   and t.refund_order_number in
		                   	   (select do.order_number
		                   	      from dim_order do,fact_order_product t2,dim_activity da
		                   	     where do.order_key = t2.order_key
				                   and t2.activity_key = da.activity_key
				                   and da.activity_id = #{activity_id,jdbcType=INTEGER})
		                   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
		                   <include refid="dw_public_psy_where"/>
						   group by t1.member_key) t1
					where t.member_key = t1.member_key(+)
				   order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
		           where rn &gt;#{start_rownum,jdbcType=INTEGER}
			</when>
			<otherwise>
				select user_id
				  from (
				select a.*,rownum rn
				  from (
				select t.user_id,nvl(t1.unsend_refund_money,0) unsend_refund_money
				  from (select member_key,user_id
						  from dim_member dm
						 where 1=1
						 <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						 <include refid="dw_public_py_where"/>) t,
					  	(select t1.member_key,nvl(sum(t1.product_money),0) unsend_refund_money
				          from fact_aso_refund_product t1,dim_after_sales_order t,dim_date dt,dim_product dp,dim_member dm
				         where t1.aso_refund_date_key = dt.date_key
		                   and t1.after_sales_order_key = t.after_sales_order_key
		                   and t.after_sales_order_type = 1
				           and t.refund_state = 2
		                   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		                   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		                   and t.refund_order_number in
		                       (select do.order_number
		                   	      from dim_order do,fact_order_product t2,dim_activity da
		                   	     where do.order_key = t2.order_key
				                   and t2.activity_key = da.activity_key
				                   and da.activity_id = #{activity_id,jdbcType=INTEGER})
		                   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
		                   <include refid="dw_public_psy_where"/>
						   group by t1.member_key) t1
					where t.member_key = t1.member_key(+)
				   order by ${sort} ${sort_by}) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
		           where rn &gt;#{start_rownum,jdbcType=INTEGER}
			</otherwise>
		</choose>
	</select>
	<!-- 查询默认排序的会员列表 -->
	<select id="r_queryUserListBy_Default" parameterType="java.util.Map" resultType="string">
		<choose>
			<when test="type == 2">
				select user_id
				  from (
				select a.*,rownum rn
				  from (
				select t.user_id,nvl(t1.product_money,0)+nvl(t2.pre_first_money,0) pay_money
				  from (select dm.member_key,dm.user_id
						  from fact_activity_detail t1,fact_user_group_detail t2,dim_activity da,dim_member dm
						 where t1.activity_key = da.activity_key
				   	       and da.activity_id = #{activity_id,jdbcType=INTEGER}
				   	       and t1.group_key = t2.group_key
				   	       and t2.member_key = dm.member_key
				   	       <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
				   	       <include refid="dw_public_py_where"/>) t,
					  	(select t1.member_key,nvl(sum(t1.pay_money),0) product_money
						  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
						 where t1.payment_date_key = dt.date_key
				           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
						   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
						   and t1.activity_key = da.activity_key
						   and da.activity_id = #{activity_id,jdbcType=INTEGER}
						   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						   <include refid="dw_public_psy_where"/>
						   group by t1.member_key) t1,
						(select t1.member_key,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
						  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
						 where t1.order_key = t2.order_key
						   and t1.payment_date_key = dt.date_key
						   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
						   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
						   and t2.activity_key = da.activity_key
		  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		  				   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						   <include refid="dw_public_psy_where"/>
						   group by t1.member_key) t2
					where t.member_key = t1.member_key(+)
					  and t.member_key = t2.member_key(+)
				   order by pay_money desc) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
		           where rn &gt;#{start_rownum,jdbcType=INTEGER}
			</when>
			<otherwise>
				select user_id
				  from (
				select a.*,rownum rn
				  from (
				select t.user_id,nvl(t1.product_money,0)+nvl(t2.pre_first_money,0) pay_money
				  from (select member_key,user_id
						  from dim_member dm
						 where 1=1
						 <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						 <include refid="dw_public_py_where"/>) t,
					  	(select t1.member_key,nvl(sum(t1.pay_money),0) product_money
						  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
						 where t1.payment_date_key = dt.date_key
				           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
						   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
						   and t1.activity_key = da.activity_key
						   and da.activity_id = #{activity_id,jdbcType=INTEGER}
						   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						   <include refid="dw_public_psy_where"/>
						   group by t1.member_key) t1,
						(select t1.member_key,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
						  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
						 where t1.order_key = t2.order_key
						   and t1.payment_date_key = dt.date_key
						   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
						   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
						   and t2.activity_key = da.activity_key
		  				   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		  				   <if test="site_id != null and site_id != ''">
						   and dm.site_id = #{site_id,jdbcType=INTEGER}
						   </if>
						   <include refid="dw_public_psy_where"/>
						   group by t1.member_key) t2
					where t.member_key = t1.member_key(+)
					  and t.member_key = t2.member_key(+)
				   order by pay_money desc) a where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
		           where rn &gt;#{start_rownum,jdbcType=INTEGER}
			</otherwise>
		</choose>
	</select>
	<!-- 会员列表 -->
	<select id="r_queryUserList" parameterType="java.util.Map" resultType="java.util.Map">
		select id as user_id,
			   login_name,
			   user_manage_name,
			   case when t.referee_user_realname is null then t.market_supervision_user_realna
               else t.referee_user_realname end yw_name
		  from qx_user_info t
		 where user_name in
		 <foreach collection="userList" item="item" open="(" close=")" separator=",">
		 	#{item,jdbcType=VARCHAR}
		 </foreach>
		 order by decode(t.user_name
		 <foreach collection="userList" item="item" index="_index" open="," close="" separator=",">
            #{item},${_index}
         </foreach>)
	</select>
	<!-- 购买数量，支付商品总额 -->
	<select id="r_queryUser_PayCountMoney" parameterType="java.util.Map" resultType="java.util.Map">
		select dm.user_id,nvl(sum(t1.pay_money),0) pay_money,nvl(sum(t1.product_count),0) pay_count
		  from fact_order_product t1,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.payment_date_key = dt.date_key
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   and t1.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   and dm.user_id in
		  <foreach collection="userList" item="item" open="(" close=")" separator=",">
			 #{item,jdbcType=VARCHAR}
		  </foreach>
		   <include refid="dw_public_psy_where"/>
		   group by dm.user_id
	</select>
	<!-- 预定订单的定金 -->
	<select id="r_queryUser_PreFirstMoney" parameterType="java.util.Map" resultType="java.util.Map">
		select dm.user_id,nvl(sum(t1.product_money*(t2.earnest_money/t2.product_money)),0) pre_first_money
		  from fact_pre_order_product t1 ,fact_pre_order t2,dim_date dt,dim_product dp,dim_member dm,dim_activity da
		 where t1.order_key = t2.order_key
		   and t1.payment_date_key = dt.date_key
		   and dt.date_short >= #{start_date,jdbcType=VARCHAR}
		   and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
		   and t2.activity_key = da.activity_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   and dm.user_id in
		  <foreach collection="userList" item="item" open="(" close=")" separator=",">
			 #{item,jdbcType=VARCHAR}
		  </foreach>
		   <include refid="dw_public_psy_where"/>
		   group by dm.user_id
	</select>
	<!-- 未发退款商品总额 -->
	<select id="r_queryUserUnsendRefundMoney" parameterType="java.util.Map" resultType="java.util.Map">
		select dm.user_id,nvl(sum(t1.product_money),0) unsend_refund_money
          from fact_aso_refund_product t1,dim_after_sales_order t,dim_date dt,dim_product dp,dim_member dm
         where t1.aso_refund_date_key = dt.date_key
           and t1.after_sales_order_key = t.after_sales_order_key
           and t.after_sales_order_type = 1
           and t.refund_state = 2
           and dt.date_short >= #{start_date,jdbcType=VARCHAR}
           and dt.date_short &lt;= #{end_date,jdbcType=VARCHAR}
           and t.refund_order_number in
	           (select do.order_number
                  from dim_order do,fact_order_product t2,dim_activity da
                 where do.order_key = t2.order_key
                   and t2.activity_key = da.activity_key
                   and da.activity_id = #{activity_id,jdbcType=INTEGER})
           and dm.user_id in
		  <foreach collection="userList" item="item" open="(" close=")" separator=",">
			 #{item,jdbcType=VARCHAR}
		  </foreach>
           <include refid="dw_public_psy_where"/>
		   group by dm.user_id
	</select>
	<!-- 查询活动商品阶梯价 -->
	<select id="r_queryActivityProductSpecpize" parameterType="java.util.Map" resultType="java.util.Map">
		select t1.product_spec,t1.min_count,t1.prize
		  from fact_activity_product_spec t1, dim_activity da,dim_product dp
		 where t1.activity_key = da.activity_key
		   and t1.product_key = dp.product_key
		   and da.activity_id = #{activity_id,jdbcType=INTEGER}
		   and dp.itemnumber = #{itemnumber,jdbcType=VARCHAR}
		 order by t1.product_spec
	</select>
	<!-- 活动站点 -->
	<resultMap type="java.util.Map" id="activitySiteMap">
		<result column="site_id" property="id"/>
        <result column="site_name" property="name"/>
	</resultMap>
	<select id="r_queryActivitySite" parameterType="java.util.Map" resultMap="activitySiteMap">
		select site_id,site_name
		  from dim_site
		 where state = 2
		 <if test="public_user_platform_type == 1">
		 	and platform_type = #{public_user_platform_type,jdbcType=INTEGER}
		 </if>
		 <if test="public_user_platform_type == 2">
		 	and platform_type = #{public_user_platform_type,jdbcType=INTEGER}
		 	and stationed_user_id = #{public_user_stationed_user_id,jdbcType=INTEGER}
		 </if>
	</select>
	
	<!-- 用户站点 -->
	<resultMap type="java.util.Map" id="userSiteMap">
		<result column="id" property="id"/>
        <result column="name" property="name"/>
	</resultMap>
	<select id="queryUserSite" parameterType="java.util.Map" resultMap="userSiteMap">
		 <if test="public_user_name != 'admin'">
         	select b.id,b.name 
         	  from tbl_sys_user_site a,tbl_site_info b 
         	 where a.site_id(+) = b.id 
         	   and a.user_id = #{public_user_id,jdbcType=INTEGER} 
         	   and b.STATE='2' 
         	 order by a.is_default asc,b.id asc 
         </if>
         <if test="public_user_name == 'admin'">
         	select id,name from tbl_site_info order by id asc 
         </if>
	</select>
</mapper>