<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tk.oms.marketing.dao.UserGroupDao">

    <!--用户模板信息搜索条件-->
    <sql id="queryListWhereByPage">
        <where>
            1=1
            <if test="group_name != '' and group_name != null">
                and ug.name like '%'|| #{group_name,jdbcType=VARCHAR} ||'%'
            </if>
            <if test="type != '' and type != null">
            	and ug.type = #{type,jdbcType=INTEGER}
            </if>
        </where>
    </sql>
    <!--分页查询用户分组列表-->
    <select id="queryListForPage" parameterType="java.util.Map" resultType="java.util.Map">
        select * from (
		    select t1.*,rownum rn from (
                select
                    ug.id, ug.name, ug.remark, ug.state,
                    to_char(ug.create_date,'yyyy-mm-dd hh24:mi:ss') as create_date,
                    (select count(ugd.user_id) from tbl_user_group_detail ugd where ug.id = ugd.group_id and ugd.activity_id = 0) as user_num,
                    ug.type
                from tbl_user_group ug
                <include refid="queryListWhereByPage" /> order by ug.create_date desc
            ) t1 where rownum &lt;= #{end_rownum,jdbcType=INTEGER}
		) where rn &gt; #{start_rownum,jdbcType=INTEGER}
    </select>

    <!--查询用户分组列表总数量-->
    <select id="queryCountForPage" parameterType="java.util.Map" resultType="int">
        select count(ug.id) from tbl_user_group ug <include refid="queryListWhereByPage"/>
    </select>

    <!--查询用户分组列表-->
    <resultMap type="java.util.Map" id="resultUserGroupList">
        <result column="id" property="id"/>
        <result column="name" property="option"/>
    </resultMap>
    <select id="queryUserGroupList" parameterType="java.util.Map" resultMap="resultUserGroupList">
        select
            ug.id, ug.name||decode(ug.state,'1','(已禁用)','') as name
        from tbl_user_group ug
        where 1=1
        <if test="state != '' and state != null">
            and ug.state = #{state,jdbcType=CHAR}
        </if>
        <if test="type != '' and type != null">
        	and ug.type = #{type,jdbcType=INTEGER}
        </if>
    </select>
	
	<resultMap type="java.util.Map" id="resultUserGroupDetail">
		<result column="id" property="id"/>
		<result column="name" property="group_name"/>
		<result column="state" property="state"/>
		<result column="user_num" property="user_num"/>
		<result column="type" property="type"/>
	</resultMap>
    <!--通过ID获取用户分组信息-->
    <select id="queryById" parameterType="long" resultMap="resultUserGroupDetail">
        select
            ug.id, ug.name, ug.remark, ug.state,
            (select count(utd.user_id) from tbl_user_group_detail utd where ug.id = utd.group_id) as user_num,
            ug.type
        from tbl_user_group ug
        where id = #{group_id,jdbcType=INTEGER}
    </select>

    <!--通过分组ID分页查询用户分组的用户列表-->
    <select id="queryUserListById" parameterType="java.util.Map" resultType="java.util.Map">
        select * from (
            select t1.*,rownum rn from (
                select
                    utd.group_id,ui.id user_id,ui.login_name,ui.user_manage_name,
                    (case ba.score when null then ' ' else (select grade_name from tbl_user_grade_info sg where min_score &lt;= ba.score and max_score &gt; ba.score and rownum &lt; = 1) end) score_grade
                from
                    tbl_user_group_detail utd
                left join tbl_user_info ui on utd.user_id = ui.id
                left join tbl_bank_account ba on utd.user_id = ba.user_id
                where
                    utd.group_id = #{group_id,jdbcType=INTEGER}
                <if test="user_name != null and user_name != ''">
                    and (ui.login_name = #{user_name,jdbcType=VARCHAR} or ui.user_manage_name = #{user_name,jdbcType=VARCHAR})
                </if>
                <choose>
                    <when test="activity_id != null and activity_id != ''">
                        and utd.activity_id = #{activity_id,jdbcType=VARCHAR}
                    </when>
                    <otherwise>
                        and utd.activity_id = 0
                    </otherwise>
                </choose>
            ) t1 where rownum &lt;= #{end_rownum,jdbcType=INTEGER}
        ) where rn &gt; #{start_rownum,jdbcType=INTEGER}
    </select>

    <!--通过分组ID分页查询用户分组的用户总数量-->
    <select id="queryUserCountById" parameterType="java.util.Map" resultType="int">
        select
          count(1)
        from tbl_user_group_detail utd
        left join tbl_user_info ui on utd.user_id = ui.id
        where utd.group_id = #{group_id,jdbcType=INTEGER}
        <if test="user_name != null and user_name != ''">
            and (ui.login_name = #{user_name,jdbcType=VARCHAR} or ui.user_manage_name = #{user_name,jdbcType=VARCHAR})
        </if>
        <choose>
            <when test="activity_id != null and activity_id != ''">
                and utd.activity_id = #{activity_id,jdbcType=VARCHAR}
            </when>
            <otherwise>
                and utd.activity_id = 0
            </otherwise>
        </choose>
    </select>

    <!--通过分组名称查询用户分组数量-->
    <select id="queryUserGroupCountByName" parameterType="java.util.Map" resultType="int">
        select count(1) from tbl_user_group where name = #{group_name,jdbcType=VARCHAR} <if test="group_id != null and group_id != 0">and id != #{group_id,jdbcType=INTEGER}</if>
    </select>

    <!--通过分组ID查询装修导航数量-->
    <select id="queryDecorateNavCountById" parameterType="java.util.Map" resultType="int">
        select count(1) from tbl_decorate_nav where user_group_id = #{group_id,jdbcType=INTEGER}
    </select>

    <!--通过分组ID查询装修组件数量-->
    <select id="queryPageModuleCountById" parameterType="java.util.Map" resultType="int">
        select count(1) from tbl_decorate_page_module where user_group_id = #{group_id,jdbcType=INTEGER}
    </select>

    <!--通过分组ID查询订货会活动数量-->
    <select id="queryActivityCountById" parameterType="java.util.Map" resultType="int">
        select count(1) from tbl_activity_detail where user_group_id = #{group_id,jdbcType=INTEGER}
    </select>

    <!--新增用户分组-->
    <insert id="insert" parameterType="java.util.Map">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            select seq_user_group.nextval from dual
        </selectKey>
        insert into tbl_user_group(
            id,
            name,
            remark,
            state,
            create_date,
            create_user_id,
            type
        ) values(
            #{id,jdbcType=INTEGER},
            #{group_name,jdbcType=VARCHAR},
            #{remark,jdbcType=VARCHAR},
            '1',
            sysdate,
            #{public_user_id,jdbcType=INTEGER},
            #{type,jdbcType=INTEGER}
        )
    </insert>

    <!--新增用户分组详细信息-->
    <insert id="insertUserGroupDetail" parameterType="java.util.Map">
        insert into tbl_user_group_detail(
            group_id,
            user_id
        ) values(
            #{group_id,jdbcType=INTEGER},
            #{user_id,jdbcType=INTEGER}
        )
    </insert>

    <!--更新用户分组信息-->
    <update id="update" parameterType="java.util.Map">
        update tbl_user_group
        <set>
            <if test="group_name != '' and group_name != null">
                name = #{group_name,jdbcType=VARCHAR},
            </if>
            <if test="remark != '' and remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="state != '' and state != null">
                state = #{state,jdbcType=CHAR}
            </if>
            <if test="type != '' and type != null">
            	type = #{type,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{group_id,jdbcType=INTEGER}
    </update>

    <!--删除用户分组信息-->
    <delete id="delete" parameterType="java.util.Map">
        delete from tbl_user_group where id = #{group_id,jdbcType=INTEGER}
    </delete>

    <!--删除用户分组详细信息-->
    <delete id="deleteUserGroupDetail" parameterType="java.util.Map">
        delete from tbl_user_group_detail where group_id = #{group_id,jdbcType=INTEGER}
    </delete>

    <!--删除用户分组的用户-->
    <delete id="deleteUserGroupForUser" parameterType="java.util.Map">
        delete from tbl_user_group_detail where group_id = #{group_id,jdbcType=INTEGER} and user_id = #{user_id,jdbcType=INTEGER}
    </delete>
</mapper>