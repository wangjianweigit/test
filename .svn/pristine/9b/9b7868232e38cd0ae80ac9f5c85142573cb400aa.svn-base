<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tk.oms.member.dao.MemberInfoDao">
	<sql id="all_column">
		id,
		user_name,
		login_name,
		user_pwd,
		user_state,
		user_resource,
		create_user_id,
		to_char(create_date,'yyyy-mm-dd hh24:mi:ss')  as  create_date,
		edit_user_id,
		to_char(edit_date,'yyyy-mm-dd hh24:mi:ss')  as  edit_date,
		approval_user_id,
		to_char(approval_date,'yyyy-mm-dd hh24:mi:ss')  as  approval_date,
		user_create_ip,
		user_login_count,
		to_char(user_last_login_date,'yyyy-mm-dd hh24:mi:ss')  as  user_last_login_date,
		user_last_login_ip,
		user_head_imgurl,
		user_manage_name,
		user_manage_sex,
		user_manage_cardid,
		user_manage_cardid_file1,
		user_manage_cardid_file2,
		user_manage_current_address,
		user_manage_telephone,
		user_manage_mobilephone,
		user_manage_weixin,
		user_manage_qq,
		user_manage_email,
		user_company_name,
		user_company_corporation,
		user_company_telephone,
		user_company_type,
		user_company_address_max,
		user_company_address_province,
		user_company_address_city,
		user_company_address_county,
		user_company_address_deails,
		user_company_comment,
		referee_user_id,
		referee_user_realname,
		market_supervision_user_id,
		market_supervision_user_realna,
		store_id,
		store_name,
		openid,
		to_char(last_update_time,'yyyy-mm-dd hh24:mi:ss')  as  last_update_time,
		distribution_state,
		issuing_grade_id,
		user_business_licence_imgurl,
		shop_website,
		shop_name,
		platform,
		main_category,
		shop_photo,
		to_char(unbunding_date,'yyyy-mm-dd hh24:mi:ss')  as  unbunding_date,
		site_id,
		business_license_number,
		user_company_location_address,
		user_control_store_name, 
		user_store_address_province, 
		user_store_address_city,
		user_store_address_county, 
		user_store_address_deails,
		user_store_location_address,
		user_type,
		partner_user_id,
		partner_user_realna,
		supervisor_user_id,
		supervisor_user_realna,
		commission_rate,
		store_user_type,
		user_logistics_template_id,
		recommend_user_id
	</sql>
	<!-- 查询个人收支列 -->
	<sql id="user_select_column">
		id,
		record_number,
		record_item_number,
		record_channel,
		record_type,
		remark,
		to_char(create_date,'yyyy-mm-dd hh24:mi:ss') create_date,
		collect_user_name,
		collect_user_manager_name,
		accountants_subject_id,
		accountants_subject_name,
		parent_acc_subject_id,
		parent_acc_subject_name,
		money,
		count,
		surplus_money,
		state,
		docket_number,
		create_user,
		user_name,
		check_user_name,
		check_user_business_name,
		to_char(check_date,'yyyy-mm-dd hh24:mi:ss') check_date,
		check_reject_reason,
		turnover_number,
		third_number,
		voucher_img_url,
		ywjl_user_name,
		md_id,
		ywy_user_name   
	</sql>
	<!-- 通用个人收支查询条件 -->
    <sql id="user_where_record">
        <where>
        	  1=1
            <if test="accountants_subject_id != null and accountants_subject_id != ''">
	            and info.accountants_subject_id = #{accountants_subject_id}
	        </if>
            <if test="record_type != null and record_type != ''">
	            and info.record_type = #{record_type}
	        </if>
	        <if test="state != null and state != ''">
	            and info.state = #{state}
	        </if>
	        <if test="record_channel != null and record_channel != ''">
	            and info.record_channel = #{record_channel}
	        </if>
	        <if test="user_name != null and user_name != ''">
	            and info.user_name = #{user_name}
	        </if>
	        <if test="login_name != null and login_name != ''">
	            and exists (select 1 from TBL_USER_INFO tt where tt.user_name=info.user_name and tt.LOGIN_NAME like '%'||#{login_name}||'%') 
	        </if>
	        <if test="user_realname != null and user_realname != ''">
	            and info.collect_user_manager_name like '%'||#{user_realname}||'%'
	        </if>
	        <if test="collect_user_manager_name != null and collect_user_manager_name != ''">
	            and info.collect_user_manager_name like '%'||#{collect_user_manager_name}||'%'
	        </if>
	        <if test="check_user_business_name != null and check_user_business_name != ''">
	            and info.check_user_business_name = #{check_user_business_name}
	        </if>
	        <if test="record_number != null and record_number != ''">
	            and info.record_number = #{record_number}
	        </if>
	        <if test="turnover_number != null and turnover_number != ''">
	            and info.turnover_number = #{turnover_number}
	        </if>
	        <if test="docket_number != null and docket_number != ''">
	            and info.docket_number = #{docket_number}
	        </if>
	        <if test="custom_name != null and custom_name != ''">
	        	and exists (select 1 from TBL_USER_INFO tt where tt.user_name=info.user_name and tt.USER_MANAGE_NAME = #{custom_name}) 
	        </if>
	        <if test="key_word != null and key_word != ''">
	            and info.REMARK like '%'||#{key_word}||'%'
	        </if>
	        <if test="start_time != null and start_time != ''">
	            and info.check_date &gt; to_date(#{start_time},'YYYY-MM-DD HH24:MI:SS')
	        </if>
	        <if test="end_time != null and end_time != ''">
	            and info.check_date &lt;= to_date(#{end_time},'YYYY-MM-DD HH24:MI:SS')
	        </if>
        </where>
    </sql>
    <!-- 授信管理列 -->
    <sql id="credit_all_column">
		co.id,
		co.credit_number,     
		co.user_name,         
		co.idcard_number,     
		co.credit_money,      
		co.phone,             
		co.telphone,          
		co.idcard_address,
		to_char(co.create_date,'yyyy-mm-dd hh24:mi:ss')create_date,
		co.create_user_id, 
		co.audit_date,
		co.audit_user_id,   
		co.state,
		co.rejected_reason
	</sql>
	<sql id="sql_date">
		<if test="start_date!=null and start_date!=''">
      		and create_date &gt;= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
        </if>
        <if test="end_date!=null and end_date!=''">
       		and create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
        </if>
	</sql>
	<sql id="sql_queryUserName">
		 select a.user_name
           from tbl_user_info a
          where 1=1
		 <if test="login_name != null and login_name != '' ">
 			and a.login_name like concat(concat('%', #{login_name,jdbcType=VARCHAR}),'%')
		 </if>
 		 <if test="user_manage_name!=null and user_manage_name!=''">
			and a.user_manage_name like concat(concat('%', #{user_manage_name,jdbcType=VARCHAR}),'%')
		 </if>
		 <if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
			and a.user_manage_mobilephone like concat(concat('%', #{user_manage_mobilephone, jdbcType=VARCHAR}),'%')
		 </if>
		 <if test="user_company_type != null and user_company_type != 0 ">
		    and	a.user_company_type = #{user_company_type,jdbcType=INTEGER}
		</if>
		<if test="user_state != null and user_state != '' and user_state != 0 ">
		    and	a.user_state = #{user_state,jdbcType=INTEGER}
		</if>
		 <if test="ywjl_user_id != null and ywjl_user_id != '' ">
	    	and	a.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
		</if>
		<if test="md_id != null and md_id != 0 ">
		    and	a.store_id = #{md_id,jdbcType=INTEGER}
		</if>
		<if test="ywy_user_id != null and ywy_user_id != '' ">
		    and	a.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
		</if>
		 <if test="public_user_type != null and public_user_type == 2">
            and EXISTS (SELECT 1 FROM TBL_SYS_USER_STORE TSUS WHERE TSUS.STORE_ID = a.STORE_ID AND TSUS.USER_ID = #{public_user_id,jdbcType=INTEGER})
        </if>
        <if test="public_user_type != null and public_user_type == 3">
            and a.referee_user_id = #{public_user_id,jdbcType=INTEGER}
        </if>
        <if test="public_user_type != null and public_user_type == 4">
            and a.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
        </if>
        <if test="public_user_type != null and public_user_type == 5">
            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = a.STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
        </if>
        <if test="public_user_type != null and public_user_type == 6">
            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = a.STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
        </if>
        <if test="public_user_type != null and public_user_type == 9">
            and EXISTS(SELECT 1 
                         FROM TBL_SYS_USER_INFO TSUI
                        WHERE TSUI.USER_TYPE = 4
            				  AND TSUI.ORGANIZATION_ID IN (
								  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
								  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
					              )
					          AND TSUI.id = a.market_supervision_user_id)
        </if>
	</sql>
     <!-- 根据登录用户名查找用户 --> 
	<select id="queryMemberInfoApplyByLoginName" parameterType="string" resultType="int">
		SELECT
		count(1)
		FROM tbl_user_info_apply WHERE USER_TYPE &lt;&gt;5 and login_name =#{login_name,jdbcType=VARCHAR}
	</select>
	<!-- 根据身份证号查找用户数量 (临时表)--> 
	<select id="queryMemberInfoApplyByUserManageCardId" parameterType="java.util.Map" resultType="int">
		SELECT
		count(1)
		FROM tbl_user_info_apply
		<where>
			 USER_TYPE &lt;&gt;5
			<if test="user_manage_cardid != null and user_manage_cardid != ''">
	          	and user_manage_cardid =#{user_manage_cardid,jdbcType=VARCHAR}
	        </if>
	        <if test="USER_MANAGE_CARDID != null and USER_MANAGE_CARDID != ''">
	            and user_manage_cardid = #{USER_MANAGE_CARDID,jdbcType=VARCHAR}
	        </if>
	        <if test="id != null and id != ''">
	            and id &lt;&gt;#{id,jdbcType=INTEGER}
	        </if>
		</where>  
	</select>
	<!-- 根据身份证号查找用户数量 (主表)--> 
	<select id="queryMemberInfoByUserManageCardId" parameterType="java.util.Map" resultType="int">
		SELECT
		count(1)
		FROM tbl_user_info 
		<where>
			user_state=1
			and user_type &lt;&gt;5
			<if test="USER_MANAGE_CARDID != null and USER_MANAGE_CARDID != ''">
	            and user_manage_cardid = #{USER_MANAGE_CARDID,jdbcType=VARCHAR}
	        </if>
			<if test="id != null and id != ''">
	            and id &lt;&gt;#{id,jdbcType=INTEGER}
	        </if>
		</where>
	</select>
	 <!-- 根据登录用户名查找用户 --> 
	<select id="queryMemberInfoByLoginName" parameterType="string" resultType="int">
		SELECT
		count(1)
		FROM tbl_user_info WHERE login_name =#{login_name,jdbcType=VARCHAR}
	</select>
	<!-- 根据电话查找用户 --> 
	<select id="queryMemberInfoApplyByMobilePhone" parameterType="java.util.Map" resultType="int">
		SELECT
		count(1)
		FROM tbl_user_info_apply WHERE  USER_TYPE &lt;&gt;5
		<if test="user_manage_mobilephone != null and user_manage_mobilephone != ''">
          and  user_manage_mobilephone = #{user_manage_mobilephone,jdbcType=VARCHAR}
        </if>
        <if test="USER_MANAGE_MOBILEPHONE != null and USER_MANAGE_MOBILEPHONE != ''">
            and user_manage_mobilephone = #{USER_MANAGE_MOBILEPHONE,jdbcType=VARCHAR}
        </if>
		<if test="id != null and id != ''">
            and id &lt;&gt;#{id,jdbcType=INTEGER}
        </if>
	</select>
	<!-- 根据电话查找用户 --> 
	<select id="queryMemberInfoByMobilePhone" parameterType="java.util.Map" resultType="int">
		SELECT
		count(1)
		FROM tbl_user_info WHERE USER_TYPE &lt;&gt;5
		<if test="USER_MANAGE_MOBILEPHONE != null and USER_MANAGE_MOBILEPHONE != ''">
            and user_manage_mobilephone = #{USER_MANAGE_MOBILEPHONE,jdbcType=VARCHAR}
        </if>
		<if test="id != null and id != ''">
	            and id &lt;&gt;#{id,jdbcType=INTEGER}
        </if>
        <if test="USER_NAME != null and USER_NAME != ''">
	            and user_name &lt;&gt;#{USER_NAME,jdbcType=INTEGER}
        </if>
	</select>
	<!-- 根据ID查找区域信息 -->
	<select id="queryDicRegionById" resultType="java.util.Map" parameterType="long">
		SELECT *
		from tbl_dic_region
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<!--新增用户 申请表-->
	<insert id="insertMemberInfoApply" parameterType="java.util.Map" >
	    <selectKey keyProperty="id" resultType="int" order="BEFORE"> 
        	SELECT seq_user_info_apply.nextval FROM DUAL
    	</selectKey>
		insert into tbl_user_info_apply
		(
		id,user_name,login_name,user_pwd,user_manage_name,user_manage_sex,
		user_manage_cardid,user_manage_cardid_file1,user_manage_cardid_file2,
		user_manage_current_address,user_manage_telephone,user_manage_mobilephone,
		user_manage_weixin,user_manage_qq,user_manage_email,user_company_name,
		user_company_corporation,user_company_telephone,user_company_type,user_company_address_max,
		user_company_address_province,user_company_address_city,user_company_address_county,
		user_company_address_deails,user_company_comment,create_date,user_create_ip,referee_user_id,
		referee_user_realname,market_supervision_user_id,market_supervision_user_realna,user_resource,store_id,store_name,
		shop_website,shop_name,platform,main_category,shop_photo,site_id,create_user_id,user_business_licence_imgurl,user_state,business_license_number,
		user_company_location_address,user_control_store_name,user_store_address_province,user_store_address_city,
		user_store_address_county,user_store_address_deails,user_store_location_address,user_longitude,user_latitude,distribution_state,user_logistics_template_id,recommend_user_id
		)
		values
		(
		#{id,jdbcType=INTEGER},#{id,jdbcType=VARCHAR},#{login_name,jdbcType=VARCHAR},#{user_pwd,jdbcType=VARCHAR},#{user_manage_name,jdbcType=VARCHAR},#{user_manage_sex,jdbcType=VARCHAR},
		#{user_manage_cardid,jdbcType=VARCHAR},#{user_manage_cardid_file1,jdbcType=VARCHAR},#{user_manage_cardid_file2,jdbcType=VARCHAR},
		#{user_manage_current_address,jdbcType=VARCHAR},#{user_manage_telephone,jdbcType=VARCHAR},#{user_manage_mobilephone,jdbcType=VARCHAR},
		#{user_manage_weixin,jdbcType=VARCHAR},#{user_manage_qq,jdbcType=VARCHAR},#{user_manage_email,jdbcType=VARCHAR},#{user_company_name,jdbcType=VARCHAR},
		#{user_company_corporation,jdbcType=VARCHAR},#{user_company_telephone,jdbcType=VARCHAR},#{user_company_type,jdbcType=INTEGER},
		#{user_company_address_max,jdbcType=INTEGER},#{province,jdbcType=INTEGER},#{city,jdbcType=INTEGER},
		#{area,jdbcType=INTEGER},#{user_company_address_deails,jdbcType=VARCHAR},
		#{user_company_comment,jdbcType=VARCHAR},sysdate,#{user_create_ip,jdbcType=VARCHAR},#{referee_user_id,jdbcType=VARCHAR},
		#{referee_user_realname,jdbcType=VARCHAR},#{market_supervision_user_id,jdbcType=VARCHAR},#{market_supervision_user_realna,jdbcType=VARCHAR},
		2,#{store_id,jdbcType=INTEGER},#{store_name,jdbcType=VARCHAR},
		#{shop_website,jdbcType=VARCHAR},#{shop_name,jdbcType=VARCHAR},#{platform,jdbcType=VARCHAR},#{main_category,jdbcType=VARCHAR},#{shop_photo,jdbcType=VARCHAR}
		,#{site_id,jdbcType=INTEGER},#{public_user_id,jdbcType=INTEGER},#{user_business_licence_imgurl,jdbcType=VARCHAR},0,#{business_license_number,jdbcType=VARCHAR},
		#{user_company_location_address,jdbcType=VARCHAR},#{user_control_store_name,jdbcType=VARCHAR},#{store_province,jdbcType=INTEGER},#{store_city,jdbcType=INTEGER},
		#{store_area,jdbcType=INTEGER},#{user_store_address_deails,jdbcType=VARCHAR},#{user_store_location_address,jdbcType=VARCHAR},
		#{user_longitude,jdbcType=INTEGER},#{user_latitude,jdbcType=INTEGER},0,#{user_logistics_template_id,jdbcType=INTEGER},#{recommend_user_id,jdbcType=INTEGER}
		)
	</insert>
	<!--新增用户 正式表-->
	<insert id="insertMemberInfo" parameterType="java.util.Map" >
		insert into tbl_user_info
		(
		id,user_name,login_name,user_pwd,user_manage_name,user_manage_sex,
		user_manage_cardid,user_manage_cardid_file1,user_manage_cardid_file2,
		user_manage_current_address,user_manage_telephone,user_manage_mobilephone,
		user_manage_weixin,user_manage_qq,user_manage_email,user_company_name,
		user_company_corporation,user_company_telephone,user_company_type,user_company_address_max,
		user_company_address_province,user_company_address_city,user_company_address_county,
		user_company_address_deails,user_company_comment,user_create_ip,referee_user_id,
		referee_user_realname,market_supervision_user_id,market_supervision_user_realna,user_resource,store_id,store_name,
		shop_website,shop_name,platform,main_category,shop_photo,site_id,create_user_id,user_business_licence_imgurl,
		edit_user_id,approval_user_id,create_date,edit_date,approval_date,user_state,business_license_number,discount,distribution_state,
		user_company_location_address,user_control_store_name,user_store_address_province,user_store_address_city,
		user_store_address_county,user_store_address_deails,user_store_location_address,user_type,partner_user_id,
		partner_user_realna,supervisor_user_id,supervisor_user_realna,commission_rate,store_user_type,user_logistics_template_id,recommend_user_id
		)
		values
		(
		#{ID,jdbcType=INTEGER},#{ID,jdbcType=VARCHAR},#{LOGIN_NAME,jdbcType=VARCHAR},#{USER_PWD,jdbcType=VARCHAR},#{USER_MANAGE_NAME,jdbcType=VARCHAR},#{USER_MANAGE_SEX,jdbcType=VARCHAR},
		#{USER_MANAGE_CARDID,jdbcType=VARCHAR},#{USER_MANAGE_CARDID_FILE1,jdbcType=VARCHAR},#{USER_MANAGE_CARDID_FILE2,jdbcType=VARCHAR},
		#{USER_MANAGE_CURRENT_ADDRESS,jdbcType=VARCHAR},#{USER_MANAGE_TELEPHONE,jdbcType=VARCHAR},#{USER_MANAGE_MOBILEPHONE,jdbcType=VARCHAR},
		#{USER_MANAGE_WEIXIN,jdbcType=VARCHAR},#{USER_MANAGE_QQ,jdbcType=VARCHAR},#{USER_MANAGE_EMAIL,jdbcType=VARCHAR},#{USER_COMPANY_NAME,jdbcType=VARCHAR},
		#{USER_COMPANY_CORPORATION,jdbcType=VARCHAR},#{USER_COMPANY_TELEPHONE,jdbcType=VARCHAR},#{USER_COMPANY_TYPE,jdbcType=INTEGER},
		#{USER_COMPANY_ADDRESS_MAX,jdbcType=INTEGER},#{USER_COMPANY_ADDRESS_PROVINCE,jdbcType=INTEGER},#{USER_COMPANY_ADDRESS_CITY,jdbcType=INTEGER},
		#{USER_COMPANY_ADDRESS_COUNTY,jdbcType=INTEGER},#{USER_COMPANY_ADDRESS_DEAILS,jdbcType=VARCHAR},
		#{USER_COMPANY_COMMENT,jdbcType=VARCHAR},#{USER_CREATE_IP,jdbcType=VARCHAR},#{REFEREE_USER_ID,jdbcType=VARCHAR},
		#{REFEREE_USER_REALNAME,jdbcType=VARCHAR},#{MARKET_SUPERVISION_USER_ID,jdbcType=VARCHAR},#{MARKET_SUPERVISION_USER_REALNA,jdbcType=VARCHAR},
		#{USER_RESOURCE,jdbcType=VARCHAR},#{STORE_ID,jdbcType=INTEGER},#{STORE_NAME,jdbcType=VARCHAR},
		#{SHOP_WEBSITE,jdbcType=VARCHAR},#{SHOP_NAME,jdbcType=VARCHAR},#{PLATFORM,jdbcType=VARCHAR},#{MAIN_CATEGORY,jdbcType=VARCHAR},#{SHOP_PHOTO,jdbcType=VARCHAR}
		,#{SITE_ID,jdbcType=INTEGER},#{CREATE_USER_ID,jdbcType=INTEGER},#{USER_BUSINESS_LICENCE_IMGURL,jdbcType=VARCHAR},
		#{EDIT_USER_ID,jdbcType=INTEGER},#{APPROVAL_USER_ID,jdbcType=INTEGER},to_date(#{CREATE_DATE,jdbcType=DATE},'YYYY-MM-DD HH24:MI:SS'),to_date(#{EDIT_DATE,jdbcType=DATE},'YYYY-MM-DD HH24:MI:SS'),to_date(#{APPROVAL_DATE,jdbcType=DATE},'YYYY-MM-DD HH24:MI:SS'),
		#{USER_STATE,jdbcType=INTEGER},#{BUSINESS_LICENSE_NUMBER,jdbcType=VARCHAR},0.7,0,
		#{USER_COMPANY_LOCATION_ADDRESS,jdbcType=VARCHAR},#{USER_CONTROL_STORE_NAME,jdbcType=VARCHAR},#{USER_STORE_ADDRESS_PROVINCE,jdbcType=INTEGER},#{USER_STORE_ADDRESS_CITY,jdbcType=INTEGER},
		#{USER_STORE_ADDRESS_COUNTY,jdbcType=INTEGER},#{USER_STORE_ADDRESS_DEAILS,jdbcType=VARCHAR},#{USER_STORE_LOCATION_ADDRESS,jdbcType=VARCHAR},#{USER_TYPE,jdbcType=INTEGER},
		#{PARTNER_USER_ID,jdbcType=INTEGER},#{PARTNER_USER_REALNA,jdbcType=VARCHAR},#{SUPERVISOR_USER_ID,jdbcType=INTEGER},#{SUPERVISOR_USER_REALNA,jdbcType=VARCHAR},#{COMMISSION_RATE,jdbcType=VARCHAR},#{STORE_USER_TYPE,jdbcType=INTEGER},
		#{USER_LOGISTICS_TEMPLATE_ID,jdbcType=INTEGER},#{RECOMMEND_USER_ID,jdbcType=INTEGER}
		)
	</insert>
	
	<!--新增平台会员申请成为经销商申请记-->
	<insert id="addUserAgentApply" parameterType="java.util.Map">
		insert into TBL_USER_AGENT_APPLY
		(
		user_name,
		create_date
		)
		values
		(
		#{user_name,jdbcType=VARCHAR},
		SYSDATE
	</insert>
	
	<!-- 平台会员申请成为经销商审核 -->
    <update id="updateUserAgentApply" parameterType="java.util.Map">
    	UPDATE TBL_USER_AGENT_APPLY
    	<set>
    	  <if test="approval_user_id !=null and approval_user_id != ''">
		      approval_user_id=#{approval_user_id,jdbcType=VARCHAR}
		</if>
		<if test="state !=null and state != ''">
		      state=#{state,jdbcType=VARCHAR}
		</if>
		<if test="approval_remark !=null and approval_remark != ''">
		      approval_remark=#{approval_remark,jdbcType=VARCHAR}
		</if>
    	</set>
		
		WHERE  user_name = #{user_name,jdbcType=VARCHAR}
    </update>
	
	<!--根据id查询用户信息 -->
	<select id="queryMemberInfoById" parameterType="java.util.Map"  resultType="java.util.Map">
		SELECT
		<include refid="all_column"/>,nvl(pre_aprv_allowed_number,0)pre_aprv_allowed_number,
		nvl(pre_aprv_login_number,0)pre_aprv_login_number,user_policy_period,
		service_rate,
		to_char(distributor_date,'yyyy-mm-dd hh24:mi:ss')  as  distributor_date,
		discount,
		is_pos,
		is_wechat,
		decoration_state,
		to_char(decoration_date,'yyyy-mm-dd hh24:mi:ss')  as  decoration_date,
		platform_login_state,
		expired_deductions,
		unexpired_deductions,
		user_level,
		other_sync_state,
		sleep_state,
		agent_id
		FROM tbl_user_info WHERE id = #{id,jdbcType=INTEGER}
        <if test="public_user_type != null and public_user_type == 3">
            and referee_user_id = #{public_user_id,jdbcType=INTEGER}
        </if>
        <if test="public_user_type != null and public_user_type == 4">
            and market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
        </if>
        <if test="public_user_type != null and public_user_type == 5">
            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
        </if>
        <if test="public_user_type != null and public_user_type == 6">
            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
        </if>
        <if test="public_user_type != null and public_user_type == 9">
            and EXISTS(SELECT 1 
                         FROM TBL_SYS_USER_INFO TSUI
                        WHERE TSUI.USER_TYPE = 4
            				  AND TSUI.ORGANIZATION_ID IN (
								  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
								  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
					              )
					          AND TSUI.id =market_supervision_user_id)
        </if>
	</select>
   <!--根据用户名删除用户物流关系表 -->
	<delete id="deleteByUserName" parameterType="java.lang.String">
		DELETE FROM TBL_USER_LOGISTICS_COMPANY where user_name = #{user_name,jdbcType=VARCHAR}
	</delete>
	 <!--根据ID删除用户物流关系表 -->
	<delete id="deleteMemberInfoById" parameterType="java.lang.String">
		DELETE FROM TBL_USER_INFO where id = #{id,jdbcType=INTEGER}
	</delete>
	 <!--批量新增用户物流关系表 -->
	<insert  id ="batchInsert" parameterType ="java.util.List">
		insert into TBL_USER_LOGISTICS_COMPANY
		select A.* from(
		<foreach collection="list" item="item" index="index"
				 separator="UNION">
			SELECT
			#{item.user_name,jdbcType=VARCHAR},
			#{item.logistics_company_id,jdbcType=INTEGER}
			from dual
		</foreach>
		) A
	</insert>
	
	<!-- 根据用户ID查询用户账户信息个数 -->
	<select id="queryBankAccountByUserId" parameterType="long" resultType="int">
		select count(1) from TBL_BANK_ACCOUNT where user_id = #{user_id,jdbcType=INTEGER}
	</select>
	<!-- 根据用户ID查询用户账户信息 -->
	<select id="queryBankAccountInfoByUserId" parameterType="long" resultType="java.util.HashMap">
		select * from TBL_BANK_ACCOUNT where user_id = #{user_id,jdbcType=INTEGER}
	</select>
	
	<!-- 分页获取审批列表 -->
	<select id="queryMemberInfoPageBy" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from (
		select b.*, rownum rn from (
			select a.id,a.user_name,a.user_state ,a.store_name,a.referee_user_realname,a.market_supervision_user_realna,a.login_name,a.user_manage_name,a.user_manage_mobilephone,a.user_manage_cardid,
			a.user_manage_current_address,case a.user_resource when '1' then '自行注册' when '2' then '后台注册' when '3' then '分享注册' end user_resource,
			to_char(a.create_date,'yyyy-mm-dd hh24:mi:ss')create_date,to_char(a.edit_date,'yyyy-mm-dd hh24:mi:ss')edit_date,c.user_realname create_user_name,d.user_realname edit_name,
			e.id grade_id,e.grade_name,nvl(f.score,0)score,nvl(a.discount,0)*100 discount,f.certification,
			g.name||h.name||i.name||a.user_company_address_deails address,DECODE(distribution_state,'0','不开通','1','开通') distribution_state,
			f.ACCOUNT_BALANCE,f.CREDIT_MONEY,f.CREDIT_MONEY_BALANCE,f.CREDIT_MONEY_USE,
			(case f.score 
                 when null then ' '
                 else (select GRADE_NAME from TBL_USER_GRADE_INFO sg where MIN_SCORE &lt;=f.score and MAX_SCORE &gt;f.score and rownum &lt;= 1)
                 end) score_grade,j.name site_name,g.name province,h.name city,i.name county,k.user_realname ywy_user_name,l.user_realname ywjl_user_name, m.store_name md_name,
			nvl(a.expired_deductions,0) expired_deductions,
			nvl(a.unexpired_deductions,0) unexpired_deductions,
			a.user_level,
			a.other_sync_state
			from tbl_user_info a
			left join tbl_sys_user_info c on a.create_user_id=c.id
			left join tbl_sys_user_info d on a.edit_user_id=d.id
			left join tbl_issuing_grade e on a.issuing_grade_id=e.id
			left join tbl_bank_account f on a.id=f.user_id
			left join tbl_dic_region g on a.user_company_address_province=g.id
			left join tbl_dic_region h on a.user_company_address_city=h.id
			left join tbl_dic_region i on a.user_company_address_county=i.id
			left join tbl_site_info j on a.site_id=j.id
			left join tbl_sys_user_info k on a.referee_user_id=k.id
			left join tbl_sys_user_info l on a.market_supervision_user_id=l.id
			left join tbl_store_info m on a.store_id=m.id
			<where>
			    a.user_state in(1,2)
			    <choose>
					<when test="user_type != null">
						and a.user_type IN
		                <foreach item="item" collection="user_type" open="(" separator="," close=")">
							#{item}
						</foreach>
					</when>
					<otherwise>
						and a.user_type=1
					</otherwise>
				</choose>
			    <if test="login_name!=null and login_name!=''">
					and a.login_name like concat(concat('%', #{login_name,jdbcType=VARCHAR}),'%')
				</if>
				<if test="user_manage_name!=null and user_manage_name!=''">
					and a.user_manage_name = #{user_manage_name,jdbcType=VARCHAR}
				</if>
				<if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
					and a.user_manage_mobilephone = #{user_manage_mobilephone, jdbcType=VARCHAR}
				</if>
				<if test="ywjl_user_id != null and ywjl_user_id != '' ">
				    and	a.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
				</if>
				<if test="md_id != null and md_id != 0 ">
				    and	a.store_id = #{md_id,jdbcType=INTEGER}
				</if>
				<if test="ywy_user_id != null and ywy_user_id != '' ">
				    and	a.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
				</if>
				<if test="public_user_type != null and public_user_type == 2">
		            and EXISTS (SELECT 1 FROM TBL_SYS_USER_STORE TSUS WHERE TSUS.STORE_ID = a.STORE_ID AND TSUS.USER_ID = #{public_user_id,jdbcType=INTEGER})
		        </if>
		        <if test="public_user_type != null and public_user_type == 3">
		            and a.referee_user_id = #{public_user_id,jdbcType=INTEGER}
		        </if>
		        <if test="public_user_type != null and public_user_type == 4">
		            and a.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
		        </if>
		        <if test="public_user_type != null and public_user_type == 5">
		            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = a.STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
		        </if>
		        <if test="public_user_type != null and public_user_type == 6">
		            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = a.STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
		        </if>
		        <if test="public_user_type != null and public_user_type == 9">
		            and EXISTS(SELECT 1 
		                         FROM TBL_SYS_USER_INFO TSUI
		                        WHERE TSUI.USER_TYPE = 4
		            				  AND TSUI.ORGANIZATION_ID IN (
										  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
										  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
							              )
							          AND TSUI.id = a.market_supervision_user_id)
		        </if>
				<if test="state != null">
					and a.user_state IN
		                <foreach item="item" collection="state" open="(" separator="," close=")">
							#{item}
						</foreach>
				</if>
				<if test="score_grade_min != null and score_grade_max!=''">
					and f.score &lt; #{score_grade_max,jdbcType=INTEGER} 
					and f.score &gt;= #{score_grade_min,jdbcType=INTEGER} 
				</if>
				<if test="issuing_grade_id != null and issuing_grade_id!=''">
					and a.issuing_grade_id =#{issuing_grade_id,jdbcType=INTEGER} 
				</if>
				<if test="site_id != null and site_id!=''">
					and a.site_id =#{site_id,jdbcType=INTEGER} 
				</if>
				<if test="province != null and province!=''">
					and a.user_company_address_province =#{province,jdbcType=INTEGER} 
				</if>
				<if test="city != null and city!=''">
					and a.user_company_address_city =#{city,jdbcType=INTEGER} 
				</if>
				<if test="area != null and area!=''">
					and a.user_company_address_county =#{area,jdbcType=INTEGER} 
				</if>
				<if test="distribution_state != null and distribution_state !=''">
					and a.distribution_state =#{distribution_state,jdbcType=INTEGER} 
				</if>
				<if test="user_company_type != null and user_company_type !=''">
					and a.user_company_type =#{user_company_type,jdbcType=INTEGER} 
				</if>
				<if test="user_manage_cardid != null and user_manage_cardid != ''">
				 	and a.user_manage_cardid = #{user_manage_cardid,jdbcType=VARCHAR}
				</if>
				<if test="user_resource != null and user_resource != ''">
					and a.user_resource = #{user_resource,jdbcType=CHAR}
				</if>
				<choose>
					<when test="sort != null and sort != ''">
						order by ${sort} ${sort_by},a.user_name
					</when>
					<otherwise>
						order by a.create_date desc
					</otherwise>
				</choose>
			</where>
		) b where
		rownum &lt;= #{end_rownum})
		where rn &gt; #{start_rownum}
	</select>
	
	<!-- 分页获取审批列表 -->
	<select id="queryMemberInfoApplyPageBy" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from (
		select b.*, rownum rn from (
			select a.id,a.user_name,a.user_state,a.login_name,a.user_manage_name,a.user_manage_mobilephone,
			a.user_manage_current_address,case a.user_resource when '1' then '自行注册' when '2' then '后台注册' when '3' then '分享注册' end user_resource,
			to_char(a.create_date,'yyyy-mm-dd hh24:mi:ss')create_date,to_char(a.edit_date,'yyyy-mm-dd hh24:mi:ss')edit_date,c.user_realname create_user_name,d.user_realname edit_name,
			e.name||f.name||g.name||a.user_company_address_deails address,a.rejected_reason 
			from tbl_user_info_apply a
			left join tbl_sys_user_info c on a.create_user_id=c.id
			left join tbl_sys_user_info d on a.edit_user_id=d.id
			left join tbl_dic_region e on a.user_company_address_province=e.id
			left join tbl_dic_region f on a.user_company_address_city=f.id
			left join tbl_dic_region g on a.user_company_address_county=g.id
			where a.user_state in(0,3,4)
			and a.user_type=1
			    <if test="login_name!=null and login_name!=''">
					and a.login_name like concat(concat('%', #{login_name,jdbcType=VARCHAR}),'%')
				</if>
				<if test="user_manage_name!=null and user_manage_name!=''">
					and a.user_manage_name = #{user_manage_name,jdbcType=VARCHAR}
				</if>
				<if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
					and a.user_manage_mobilephone = #{user_manage_mobilephone, jdbcType=VARCHAR}
				</if>
				<if test="ywjl_user_id != null and ywjl_user_id != '' ">
				    and	a.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
				</if>
				<if test="md_id != null and md_id != 0 ">
				    and	a.store_id = #{md_id,jdbcType=INTEGER}
				</if>
				<if test="ywy_user_id != null and ywy_user_id != '' ">
				    and	a.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
				</if>
				<if test="state != null">
					and a.user_state IN
		                <foreach item="item" collection="state" open="(" separator="," close=")">
							#{item}
						</foreach>
				</if>
				<if test="user_resource != null and user_resource != ''">
					and a.user_resource = #{user_resource,jdbcType=CHAR}
				</if>
				order by a.create_date desc
		) b where
		rownum &lt;= #{end_rownum})
		where rn &gt; #{start_rownum}
	</select>
	
	<!-- 分页获取账号预审列表 -->
	<select id="queryAccountPreList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from (
		select b.*, rownum rn from (
			select * from (
			select a.id,a.user_name,a.user_state,a.login_name,a.user_manage_name,a.user_manage_mobilephone,a.remark,
			a.user_manage_current_address,case a.user_resource when '1' then '自行注册' when '2' then '后台注册' when '3' then '分享注册' end user_resource,
			to_char(a.create_date,'yyyy-mm-dd hh24:mi:ss')create_date,to_char(a.edit_date,'yyyy-mm-dd hh24:mi:ss')edit_date,c.user_realname create_user_name,d.user_realname edit_name,
			e.name||f.name||g.name||a.user_company_address_deails address 
			from tbl_user_info_apply a
			left join tbl_sys_user_info c on a.create_user_id=c.id
			left join tbl_sys_user_info d on a.edit_user_id=d.id
			left join tbl_dic_region e on a.user_company_address_province=e.id
			left join tbl_dic_region f on a.user_company_address_city=f.id
			left join tbl_dic_region g on a.user_company_address_county=g.id
			where a.user_state in(0,4,5)
			  and a.user_type=1
			  and ( a.store_id is not null
		      or a.market_supervision_user_id is not null
		      or a.referee_user_id is not null)
			    <if test="login_name!=null and login_name!=''">
					and a.login_name like concat(concat('%', #{login_name,jdbcType=VARCHAR}),'%')
				</if>
				<if test="user_manage_name!=null and user_manage_name!=''">
					and a.user_manage_name = #{user_manage_name,jdbcType=VARCHAR}
				</if>
				<if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
					and a.user_manage_mobilephone = #{user_manage_mobilephone, jdbcType=VARCHAR}
				</if>
				<if test="ywjl_user_id != null and ywjl_user_id != '' ">
				    and	a.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
				</if>
				<if test="md_id != null and md_id != 0 ">
				    and	a.store_id = #{md_id,jdbcType=INTEGER}
				</if>
				<if test="ywy_user_id != null and ywy_user_id != '' ">
				    and	a.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
				</if>
				<if test="all_view_flag != null and 'false'.toString() == all_view_flag.toString() ">
					<if test="public_user_type != null and public_user_type == 2">
			            and EXISTS (SELECT 1 FROM TBL_SYS_USER_STORE TSUS WHERE TSUS.STORE_ID = a.STORE_ID AND TSUS.USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 3">
			            and a.referee_user_id = #{public_user_id,jdbcType=INTEGER}
			        </if>
			        <if test="public_user_type != null and public_user_type == 4">
			            and a.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
			        </if>
			        <if test="public_user_type != null and public_user_type == 5">
			            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = a.STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 6">
			            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = a.STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 9">
			            and EXISTS(SELECT 1 
			                         FROM TBL_SYS_USER_INFO TSUI
			                        WHERE TSUI.USER_TYPE = 4
			            				  AND TSUI.ORGANIZATION_ID IN (
											  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
											  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
								              )
								          AND TSUI.id = a.market_supervision_user_id)
			        </if>
				</if>
				<if test="state != null">
					and a.user_state IN
		                <foreach item="item" collection="state" open="(" separator="," close=")">
							#{item}
						</foreach>
				</if>
				<if test="all_view_flag != null and 'true'.toString() == all_view_flag.toString() ">
					union 
					select a.id,a.user_name,a.user_state,a.login_name,a.user_manage_name,a.user_manage_mobilephone,a.remark,
						a.user_manage_current_address,case a.user_resource when '1' then '自行注册' when '2' then '后台注册' when '3' then '分享注册' end user_resource,
						to_char(a.create_date,'yyyy-mm-dd hh24:mi:ss')create_date,to_char(a.edit_date,'yyyy-mm-dd hh24:mi:ss')edit_date,c.USER_REALNAME create_user_name,d.USER_REALNAME edit_name,
						e.name||f.name||g.name||a.user_company_address_deails address 
						from tbl_user_info_apply a
						left join tbl_sys_user_info c on a.create_user_id=c.id
						left join tbl_sys_user_info d on a.edit_user_id=d.id
						left join tbl_dic_region e on a.user_company_address_province=e.id
						left join tbl_dic_region f on a.user_company_address_city=f.id
						left join tbl_dic_region g on a.user_company_address_county=g.id
						where a.user_state in(0,4,5)
						  and a.user_type=1
					      and (a.market_supervision_user_id is null
					      	or a.market_supervision_user_id=0
					      )
					      <if test="login_name!=null and login_name!=''">
						and a.login_name =#{login_name,jdbcType=VARCHAR}
					</if>
					<if test="user_manage_name!=null and user_manage_name!=''">
						and a.user_manage_name = #{user_manage_name,jdbcType=VARCHAR}
					</if>
					<if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
						and a.user_manage_mobilephone = #{user_manage_mobilephone, jdbcType=VARCHAR}
					</if>
					<if test="ywjl_user_id != null and ywjl_user_id != '' ">
					    and	a.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
					</if>
					<if test="md_id != null and md_id != 0 ">
					    and	a.store_id = #{md_id,jdbcType=INTEGER}
					</if>
					<if test="ywy_user_id != null and ywy_user_id != '' ">
					    and	a.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
					</if>
					<if test="state != null">
						and a.user_state IN
			                <foreach item="item" collection="state" open="(" separator="," close=")">
								#{item}
							</foreach>
					</if>
				</if>
		      	)
			order by create_date desc
		) b where rownum &lt;= #{end_rownum})
		where rn &gt; #{start_rownum}
	</select>
	<!-- 分页获取账号预审列表 -->
	<select id="queryAccountPreCount" parameterType="java.util.HashMap" resultType="int">
			select count(1)
			from (
			select a.id,a.user_name,a.user_state,a.login_name,a.user_manage_name,a.user_manage_mobilephone,
			a.user_manage_current_address,case a.user_resource when '1' then '自行注册' when '2' then '后台注册' when '3' then '分享注册' end user_resource,
			to_char(a.create_date,'yyyy-mm-dd hh24:mi:ss')create_date,to_char(a.edit_date,'yyyy-mm-dd hh24:mi:ss')edit_date,c.USER_REALNAME create_user_name,d.USER_REALNAME edit_name,
			e.name||f.name||g.name||a.user_company_address_deails address 
			from tbl_user_info_apply a
			left join tbl_sys_user_info c on a.create_user_id=c.id
			left join tbl_sys_user_info d on a.edit_user_id=d.id
			left join tbl_dic_region e on a.user_company_address_province=e.id
			left join tbl_dic_region f on a.user_company_address_city=f.id
			left join tbl_dic_region g on a.user_company_address_county=g.id
			where a.user_state in(0,4,5)
			  and a.user_type=1
			  and ( a.store_id is not null
		      or a.market_supervision_user_id is not null
		      or a.referee_user_id is not null)
			   <if test="login_name!=null and login_name!=''">
					and a.login_name like concat(concat('%', #{login_name,jdbcType=VARCHAR}),'%')
				</if>
				<if test="user_manage_name!=null and user_manage_name!=''">
					and a.user_manage_name = #{user_manage_name,jdbcType=VARCHAR}
				</if>
				<if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
					and a.user_manage_mobilephone = #{user_manage_mobilephone, jdbcType=VARCHAR}
				</if>
				<if test="ywjl_user_id != null and ywjl_user_id != '' ">
				    and	a.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
				</if>
				<if test="md_id != null and md_id != 0 ">
				    and	a.store_id = #{md_id,jdbcType=INTEGER}
				</if>
				<if test="ywy_user_id != null and ywy_user_id != '' ">
				    and	a.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
				</if>
				<if test="all_view_flag != null and 'false'.toString() == all_view_flag.toString() ">
					<if test="public_user_type != null and public_user_type == 2">
			            and EXISTS (SELECT 1 FROM TBL_SYS_USER_STORE TSUS WHERE TSUS.STORE_ID = a.STORE_ID AND TSUS.USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 3">
			            and a.referee_user_id = #{public_user_id,jdbcType=INTEGER}
			        </if>
			        <if test="public_user_type != null and public_user_type == 4">
			            and a.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
			        </if>
			        <if test="public_user_type != null and public_user_type == 5">
			            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = a.STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 6">
			            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = a.STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 9">
			            and EXISTS(SELECT 1 
			                         FROM TBL_SYS_USER_INFO TSUI
			                        WHERE TSUI.USER_TYPE = 4
			            				  AND TSUI.ORGANIZATION_ID IN (
											  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
											  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
								              )
								          AND TSUI.id = a.market_supervision_user_id)
			        </if>
				</if>
				<if test="state != null">
					and a.user_state IN
		                <foreach item="item" collection="state" open="(" separator="," close=")">
							#{item}
						</foreach>
				</if>
				<if test="all_view_flag != null and 'true'.toString() == all_view_flag.toString() ">
					union 
					select a.id,a.user_name,a.user_state,a.login_name,a.user_manage_name,a.user_manage_mobilephone,
						a.user_manage_current_address,case a.user_resource when '1' then '自行注册' when '2' then '后台注册' when '3' then '分享注册' end user_resource,
						to_char(a.create_date,'yyyy-mm-dd hh24:mi:ss')create_date,to_char(a.edit_date,'yyyy-mm-dd hh24:mi:ss')edit_date,c.USER_REALNAME create_user_name,d.USER_REALNAME edit_name,
						e.name||f.name||g.name||a.user_company_address_deails address 
						from tbl_user_info_apply a
						left join tbl_sys_user_info c on a.create_user_id=c.id
						left join tbl_sys_user_info d on a.edit_user_id=d.id
						left join tbl_dic_region e on a.user_company_address_province=e.id
						left join tbl_dic_region f on a.user_company_address_city=f.id
						left join tbl_dic_region g on a.user_company_address_county=g.id
						where a.user_state in(0,4,5)
						  and a.user_type=1
						   and (a.market_supervision_user_id is null
					      	or a.market_supervision_user_id=0
					      )
					      <if test="login_name!=null and login_name!=''">
						and a.login_name =#{login_name,jdbcType=VARCHAR}
					</if>
					<if test="user_manage_name!=null and user_manage_name!=''">
						and a.user_manage_name = #{user_manage_name,jdbcType=VARCHAR}
					</if>
					<if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
						and a.user_manage_mobilephone = #{user_manage_mobilephone, jdbcType=VARCHAR}
					</if>
					<if test="ywjl_user_id != null and ywjl_user_id != '' ">
					    and	a.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
					</if>
					<if test="md_id != null and md_id != 0 ">
					    and	a.store_id = #{md_id,jdbcType=INTEGER}
					</if>
					<if test="ywy_user_id != null and ywy_user_id != '' ">
					    and	a.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
					</if>
					<if test="state != null">
						and a.user_state IN
			                <foreach item="item" collection="state" open="(" separator="," close=")">
								#{item}
							</foreach>
					</if>
				</if>
		      	)
	</select>
	
	<!-- 获取特殊价格总条数 -->
	<select id="queryMemberSpecialPriceCount" parameterType="java.util.HashMap" resultType="int">
			select count(a.id) from tbl_user_discount a
			left join tbl_sys_user_info b on a.create_user_id=b.id
			<where>
			    <if test="apply_number !=null and apply_number !=''">
					and a.apply_number =#{apply_number,jdbcType=VARCHAR}
				</if>
				<if test="apply_name !=null and apply_name !=''">
					and b.user_name =#{apply_name,jdbcType=VARCHAR}
				</if>
				<if test="user_manage_name !=null and user_manage_name!=''">
					and b.user_name = #{user_manage_name,jdbcType=VARCHAR}
				</if>
				<if test="begin_time != null and begin_time != ''">
					and a.create_date &gt;= TO_DATE(#{begin_time,jdbcType=VARCHAR},'YYYY-MM-DD HH24:MI:SS')
				</if>
				<if test="end_time != null and end_time != ''">
					and a.create_date &lt;= TO_DATE(#{end_time,jdbcType=VARCHAR},'YYYY-MM-DD HH24:MI:SS')
				</if>
				<if test="state != null">
					and a.state IN
		                <foreach item="item" collection="state" open="(" separator="," close=")">
							#{item}
						</foreach>
				</if>
				<if test="type !='' and type !=null">
					and a.state &lt;&gt;1
				</if>
			</where>
	</select>
	<!-- 获取特殊价格列表-->
	<select id="queryMemberSpecialPriceList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	select * from (
		select b.*, rownum rn from (
			select a.id,
			a.apply_number,
			a.state,
			a.remark,
			b.user_name apply_name,
			to_char(a.create_date,'yyyy-mm-dd hh24:mi:ss')create_date,
			c.user_name approval_name,
			to_char(a.audit_date,'yyyy-mm-dd hh24:mi:ss')approval_date
			 from tbl_user_discount a
			left join tbl_sys_user_info b on a.create_user_id=b.id
			left join tbl_sys_user_info c on a.audit_user_id=c.id
			<where>
			    <if test="apply_number !=null and apply_number !=''">
					and a.apply_number =#{apply_number,jdbcType=VARCHAR}
				</if>
				<if test="apply_name !=null and apply_name !=''">
					and b.user_name =#{apply_name,jdbcType=VARCHAR}
				</if>
				<if test="user_manage_name !=null and user_manage_name!=''">
					and b.user_name = #{user_manage_name,jdbcType=VARCHAR}
				</if>
				<if test="begin_time != null and begin_time != ''">
					and a.create_date &gt;= TO_DATE(#{begin_time,jdbcType=VARCHAR},'YYYY-MM-DD HH24:MI:SS')
				</if>
				<if test="end_time != null and end_time != ''">
					and a.create_date &lt;= TO_DATE(#{end_time,jdbcType=VARCHAR},'YYYY-MM-DD HH24:MI:SS')
				</if>
				<if test="state != null">
					and a.state IN
		                <foreach item="item" collection="state" open="(" separator="," close=")">
							#{item}
						</foreach>
				</if>
				<if test="type !='' and type !=null">
					and a.state &lt;&gt;1
				</if>
			</where>
			 <choose>  
	            <when test="type !='' and type !=null">  
	                order by a.state,a.create_date desc
	            </when>  
	            <otherwise>  
	                order by a.create_date desc
	            </otherwise>  
        	</choose>  
			) b where
		rownum &lt;= #{end_rownum})
		where rn &gt; #{start_rownum}
	</select>
	
	<!-- 查询会员详情 -->
		<select id="queryMemberDetailByUserName" parameterType="string" resultType="java.util.Map">
			SELECT
				a.id,
			    a.user_name,
			    a.user_pwd,
			    a.login_name,
			    a.user_head_imgurl,
			    a.user_manage_name,
			    a.user_manage_sex,
			    a.user_manage_cardid,
			    a.user_manage_cardid_file1,
			    a.user_manage_cardid_file2,
			    a.user_manage_current_address,
			    a.user_manage_telephone,
			    a.user_manage_mobilephone,
			    a.user_manage_weixin,
			    a.user_manage_qq,
			    a.user_manage_email,
			    a.user_company_name,
			    a.user_company_corporation,
			    a.user_company_telephone,
			    a.user_company_type,
			    a.user_company_address_max,
			    a.user_company_address_province,
			    a.user_company_address_city,
			    a.user_company_address_county,
			    a.user_company_address_deails,
			    a.user_company_comment,
			    a.create_date,
			    a.create_user_id,
			    a.user_create_ip,
			    a.user_login_count,
			    a.user_last_login_date,
			    a.user_last_login_ip,
			    a.user_state,
			    a.approval_user_id,
			    a.approval_date,
			    a.referee_user_id,
			    a.referee_user_realname,
			    a.market_supervision_user_id,
			    a.market_supervision_user_realna,
			    a.openid,
			    a.distribution_state,
			    a.store_id,
			    a.store_name,
			    a.user_business_licence_imgurl,
			    a.commission_rate,
			    user_type,
				partner_user_id,
				partner_user_realna,
				supervisor_user_id,
				supervisor_user_realna,
			    a.shop_website,a.shop_name,a.platform,main_category,a.shop_photo,
		        a.site_id,case a.distribution_state when 0 then '不开通' when 1 then '开通' end distribution_state_name,case a.user_company_type when 3 then '批发' when 4 then '网络营销' when 5 then '实体营销' when 6 then '其它' end user_company_type_name,
				b.name||c.name||d.name||user_company_address_deails company_address,e.name site_name,
				f.name||g.name||h.name||user_store_address_deails control_store_address,
				a.user_company_location_address,a.user_control_store_name,a.user_store_address_deails,a.user_store_location_address,
				a.store_user_type,
				a.user_logistics_template_id,
				(select template_name from tbl_user_logistics_template where id=a.user_logistics_template_id) as template_name,
				(select user_realname from tbl_sys_user_info where id=a.recommend_user_id) as recommend_user_realname
				FROM tbl_user_info_apply a
				left join tbl_dic_region b on a.user_company_address_province=b.id
				left join tbl_dic_region c on a.user_company_address_city=c.id
				left join tbl_dic_region d on a.user_company_address_county=d.id
				left join tbl_dic_region f on a.user_store_address_province = f.id
		  		left join tbl_dic_region g on a.user_store_address_city = g.id
		  		left join tbl_dic_region h on a.user_store_address_county =h.id
				left join tbl_site_info e on a.site_id=e.id
				WHERE user_name = #{user_name,jdbcType=VARCHAR}
	   </select>
	
	<!--获取审批列表总数 -->
	<select id="queryMemberInfoCount" parameterType="java.util.Map" resultType="int">
		
		    select count(1) from (
				select a.user_name,case a.user_state when 1 then '非注册会员' when 0 then '待审批' when 1 then '审核通过' when 2 then '禁用' when 3 then '驳回修改' end user_state  ,a.login_name,a.user_manage_name,a.user_manage_mobilephone,
				a.user_manage_current_address,case a.user_resource when '1' then '自行注册' when '2' then '后台注册' when '3' then '分享注册' end user_resource,
				to_char(a.create_date,'yyyy-mm-dd hh24:mi:ss')create_date,to_char(a.edit_date,'yyyy-mm-dd hh24:mi:ss')edit_date,c.user_name create_user_name,d.user_name edit_name,
				e.id grade_id,e.grade_name,nvl(f.score,0)score,nvl(a.discount,0)*100 discount
				from tbl_user_info a
				left join tbl_sys_user_info c on a.create_user_id=c.id
				left join tbl_sys_user_info d on a.edit_user_id=d.id
				left join tbl_issuing_grade e on a.issuing_grade_id=e.id
				left join tbl_bank_account f on a.id=f.user_id
				left join tbl_site_info g on a.site_id=g.id
				<where>
				    a.user_state in(1,2)
				    <choose>
						<when test="user_type != null">
							and a.user_type IN
			                <foreach item="item" collection="user_type" open="(" separator="," close=")">
								#{item}
							</foreach>
						</when>
						<otherwise>
							and a.user_type=1
						</otherwise>
					</choose>
				    <if test="login_name!=null and login_name!=''">
						and a.login_name like concat(concat('%', #{login_name,jdbcType=VARCHAR}),'%')
					</if>
					<if test="user_manage_name!=null and user_manage_name!=''">
						and a.user_manage_name = #{user_manage_name,jdbcType=VARCHAR}
					</if>
					<if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
						and a.user_manage_mobilephone = #{user_manage_mobilephone, jdbcType=VARCHAR}
					</if>
					<if test="ywjl_user_id != null and ywjl_user_id != '' ">
				    	and	a.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
					</if>
					<if test="md_id != null and md_id != 0 ">
					    and	a.store_id = #{md_id,jdbcType=INTEGER}
					</if>
					<if test="ywy_user_id != null and ywy_user_id != '' ">
					    and	a.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
					</if>
					<if test="public_user_type != null and public_user_type == 2">
			            and EXISTS (SELECT 1 FROM TBL_SYS_USER_STORE TSUS WHERE TSUS.STORE_ID = a.STORE_ID AND TSUS.USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 3">
			            and a.referee_user_id = #{public_user_id,jdbcType=INTEGER}
			        </if>
			        <if test="public_user_type != null and public_user_type == 4">
			            and a.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
			        </if>
			        <if test="public_user_type != null and public_user_type == 5">
			            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = a.STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 6">
			            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = a.STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 9">
			            and EXISTS(SELECT 1 
			                         FROM TBL_SYS_USER_INFO TSUI
			                        WHERE TSUI.USER_TYPE = 4
			            				  AND TSUI.ORGANIZATION_ID IN (
											  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
											  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
								              )
								          AND TSUI.id = a.market_supervision_user_id)
			        </if>
					<if test="state != null">
						and a.user_state IN
			                <foreach item="item" collection="state" open="(" separator="," close=")">
								#{item}
							</foreach>
					</if>
					<if test="score_grade_min != null and score_grade_max!=''">
						and f.score &lt; #{score_grade_max,jdbcType=INTEGER} 
						and f.score &gt;= #{score_grade_min,jdbcType=INTEGER} 
					</if>
					<if test="issuing_grade_id != null and issuing_grade_id!=''">
						and a.issuing_grade_id =#{issuing_grade_id,jdbcType=INTEGER} 
					</if>
					<if test="site_id != null and site_id!=''">
						and a.site_id =#{site_id,jdbcType=INTEGER} 
					</if>
					<if test="province != null and province!=''">
						and a.user_company_address_province =#{province,jdbcType=INTEGER} 
					</if>
					<if test="city != null and city!=''">
						and a.user_company_address_city =#{city,jdbcType=INTEGER} 
					</if>
					<if test="area != null and area!=''">
						and a.user_company_address_county =#{area,jdbcType=INTEGER} 
					</if>
					<if test="distribution_state != null and distribution_state !=''">
						and a.distribution_state =#{distribution_state,jdbcType=INTEGER} 
					</if>
					<if test="user_company_type != null and user_company_type !=''">
						and a.user_company_type =#{user_company_type,jdbcType=INTEGER} 
					</if>
					<if test="user_manage_cardid != null and user_manage_cardid != ''">
					 	and a.user_manage_cardid = #{user_manage_cardid,jdbcType=VARCHAR}
					</if>
					<if test="user_resource != null and user_resource != ''">
						and a.user_resource = #{user_resource,jdbcType=CHAR}
					</if>
				</where>
		) b 
	</select>
	
	<!--获取会员管理列表总数 -->
	<select id="queryMemberInfoApplyCount" parameterType="java.util.Map" resultType="int">
		    select count(1) from (
				select a.user_name,case a.user_state when 1 then '非注册会员' when 0 then '待审批' when 1 then '审核通过' when 2 then '禁用' when 3 then '驳回修改' end user_state  ,a.login_name,a.user_manage_name,a.user_manage_mobilephone,
				a.user_manage_current_address,case a.user_resource when '1' then '自行注册' when '2' then '后台注册' when '3' then '分享注册' end user_resource,
				to_char(a.create_date,'yyyy-mm-dd hh24:mi:ss')create_date,to_char(a.edit_date,'yyyy-mm-dd hh24:mi:ss')edit_date,c.user_name create_user_name,d.user_name edit_name 
				from tbl_user_info_apply a
				left join tbl_sys_user_info c on a.create_user_id=c.id
				left join tbl_sys_user_info d on a.edit_user_id=d.id
				<where>
				     a.user_state in(0,3,4)
				     and a.user_type=1
				    <if test="login_name!=null and login_name!=''">
						and a.login_name like concat(concat('%', #{login_name,jdbcType=VARCHAR}),'%')
					</if>
					<if test="user_manage_name!=null and user_manage_name!=''">
						and a.user_manage_name = #{user_manage_name,jdbcType=VARCHAR}
					</if>
					<if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
						and a.user_manage_mobilephone = #{user_manage_mobilephone, jdbcType=VARCHAR}
					</if>
					<if test="ywjl_user_id != null and ywjl_user_id != '' ">
				    	and	a.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
					</if>
					<if test="md_id != null and md_id != 0 ">
					    and	a.store_id = #{md_id,jdbcType=INTEGER}
					</if>
					<if test="ywy_user_id != null and ywy_user_id != '' ">
					    and	a.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
					</if>
					<if test="state != null">
						and a.user_state IN
		                <foreach item="item" collection="state" open="(" separator="," close=")">
							#{item}
						</foreach>
					</if>
					<if test="user_resource != null and user_resource != ''">
						and a.user_resource = #{user_resource,jdbcType=CHAR}
					</if>
			</where>
		) b 
	</select>
	
	<!-- 暂不审核 -->
    <update id="updateMemberStateToPause" parameterType="java.util.Map">
    	UPDATE tbl_user_info_apply
		SET user_state =  3
		WHERE  user_name = #{user_name,jdbcType=VARCHAR}
    </update>
    
    <!-- 申请表根据用户名查找会员信息 -->
	<select id="queryMemberInfoApplyById" parameterType="string" resultType="java.util.Map">
		SELECT
		<include refid="all_column"/>,user_longitude,user_latitude,
		(select e.name from tbl_dic_region e where user_company_address_province=e.id) province,
		(select f.name from tbl_dic_region f where user_company_address_city=f.id) city,
		(select g.name from tbl_dic_region g where user_company_address_county=g.id) district
		FROM tbl_user_info_apply WHERE user_name = #{user_name,jdbcType=VARCHAR}
	</select>
	
	<!-- 更新会员申请信息-->
	<update id="updateMemberInfoApply" parameterType="java.util.Map">
		update tbl_user_info_apply
		<set>
				REFEREE_USER_ID =#{REFEREE_USER_ID,jdbcType=VARCHAR},
				REFEREE_USER_REALNAME =#{REFEREE_USER_REALNAME,jdbcType=VARCHAR},
				STORE_ID =#{STORE_ID,jdbcType=INTEGER},
				STORE_NAME =#{STORE_NAME,jdbcType=VARCHAR},
			<if test="user_pwd!=null">
				user_pwd = #{user_pwd,jdbcType=INTEGER},
			</if>
			<if test="USER_STATE!=null">
				USER_STATE = #{USER_STATE,jdbcType=INTEGER},
			</if>
			<if test="USER_MANAGE_NAME!=null and USER_MANAGE_NAME!=''">
				USER_MANAGE_NAME = #{USER_MANAGE_NAME,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_SEX!=null and USER_MANAGE_SEX!=''">
				USER_MANAGE_SEX = #{USER_MANAGE_SEX,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_CARDID!=null and USER_MANAGE_CARDID!=''">
				USER_MANAGE_CARDID = #{USER_MANAGE_CARDID,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_CARDID_FILE1!=null and USER_MANAGE_CARDID_FILE1!=''">
				USER_MANAGE_CARDID_FILE1 = #{USER_MANAGE_CARDID_FILE1,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_CARDID_FILE2!=null and USER_MANAGE_CARDID_FILE2!=''">
				USER_MANAGE_CARDID_FILE2 = #{USER_MANAGE_CARDID_FILE2,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_CURRENT_ADDRESS!=null and USER_MANAGE_CURRENT_ADDRESS!=''">
				USER_MANAGE_CURRENT_ADDRESS =#{USER_MANAGE_CURRENT_ADDRESS,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_TELEPHONE!=null">
				USER_MANAGE_TELEPHONE =#{USER_MANAGE_TELEPHONE,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_MOBILEPHONE!=null and USER_MANAGE_MOBILEPHONE!=''">
				USER_MANAGE_MOBILEPHONE =#{USER_MANAGE_MOBILEPHONE,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_WEIXIN!=null">
				USER_MANAGE_WEIXIN =#{USER_MANAGE_WEIXIN,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_QQ!=null">
				USER_MANAGE_QQ =#{USER_MANAGE_QQ,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_EMAIL!=null">
				USER_MANAGE_EMAIL =#{USER_MANAGE_EMAIL,jdbcType=VARCHAR},
			</if>
			<if test="USER_COMPANY_NAME!=null and USER_COMPANY_NAME!=''">
				USER_COMPANY_NAME =#{USER_COMPANY_NAME,jdbcType=VARCHAR},
			</if>
			<if test="USER_COMPANY_CORPORATION!=null and USER_COMPANY_CORPORATION!=''">
				USER_COMPANY_CORPORATION =#{USER_COMPANY_CORPORATION,jdbcType=VARCHAR},
			</if>
			<if test="USER_COMPANY_TELEPHONE!=null and USER_COMPANY_TELEPHONE!=''">
				USER_COMPANY_TELEPHONE =#{USER_COMPANY_TELEPHONE,jdbcType=VARCHAR},
			</if>
			<if test="USER_COMPANY_TYPE!=null">
				USER_COMPANY_TYPE =#{USER_COMPANY_TYPE,jdbcType=INTEGER},
			</if>
			<if test="USER_COMPANY_ADDRESS_MAX!=0">
				USER_COMPANY_ADDRESS_MAX =#{USER_COMPANY_ADDRESS_MAX,jdbcType=INTEGER},
			</if>
			<if test="province !=0 and province !=null and province!='' ">
				USER_COMPANY_ADDRESS_PROVINCE =#{province,jdbcType=INTEGER},
			</if>
			<if test="city !=0 and city !=null and city !=''">
				USER_COMPANY_ADDRESS_CITY =#{city,jdbcType=INTEGER},
			</if>
			<if test="area !=0 and area!=null and area !='' ">
				USER_COMPANY_ADDRESS_COUNTY =#{area,jdbcType=INTEGER},
			</if>
			<if test="USER_COMPANY_ADDRESS_DEAILS!=null">
				USER_COMPANY_ADDRESS_DEAILS =#{USER_COMPANY_ADDRESS_DEAILS,jdbcType=INTEGER},
			</if>
			<if test="USER_COMPANY_COMMENT!=null and USER_COMPANY_COMMENT!=''">
				USER_COMPANY_COMMENT =#{USER_COMPANY_COMMENT,jdbcType=VARCHAR},
			</if>
			<if test="MARKET_SUPERVISION_USER_ID!=null and MARKET_SUPERVISION_USER_ID!=''">
				MARKET_SUPERVISION_USER_ID =#{MARKET_SUPERVISION_USER_ID,jdbcType=VARCHAR},
			</if>
			<if test="MARKET_SUPERVISION_USER_REALNA!=null and MARKET_SUPERVISION_USER_REALNA!=''">
				MARKET_SUPERVISION_USER_REALNA =#{MARKET_SUPERVISION_USER_REALNA,jdbcType=VARCHAR},
			</if>
			<if test="edit_user_id!=null and edit_user_id!=''">
				edit_user_id =#{edit_user_id,jdbcType=VARCHAR},
				edit_date = sysdate,
			</if>
			<if test="user_business_licence_imgurl !=null">
				user_business_licence_imgurl =#{user_business_licence_imgurl,jdbcType=VARCHAR},
			</if>
			<if test="SHOP_WEBSITE!=null">
				SHOP_WEBSITE =#{SHOP_WEBSITE,jdbcType=VARCHAR},
			</if>
			<if test="SHOP_NAME!=null">
				SHOP_NAME =#{SHOP_NAME,jdbcType=VARCHAR},
			</if>
			<if test="PLATFORM!=null">
				PLATFORM =#{PLATFORM,jdbcType=VARCHAR},
			</if>
			<if test="MAIN_CATEGORY!=null">
				MAIN_CATEGORY =#{MAIN_CATEGORY,jdbcType=VARCHAR},
			</if>
			<if test="shop_photo!=null">
				shop_photo =#{shop_photo,jdbcType=VARCHAR},
			</if>
			<if test="BUSINESS_LICENSE_NUMBER!=null">
				BUSINESS_LICENSE_NUMBER =#{BUSINESS_LICENSE_NUMBER,jdbcType=VARCHAR},
			</if>
			<if test="SITE_ID != null">
				SITE_ID = #{SITE_ID,jdbcType=INTEGER},
			</if>
			<if test="store_province !=0 and store_province !=null and store_province !=''">
				USER_STORE_ADDRESS_PROVINCE =#{store_province,jdbcType=INTEGER},
			</if>
			<if test="store_city !=0 and store_city !=null and store_city!=''">
				USER_STORE_ADDRESS_CITY =#{store_city,jdbcType=INTEGER},
			</if>
			<if test="store_area !=0 and store_area !=null and store_area !='' ">
				USER_STORE_ADDRESS_COUNTY =#{store_area,jdbcType=INTEGER},
			</if>
			<if test="user_longitude != null">
				user_longitude = #{user_longitude,jdbcType=INTEGER},
			</if>
			<if test="user_latitude != null">
				user_latitude = #{user_latitude,jdbcType=INTEGER},
			</if>
			<if test="USER_COMPANY_LOCATION_ADDRESS != null">
				USER_COMPANY_LOCATION_ADDRESS = #{USER_COMPANY_LOCATION_ADDRESS,jdbcType=INTEGER},
			</if>
			<if test="USER_CONTROL_STORE_NAME != null">
				USER_CONTROL_STORE_NAME = #{USER_CONTROL_STORE_NAME,jdbcType=INTEGER},
			</if>
			<if test="USER_STORE_ADDRESS_DEAILS != null">
				USER_STORE_ADDRESS_DEAILS = #{USER_STORE_ADDRESS_DEAILS,jdbcType=INTEGER},
			</if>
			<if test="USER_STORE_LOCATION_ADDRESS != null">
				USER_STORE_LOCATION_ADDRESS = #{USER_STORE_LOCATION_ADDRESS,jdbcType=INTEGER},
			</if>
			<if test="PARTNER_USER_ID != null and PARTNER_USER_ID!=''">
				PARTNER_USER_ID = #{PARTNER_USER_ID,jdbcType=INTEGER},
			</if>
			<if test="PARTNER_USER_REALNA != null and PARTNER_USER_REALNA!=''">
				PARTNER_USER_REALNA = #{PARTNER_USER_REALNA,jdbcType=VARCHAR},
			</if>
			<if test="SUPERVISOR_USER_ID != null and SUPERVISOR_USER_ID!=''">
				SUPERVISOR_USER_ID = #{SUPERVISOR_USER_ID,jdbcType=INTEGER},
			</if>
			<if test="SUPERVISOR_USER_REALNA != null and SUPERVISOR_USER_REALNA!=''">
				SUPERVISOR_USER_REALNA = #{SUPERVISOR_USER_REALNA,jdbcType=VARCHAR},
			</if>
			<if test="COMMISSION_RATE != null and COMMISSION_RATE !=''">
				COMMISSION_RATE = #{COMMISSION_RATE,jdbcType=INTEGER},
			</if>
			<if test="STORE_USER_TYPE != null and STORE_USER_TYPE != ''">
				store_user_type = #{STORE_USER_TYPE,jdbcType=INTEGER},
			</if>
			<if test="USER_LOGISTICS_TEMPLATE_ID != null and USER_LOGISTICS_TEMPLATE_ID != ''">
				USER_LOGISTICS_TEMPLATE_ID = #{USER_LOGISTICS_TEMPLATE_ID,jdbcType=INTEGER},
			</if>
			RECOMMEND_USER_ID = #{RECOMMEND_USER_ID,jdbcType=INTEGER}
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 更新审核通过状态-->
	<update id="updateMemberInfoApplyState" parameterType="java.util.Map">
		update tbl_user_info_apply
		<set> 
			<if test="user_state !=null and user_state !=''">
				user_state=#{user_state,jdbcType=INTEGER},
			</if>
			<if test="rejected_reason !=null and rejected_reason !=''">
				rejected_reason=#{rejected_reason,jdbcType=INTEGER},
			</if>
			remark='',
			approval_user_id =#{public_user_id,jdbcType=INTEGER},
			approval_date = sysdate
		</set>
		where user_name = #{user_name,jdbcType=VARCHAR}
	</update>
	
	<!-- 更新会员信息-->
	<update id="updateMemberInfo" parameterType="java.util.Map">
		update tbl_user_info
		<set>
			<if test="REFEREE_USER_ID !=null and REFEREE_USER_ID !=''">
				REFEREE_USER_ID =#{REFEREE_USER_ID,jdbcType=VARCHAR},
			</if>
			<if test="REFEREE_USER_REALNAME !=null and REFEREE_USER_REALNAME !=''">
				REFEREE_USER_REALNAME =#{REFEREE_USER_REALNAME,jdbcType=VARCHAR},
			</if>
			<if test="STORE_ID !=null and STORE_ID !=''">
				STORE_ID =#{STORE_ID,jdbcType=INTEGER},
			</if>
			<if test="STORE_NAME != null and STORE_NAME !=''">
				STORE_NAME =#{STORE_NAME,jdbcType=VARCHAR},
			</if>
			<if test="USER_STATE !=null and USER_STATE !=''">
				USER_STATE = #{USER_STATE,jdbcType=INTEGER},
			</if>
			<if test="USER_MANAGE_NAME!=null and USER_MANAGE_NAME!=''">
				USER_MANAGE_NAME = #{USER_MANAGE_NAME,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_SEX!=null and USER_MANAGE_SEX!=''">
				USER_MANAGE_SEX = #{USER_MANAGE_SEX,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_CARDID!=null and USER_MANAGE_CARDID!=''">
				USER_MANAGE_CARDID = #{USER_MANAGE_CARDID,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_CARDID_FILE1!=null and USER_MANAGE_CARDID_FILE1!=''">
				USER_MANAGE_CARDID_FILE1 = #{USER_MANAGE_CARDID_FILE1,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_CARDID_FILE2!=null and USER_MANAGE_CARDID_FILE2!=''">
				USER_MANAGE_CARDID_FILE2 = #{USER_MANAGE_CARDID_FILE2,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_CURRENT_ADDRESS!=null and USER_MANAGE_CURRENT_ADDRESS!=''">
				USER_MANAGE_CURRENT_ADDRESS =#{USER_MANAGE_CURRENT_ADDRESS,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_TELEPHONE!=null">
				USER_MANAGE_TELEPHONE =#{USER_MANAGE_TELEPHONE,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_MOBILEPHONE!=null and USER_MANAGE_MOBILEPHONE!=''">
				USER_MANAGE_MOBILEPHONE =#{USER_MANAGE_MOBILEPHONE,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_WEIXIN!=null">
				USER_MANAGE_WEIXIN =#{USER_MANAGE_WEIXIN,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_QQ!=null">
				USER_MANAGE_QQ =#{USER_MANAGE_QQ,jdbcType=VARCHAR},
			</if>
			<if test="USER_MANAGE_EMAIL!=null">
				USER_MANAGE_EMAIL =#{USER_MANAGE_EMAIL,jdbcType=VARCHAR},
			</if>
			<if test="USER_COMPANY_NAME!=null and USER_COMPANY_NAME!=''">
				USER_COMPANY_NAME =#{USER_COMPANY_NAME,jdbcType=VARCHAR},
			</if>
			<if test="USER_COMPANY_CORPORATION!=null and USER_COMPANY_CORPORATION!=''">
				USER_COMPANY_CORPORATION =#{USER_COMPANY_CORPORATION,jdbcType=VARCHAR},
			</if>
			<if test="USER_COMPANY_TELEPHONE!=null and USER_COMPANY_TELEPHONE!=''">
				USER_COMPANY_TELEPHONE =#{USER_COMPANY_TELEPHONE,jdbcType=VARCHAR},
			</if>
			<if test="USER_COMPANY_TYPE!=null">
				USER_COMPANY_TYPE =#{USER_COMPANY_TYPE,jdbcType=INTEGER},
			</if>
			<if test="USER_COMPANY_ADDRESS_MAX!=0 and USER_COMPANY_ADDRESS_MAX!=null">
				USER_COMPANY_ADDRESS_MAX =#{USER_COMPANY_ADDRESS_MAX,jdbcType=INTEGER},
			</if>
			<if test="province!=0 and province!=null and province!='' ">
				USER_COMPANY_ADDRESS_PROVINCE =#{province,jdbcType=INTEGER},
			</if>
			<if test="city!=0 and city!=null and city!=''">
				USER_COMPANY_ADDRESS_CITY =#{city,jdbcType=INTEGER},
			</if>
			<if test="area!=0 and area!=null and area !=''">
				USER_COMPANY_ADDRESS_COUNTY =#{area,jdbcType=INTEGER},
			</if>
			<if test="USER_COMPANY_ADDRESS_DEAILS!=null">
				USER_COMPANY_ADDRESS_DEAILS =#{USER_COMPANY_ADDRESS_DEAILS,jdbcType=INTEGER},
			</if>
			<if test="USER_COMPANY_COMMENT!=null and USER_COMPANY_COMMENT!=''">
				USER_COMPANY_COMMENT =#{USER_COMPANY_COMMENT,jdbcType=VARCHAR},
			</if>
			<if test="MARKET_SUPERVISION_USER_ID!=null and MARKET_SUPERVISION_USER_ID!=''">
				MARKET_SUPERVISION_USER_ID =#{MARKET_SUPERVISION_USER_ID,jdbcType=VARCHAR},
			</if>
			<if test="MARKET_SUPERVISION_USER_REALNA!=null and MARKET_SUPERVISION_USER_REALNA!=''">
				MARKET_SUPERVISION_USER_REALNA =#{MARKET_SUPERVISION_USER_REALNA,jdbcType=VARCHAR},
			</if>
			<if test="edit_user_id!=null and edit_user_id!=''">
				edit_user_id =#{edit_user_id,jdbcType=VARCHAR},
				edit_date = sysdate,
			</if>
			<if test="user_business_licence_imgurl!=null">
				user_business_licence_imgurl =#{user_business_licence_imgurl,jdbcType=VARCHAR},
			</if>
			<if test="SHOP_WEBSITE!=null">
				SHOP_WEBSITE =#{SHOP_WEBSITE,jdbcType=VARCHAR},
			</if>
			<if test="SHOP_NAME!=null">
				SHOP_NAME =#{SHOP_NAME,jdbcType=VARCHAR},
			</if>
			<if test="PLATFORM!=null">
				PLATFORM =#{PLATFORM,jdbcType=VARCHAR},
			</if>
			<if test="MAIN_CATEGORY!=null">
				MAIN_CATEGORY =#{MAIN_CATEGORY,jdbcType=VARCHAR},
			</if>
			<if test="shop_photo!=null">
				shop_photo =#{shop_photo,jdbcType=VARCHAR},
			</if>
			<if test="BUSINESS_LICENSE_NUMBER!=null">
				BUSINESS_LICENSE_NUMBER =#{BUSINESS_LICENSE_NUMBER,jdbcType=VARCHAR},
			</if>
			<if test="SITE_ID != null">
				SITE_ID = #{SITE_ID,jdbcType=INTEGER},
			</if>
			<if test="USER_COMPANY_LOCATION_ADDRESS != null">
				USER_COMPANY_LOCATION_ADDRESS = #{USER_COMPANY_LOCATION_ADDRESS,jdbcType=INTEGER},
			</if>
			<if test="USER_CONTROL_STORE_NAME != null">
				USER_CONTROL_STORE_NAME = #{USER_CONTROL_STORE_NAME,jdbcType=INTEGER},
			</if>
			<if test="USER_STORE_ADDRESS_DEAILS != null">
				USER_STORE_ADDRESS_DEAILS = #{USER_STORE_ADDRESS_DEAILS,jdbcType=INTEGER},
			</if>
			<if test="USER_STORE_LOCATION_ADDRESS != null">
				USER_STORE_LOCATION_ADDRESS = #{USER_STORE_LOCATION_ADDRESS,jdbcType=INTEGER},
			</if>
			<if test="store_province !=0 and store_province !=null and store_province!='' ">
				USER_STORE_ADDRESS_PROVINCE =#{store_province,jdbcType=INTEGER},
			</if>
			<if test="store_city !=0 and store_city!=null and store_city!='' ">
				USER_STORE_ADDRESS_CITY =#{store_city,jdbcType=INTEGER},
			</if>
			<if test="store_area !=0 and store_area!=null and store_area!='' ">
				USER_STORE_ADDRESS_COUNTY =#{store_area,jdbcType=INTEGER},
			</if>
			<if test="PARTNER_USER_ID != null and PARTNER_USER_ID!=''">
				PARTNER_USER_ID = #{PARTNER_USER_ID,jdbcType=INTEGER},
			</if>
			<if test="PARTNER_USER_REALNA != null and PARTNER_USER_REALNA!=''">
				PARTNER_USER_REALNA = #{PARTNER_USER_REALNA,jdbcType=VARCHAR},
			</if>
			<if test="SUPERVISOR_USER_ID != null and SUPERVISOR_USER_ID!=''">
				SUPERVISOR_USER_ID = #{SUPERVISOR_USER_ID,jdbcType=INTEGER},
			</if>
			<if test="SUPERVISOR_USER_REALNA != null and SUPERVISOR_USER_REALNA!=''">
				SUPERVISOR_USER_REALNA = #{SUPERVISOR_USER_REALNA,jdbcType=VARCHAR},
			</if>
			<if test="COMMISSION_RATE != null and COMMISSION_RATE !=''">
				COMMISSION_RATE = #{COMMISSION_RATE,jdbcType=VARCHAR},
			</if>
			<if test="STORE_USER_TYPE != null and STORE_USER_TYPE != ''">
				store_user_type = #{STORE_USER_TYPE,jdbcType=INTEGER},
			</if>
			<if test="USER_LOGISTICS_TEMPLATE_ID != null and USER_LOGISTICS_TEMPLATE_ID != ''">
				USER_LOGISTICS_TEMPLATE_ID = #{USER_LOGISTICS_TEMPLATE_ID,jdbcType=INTEGER},
			</if>
			RECOMMEND_USER_ID = #{RECOMMEND_USER_ID,jdbcType=INTEGER}
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<select id="getUserKey" parameterType="java.util.Map" resultType="java.lang.String">
		select getUserKey(
		#{c_user_name,jdbcType=VARCHAR},
		#{c_typeid,jdbcType=VARCHAR},
		#{c_user_type,jdbcType=VARCHAR}
		) from dual
	</select>

	<select id="getCheck_Code" parameterType="java.util.Map" resultType="java.lang.String">
		select getCheck_Code(
		#{c_user_name,jdbcType=VARCHAR},
		#{c_money,jdbcType=INTEGER},
		#{c_user_key,jdbcType=VARCHAR}
		) from dual
	</select>
	
	<insert id="insertBankAccount" parameterType="java.util.Map">
		<selectKey keyProperty="id" resultType="int" order="BEFORE"> 
        	SELECT SEQ_BANK_ACCOUNT.nextval FROM DUAL
    	</selectKey> 
		insert into TBL_BANK_ACCOUNT
		(
			id,
			user_id,
			user_type,
			bank_account,
			account_balance,
			account_balance_checkcode,
			credit_money,
			credit_money_use,
			credit_money_balance,
			credit_checkcode,
			payment_password,
			score,
			update_date,
			sub_merchant_id
		)
		values
		(
			#{id,jdbcType=INTEGER},
			#{user_id,jdbcType=INTEGER},
			#{user_type,jdbcType=VARCHAR},
			#{bank_account,jdbcType=VARCHAR},
			#{account_balance,jdbcType=FLOAT},
			#{account_balance_checkcode,jdbcType=VARCHAR},
			#{credit_money,jdbcType=FLOAT},
			#{credit_money_use,jdbcType=FLOAT},
			#{credit_money_balance,jdbcType=FLOAT},
			#{credit_checkcode,jdbcType=VARCHAR},
			#{payment_password,jdbcType=VARCHAR},
			#{score,jdbcType=FLOAT},
			#{update_date,jdbcType=TIMESTAMP},
			#{sub_merchant_id,jdbcType=VARCHAR}
		)
	</insert>
	
	<insert  id ="insertCacheKey" parameterType ="java.util.Map">
		insert into TBL_USER_CACHE_KEY (user_name,cache_key,create_time)
		values (
			#{user_name,jdbcType=VARCHAR},
			#{cache_key,jdbcType=VARCHAR},
			sysdate
		)
	</insert>
	
	<insert  id ="insertStoreUserCacheKey" parameterType ="java.util.Map">
		insert into TBL_STORE_CACHE_KEY (user_name,cache_key,create_time)
		values (
			#{user_name,jdbcType=VARCHAR},
			#{cache_key,jdbcType=VARCHAR},
			sysdate
		)
	</insert>
	
	<!-- 新增用户地址信息 -->
	<insert id="insertUserAddress" parameterType="java.util.Map">
		<selectKey keyProperty="id" resultType="long" order="BEFORE">
			SELECT seq_user_address.nextval FROM DUAL
		</selectKey>
		insert into TBL_USER_ADDRESS
		(
			id,
			user_id,
			receiving_name,
			receiving_address_province_id,
			receiving_address_city_id,
			receiving_address_county_id,
			receiving_address_details,
			receiving_phone,
			receiving_postcode,
			is_default,
			address_type,
			is_delete
		)
		values
		(
			#{id,jdbcType=INTEGER},
			#{user_id,jdbcType=INTEGER},
			#{receiving_name,jdbcType=VARCHAR},
			#{receiving_address_province_id,jdbcType=INTEGER},
			#{receiving_address_city_id,jdbcType=INTEGER},
			#{receiving_address_county_id,jdbcType=INTEGER},
			#{receiving_address_details,jdbcType=VARCHAR},
			#{receiving_phone,jdbcType=VARCHAR},
			#{receiving_postcode,jdbcType=VARCHAR},
			#{is_default,jdbcType=INTEGER},
			#{address_type,jdbcType=INTEGER},
			0
		)
		</insert>
		
	  <!-- 分页查询会员管理列表 -->
		<select id="queryMemberManagerPageBy" parameterType="java.util.Map" resultType="java.util.Map">
		select * from (
		select  a.login_name,a.user_manage_name,a.user_manage_mobilephone,a.user_company_address_deails,a.user_resource,a.approval_date,a.ACCOUNT_BALANCE,a.CREDIT_MONEY,a.CREDIT_MONEY_BALANCE,a.create_user_realname,
         a.store_name,a.REFEREE_USER_REALNAME,a.MARKET_SUPERVISION_USER_REALNA,a.score_grade,a.grade_name, rownum rn from (
			  select u.login_name,u.user_manage_name,u.user_manage_mobilephone,u.user_company_address_deails,u.user_resource,u.approval_date,(ba.account_balance-(ba.credit_money-ba.credit_money_balance)) ACCOUNT_BALANCE,ba.CREDIT_MONEY,ba.CREDIT_MONEY_BALANCE,
			            SU.USER_REALNAME create_user_realname,si.store_name,su1.user_realname REFEREE_USER_REALNAME,
			            su2.user_realname MARKET_SUPERVISION_USER_REALNA,(case ba.score 
			                 when null then ' '
			                 else (select GRADE_NAME from TBL_USER_GRADE_INFO sg where MIN_SCORE &lt;=ba.score and MAX_SCORE &gt;ba.score and rownum &lt;= 1)
			                 end) score_grade,ig.grade_name from 
						TBL_USER_INFO u
					  left join tbl_sys_user_info su on u.CREATE_USER_ID=su.id
			      left join TBL_BANK_ACCOUNT ba on u.id=ba.user_id
			left join TBL_STORE_INFO si on u.store_id=si.id
			left join tbl_sys_user_info su1 on su1.id=u.REFEREE_USER_ID
			left join TBL_SYS_USER_INFO su2 on su2.id=u.MARKET_SUPERVISION_USER_ID
			left join TBL_ISSUING_GRADE ig on ig.id=u.ISSUING_GRADE_ID
		<where>
	        <if test="login_name!=null and login_name!=''">
				 u.login_name =#{login_name,jdbcType=VARCHAR}
			 </if>
			 <if test="user_manage_name!=null and user_manage_name!=''">
				and u.user_manage_name = #{user_manage_name,jdbcType=VARCHAR}
			 </if>
			 <if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
				and u.user_manage_mobilephone = #{user_manage_mobilephone, jdbcType=VARCHAR}
			 </if>
			 <if test="states!=null and states!=''">
				and u.user_state=#{state,jdbcType=INTEGER}
			 </if>
	         <if test="busi_manager!=null and busi_manager!=''">
	   			and u.market_supervision_user_name = #{busi_manager,jdbcType=VARCHAR}
			 </if>
			 <if test="salesman!=null and salesman!=''">
	   			and u.referee_user_name = #{salesman,jdbcType=VARCHAR}
			 </if>
			 <if test="store_id!=null and store_id!=''">
	   			and u.store_id = #{store_id,jdbcType=INTEGER}
			 </if>
		</where>
		) a where
		rownum &lt;= #{end_rownum})
		where rn &gt; #{start_rownum}
	</select>
	
	<!--启用禁用会员 -->
	<update id="disableUserInfoById" parameterType="java.util.Map">
		UPDATE tbl_user_info
		SET user_state =  #{state,jdbcType=INTEGER}
		WHERE  id = #{id,jdbcType=VARCHAR}
	</update>
	
	<!-- 批量启用禁用会员 -->
	<update id="multiDisableUserInfoByUserId" parameterType="java.util.Map">
		UPDATE tbl_user_info
		SET user_state =  #{user_state,jdbcType=INTEGER}
		WHERE  id IN
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
			#{id,jdbcType=INTEGER}
		</foreach>
	</update>
	
	<!-- 更新会员积分 -->
	<update id="updateBankAccountByUserId" parameterType="java.util.Map">
		update TBL_BANK_ACCOUNT
		<set>
			<if test="score != null">
				score = #{score,jdbcType=FLOAT},
			</if>
			update_date = sysdate
		</set>
		where user_id = #{user_id,jdbcType=INTEGER}
	</update>
	
	<!-- 更新会员折扣率 -->
	<update id="updateUserInfoDiscount" parameterType="java.util.Map">
		update TBL_USER_INFO
		<set>
			<if test="discount != null">
				discount = #{discount,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{user_id,jdbcType=INTEGER}
	</update>
	
	<!-- 根据用户ID查询用户账户积分 -->
	<select id="queryScoreByUserId" parameterType="long" resultType="int">
		select nvl(score, 0) from TBL_BANK_ACCOUNT where user_id = #{user_id,jdbcType=INTEGER}
	</select>
	
	<!-- 根据用户ID查询代发等级 -->
	<select id="queryIssuingGradeByUserId" parameterType="long" resultType="java.util.Map">
		select b.id,b.grade_name from TBL_USER_INFO a
		left join tbl_issuing_grade b on a.issuing_grade_id=b.id
		 where a.id = #{user_name,jdbcType=INTEGER}
	</select>
	<!-- 根据用户名查询用户物流关系表 -->
	<select id="queryUserLogisticsCompamy" parameterType="string" resultType="string">
		select logistics_company_id from tbl_user_logistics_company
		 where user_name = #{id,jdbcType=VARCHAR}
	</select>
	
	<!-- 设置会员代发等级 -->
	<update id="updateMemberIssuingGrade" parameterType="java.util.Map">
		UPDATE tbl_user_info
		SET issuing_grade_id = #{issuing_grade_id,jdbcType=INTEGER}
		WHERE  id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 获取业务员、业务经理、门店下属会员列表 -->
    <select id="querySubsidiaryMemberList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    	SELECT  A.*,
    			(SELECT TBA.CREDIT_MONEY FROM TBL_BANK_ACCOUNT TBA WHERE TBA.USER_ID = A.ID) AS CREDIT_MONEY,
    			(SELECT TBA.ACCOUNT_BALANCE FROM TBL_BANK_ACCOUNT TBA WHERE TBA.USER_ID = A.ID) AS ACCOUNT_BALANCE,
    			(SELECT TBA.CREDIT_MONEY_BALANCE FROM TBL_BANK_ACCOUNT TBA WHERE TBA.USER_ID = A.ID) AS CREDIT_MONEY_BALANCE,
    			(SELECT TSUI.USER_REALNAME FROM TBL_SYS_USER_INFO TSUI WHERE TSUI.ID = A.CREATE_USER_ID) AS CREATE_USER_REALNAME,
    			(SELECT TSUI.USER_REALNAME FROM TBL_SYS_USER_INFO TSUI WHERE TSUI.ID = A.APPROVAL_USER_ID) AS APPROVAL_USER_REALNAME,
    			(select e.name  from  tbl_dic_region e where a.user_company_address_province=e.id)province,
				(select f.name  from   tbl_dic_region f where A.user_company_address_city=f.id)city,
				(select g.name  from   tbl_dic_region g where A.user_company_address_county=g.id)area
    	  FROM (SELECT T.*,ROWNUM AS RN
				  FROM (SELECT <include refid="all_column"/>
				  		  FROM TBL_USER_INFO TUI
					    <where>
							   TUI.user_state !='2'
							   and tui.user_type != 4
							<if test="referee_user_id != null and referee_user_id != 0 ">
								AND	TUI.REFEREE_USER_ID = #{referee_user_id,jdbcType=INTEGER}
							</if>
							<if test="store_user_id != null and store_user_id != 0 ">
								AND (EXISTS (SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.SHOPKEEPER_USER_ID = #{store_user_id,jdbcType=INTEGER} AND TSI.ID = TUI.STORE_ID)
									OR EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUR WHERE TSUR.USER_ID = #{store_user_id,jdbcType=INTEGER} AND TSUR.STORE_ID = TUI.STORE_ID)
								)
							</if>
							<if test="login_name != null and login_name != ''">
					            AND TUI.LOGIN_NAME LIKE '%'||#{login_name}||'%'
					        </if>
					        <if test="user_manage_name != null and user_manage_name != ''">
					            AND TUI.USER_MANAGE_NAME LIKE '%'||#{user_manage_name}||'%'
					        </if>
					        <if test="user_manage_mobilephone != null and user_manage_mobilephone != ''">
					            AND TUI.USER_MANAGE_MOBILEPHONE =#{user_manage_mobilephone}
					        </if>
					    </where>) T
		 		 WHERE ROWNUM &lt;= #{end_rownum,jdbcType=INTEGER}) A
		 WHERE RN &gt; #{start_rownum,jdbcType=INTEGER} 
	</select>
	
	<!-- 获取业务员、业务经理、门店下属会员数量 -->
    <select id="querySubsidiaryMemberCount" parameterType="java.util.HashMap" resultType="int">
    	SELECT COUNT(1) 
		  FROM TBL_USER_INFO TUI
		<where>
			   TUI.user_state !='2'
			   and tui.user_type != 4
			<if test="referee_user_id != null and referee_user_id != 0 ">
				AND	TUI.REFEREE_USER_ID = #{referee_user_id,jdbcType=INTEGER}
			</if>
			<if test="store_user_id != null and store_user_id != 0 ">
				AND (EXISTS (SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.SHOPKEEPER_USER_ID = #{store_user_id,jdbcType=INTEGER} AND TSI.ID = TUI.STORE_ID)
					OR EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUR WHERE TSUR.USER_ID = #{store_user_id,jdbcType=INTEGER} AND TSUR.STORE_ID = TUI.STORE_ID)
				)
			</if>
			<if test="login_name != null and login_name != ''">
	            AND TUI.LOGIN_NAME LIKE '%'||#{login_name}||'%'
	        </if>
	        <if test="user_manage_name != null and user_manage_name != ''">
	            AND TUI.USER_MANAGE_NAME LIKE '%'||#{user_manage_name}||'%'
	        </if>
	        <if test="user_manage_mobilephone != null and user_manage_mobilephone != ''">
	            AND TUI.USER_MANAGE_MOBILEPHONE =#{user_manage_mobilephone}
	        </if>
		</where>
	</select>
	
	 <!-- 查询个人收支记录总数 -->
    <select id="queryMemberAccountRecordCount" parameterType="java.util.Map" resultType="int">
             select count(1)                
                from tbl_user_account_record info 
                left join tbl_user_info ui on info.user_name=ui.user_name
			        <where>
			        	  1=1
			            <if test="record_number != null and record_number != ''">
				            and info.record_number = #{record_number}
				        </if>
				        <if test="login_name != null and login_name  != ''">
				            and ui.login_name  = #{login_name }
				        </if>
			            <if test="docket_number != null and docket_number != ''">
				            and info.docket_number = #{docket_number}
				        </if>
				        <if test="customer_name != null and customer_name != ''">
				            and ui.user_manage_name = #{customer_name}
				        </if>
				        <if test="user_name != null and user_name != ''">
				            and info.user_name = #{user_name}
				        </if>
				        <if test="remark != null and remark != ''">
				            and info.remark like '%'||#{remark}||'%'
				        </if>
				        <if test="record_channel != null and record_channel != ''">
				            and info.record_channel = #{record_channel}
				        </if>
				        <if test="record_type != null and record_type != ''">
				            and info.record_type = #{record_type}
				        </if>
				        <if test="user_manage_mobilephone != null and user_manage_mobilephone != ''">
				            and exists(select 1 from tbl_user_info where id=info.user_name and user_manage_mobilephone=#{user_manage_mobilephone,jdbcType=VARCHAR})
				        </if>
				        <if test="begin_time != null and begin_time != ''">
				            and info.create_date &gt; to_date(#{begin_time},'YYYY-MM-DD HH24:MI:SS')
				        </if>
				        <if test="end_time != null and end_time != ''">
				            and info.create_date &lt;= to_date(#{end_time},'YYYY-MM-DD HH24:MI:SS')
				        </if>
			        </where>
                order by info.create_date desc,info.id desc
    </select>
    
    <!-- 查询个人收支记录列表 -->
	<select id="queryMemberAccountRecordList" parameterType="java.util.Map" resultType="java.util.Map">
		select k.*,to_char(create_date,'yyyy-mm-dd hh24:mi:ss') created_date,
			   (select USER_REALNAME from TBL_SYS_USER_INFO where user_name = K.CREATE_USER) as  SALE_USER_REALNAME, 
               (select LOGIN_NAME from TBL_USER_INFO where user_name = K.USER_NAME) as LOGIN_NAME,
               (select USER_MANAGE_NAME from TBL_USER_INFO where user_name = K.USER_NAME) as CUSTOM_NAME,
               (select USER_REALNAME from TBL_SYS_USER_INFO where user_name = K.YWJL_USER_NAME) as  YWJL_USER_REALNAME,
               (select USER_REALNAME from TBL_SYS_USER_INFO where user_name = K.YWY_USER_NAME) as  YWY_USER_REALNAME,
               (select STORE_NAME from TBL_STORE_INFO where id = K.MD_ID) as  STORE_NAME,
               (select USER_MANAGE_MOBILEPHONE from tbl_user_info where id=k.user_name) USER_MANAGE_MOBILEPHONE
		from (select * from (
            select a.*, rownum num from (
                select info.*                
                from tbl_user_account_record info 
                left join tbl_user_info ui on info.user_name=ui.user_name
			        <where>
			        	  1=1
			            <if test="record_number != null and record_number != ''">
				            and info.record_number = #{record_number}
				        </if>
				        <if test="login_name != null and login_name  != ''">
				            and ui.login_name  = #{login_name }
				        </if>
			            <if test="docket_number != null and docket_number != ''">
				            and info.docket_number = #{docket_number}
				        </if>
				        <if test="customer_name != null and customer_name != ''">
				            and ui.user_manage_name = #{customer_name}
				        </if>
				        <if test="user_name != null and user_name != ''">
				            and info.user_name = #{user_name}
				        </if>
				        <if test="remark != null and remark != ''">
				            and info.remark like '%'||#{remark}||'%'
				        </if>
				        <if test="record_channel != null and record_channel != ''">
				            and info.record_channel = #{record_channel}
				        </if>
				        <if test="record_type != null and record_type != ''">
				            and info.record_type = #{record_type}
				        </if>
				        <if test="user_manage_mobilephone != null and user_manage_mobilephone != ''">
				            and exists(select 1 from tbl_user_info where id=info.user_name and user_manage_mobilephone=#{user_manage_mobilephone,jdbcType=VARCHAR})
				        </if>
				        <if test="begin_time != null and begin_time != ''">
				            and info.create_date &gt; to_date(#{begin_time},'YYYY-MM-DD HH24:MI:SS')
				        </if>
				        <if test="end_time != null and end_time != ''">
				            and info.create_date &lt;= to_date(#{end_time},'YYYY-MM-DD HH24:MI:SS')
				        </if>
			        </where>
                order by info.create_date desc,info.id desc
            ) a where ROWNUM  &lt;= #{end_rownum,jdbcType=INTEGER}
        ) where num &gt;#{start_rownum,jdbcType=INTEGER}) k
	</select>
	
	<!-- 查询个人收支记录详情列表 -->
	<select id="queryMemberAccountRecordDetail" parameterType="java.util.Map" resultType="java.util.Map">
         select <include refid="user_select_column"/>,
         (select USER_REALNAME from TBL_SYS_USER_INFO where user_name = info.CREATE_USER) SALE_USER_REALNAME, 
         (select LOGIN_NAME from TBL_USER_INFO where user_name = info.USER_NAME) as LOGIN_NAME,
         (select USER_MANAGE_MOBILEPHONE from TBL_USER_INFO where user_name = info.USER_NAME) as USER_MANAGE_MOBILEPHONE,
         (select USER_REALNAME from TBL_SYS_USER_INFO where user_name = info.YWJL_USER_NAME) as  YWJL_USER_REALNAME   
         from tbl_user_account_record info where id =#{id,jdbcType=INTEGER}
	</select>
	
	<!-- 返回授信管理列表结果-->
	<select id="queryCreditList" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT *
		FROM (SELECT A.*, ROWNUM num
		FROM (
			SELECT
			<include refid="credit_all_column" />,ui.user_manage_name,tsui.user_name create_user_name
			FROM TBL_CREDIT_ORDER co
			LEFT JOIN TBL_USER_INFO ui on co.user_name = ui.user_name
			left join tbl_sys_user_info tsui on co.create_user_id=tsui.id
			<where>
				ui.user_type in (1,2,3,4)
				<if test="credit_number!=null and credit_number!='' ">
					and co.credit_number  LIKE CONCAT(CONCAT('%', #{credit_number,jdbcType=VARCHAR}),'%')
				</if>
				<if test="create_user_name!=null and create_user_name!='' ">
					and tsui.user_name  LIKE CONCAT(CONCAT('%', #{create_user_name,jdbcType=VARCHAR}),'%')
				</if>
				<if test="user_manage_name!=null and user_manage_name!='' ">
					and ui.user_manage_name  LIKE CONCAT(CONCAT('%', #{user_manage_name,jdbcType=VARCHAR}),'%')
				</if>
	            <if test="start_create_date!=null and start_create_date!='' ">
                    and to_char(co.create_date,'yyyy-mm-dd hh24:mi:ss') &gt;= #{start_create_date,jdbcType=VARCHAR}
                </if>
                <if test="end_create_date!=null and end_create_date!='' ">
                    and to_char(co.create_date,'yyyy-mm-dd hh24:mi:ss') &lt;= #{end_create_date,jdbcType=VARCHAR}
                </if>
                <if test="state != null">
					and co.state IN
	                <foreach item="item" collection="state" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
			</where>
			order by co.create_date desc
		) A
		WHERE ROWNUM  &lt; = #{end_rownum,jdbcType=INTEGER})
		WHERE num &gt;#{start_rownum,jdbcType=INTEGER}
	</select>
	
     <!-- 返回授信管理列表总数-->
	<select id="queryCreditCount" resultType="int" parameterType="java.util.Map">
		SELECT count(co.id)
		FROM TBL_CREDIT_ORDER co
		LEFT JOIN TBL_USER_INFO ui on co.user_name = ui.user_name
		left join tbl_sys_user_info tsui on co.create_user_id=tsui.id
		<where>
			ui.user_type in (1,2,3,4)
				<if test="credit_number!=null and credit_number!='' ">
					and co.credit_number  LIKE CONCAT(CONCAT('%', #{credit_number,jdbcType=VARCHAR}),'%')
				</if>
				<if test="create_user_name!=null and create_user_name!='' ">
					and tsui.user_name  LIKE CONCAT(CONCAT('%', #{create_user_name,jdbcType=VARCHAR}),'%')
				</if>
				<if test="user_manage_name!=null and user_manage_name!='' ">
					and ui.user_manage_name  LIKE CONCAT(CONCAT('%', #{user_manage_name,jdbcType=VARCHAR}),'%')
				</if>
	            <if test="start_create_date!=null and start_create_date!='' ">
                    and to_char(co.create_date,'yyyy-mm-dd hh24:mi:ss') &gt;= #{start_create_date,jdbcType=VARCHAR}
                </if>
                <if test="end_create_date!=null and end_create_date!='' ">
                    and to_char(co.create_date,'yyyy-mm-dd hh24:mi:ss') &lt;= #{end_create_date,jdbcType=VARCHAR}
                </if>
                <if test="state != null">
					and co.state IN
	                <foreach item="item" collection="state" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
			</where>
	</select>
	
	<!-- 返回授信管理列表详情 -->
	<select id="queryCreditById" parameterType="long" resultType="java.util.Map">
		SELECT
		<include refid="credit_all_column" />,ui.user_manage_name,sui.user_name create_user_name
		FROM TBL_CREDIT_ORDER co
		LEFT JOIN TBL_USER_INFO ui on co.user_name = ui.user_name
		left join tbl_sys_user_info sui on co.create_user_id=sui.id
		WHERE co.id =  #{id,jdbcType=INTEGER}
	</select>
	<!-- 根据用户ID查询信息 -->
	<select id="querySysUserInfoById" parameterType="long" resultType="string">
		select user_realname from tbl_sys_user_info where id=#{id,jdbcType=INTEGER}
	</select>
	
	<!-- 新增授信管理 -->
	<insert id="insertCredit" parameterType="java.util.Map">
		 <selectKey keyProperty="id" resultType="long" order="BEFORE">
			SELECT SEQ_CREDIT_ORDER.nextval FROM DUAL
		</selectKey> 
		INSERT INTO TBL_CREDIT_ORDER(
			id,
			credit_number,     
			user_name,         
			idcard_number,     
			credit_money,      
			phone,             
			telphone,          
			idcard_address,
			create_date,
			create_user_id,  
			state
		)
		values
		(
			#{id,jdbcType=INTEGER},
			getAutoNumberShort(62),
			#{user_name,jdbcType=VARCHAR},
			#{idcard_number,jdbcType=VARCHAR},
			#{credit_money,jdbcType=FLOAT},
			#{phone,jdbcType=VARCHAR},
			#{telphone,jdbcType=VARCHAR},
			#{idcard_address,jdbcType=VARCHAR},
			sysdate,
			#{create_user_id,jdbcType=INTEGER},
			#{state,jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 修改授信管理 -->
	<update id="updateCredit" parameterType="java.util.Map">
		UPDATE TBL_CREDIT_ORDER
		<set>
			<if test="user_name!=null and user_name!=''">
				user_name = #{user_name,jdbcType=VARCHAR},
			</if>
			<if test="state!=null and state!=''">
				state = #{state,jdbcType=VARCHAR},
			</if>
			<if test="rejected_reason!=null and rejected_reason!=''">
				rejected_reason = #{rejected_reason,jdbcType=VARCHAR},
			</if>
			<if test="IDCARD_NUMBER!=null and IDCARD_NUMBER!=''">
				IDCARD_NUMBER = #{IDCARD_NUMBER,jdbcType=VARCHAR},
			</if>
			<if test="CREDIT_MONEY!=null">
				CREDIT_MONEY = #{CREDIT_MONEY,jdbcType=FLOAT},
			</if>
			<if test="PHONE!=null">
				PHONE = #{PHONE,jdbcType=VARCHAR},
			</if>
			<if test="TELPHONE !=null">
				TELPHONE = #{TELPHONE,jdbcType=VARCHAR},
			</if>
			<if test="IDCARD_ADDRESS !=null">
				IDCARD_ADDRESS = #{IDCARD_ADDRESS,jdbcType=VARCHAR}
			</if>
		</set>
		WHERE id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 删除授信管理 -->
	<delete id="removeCredit" parameterType="long">
		DELETE
		FROM TBL_CREDIT_ORDER co
		WHERE id =  #{id,jdbcType=INTEGER}
	</delete>
	
	<!-- 授信管理审批更新 -->
	<update id="updateById" parameterType="java.util.Map">
		UPDATE TBL_CREDIT_ORDER 
	    SET STATE = #{state,jdbcType=VARCHAR},
	    	AUDIT_DATE = sysdate,
	    	AUDIT_USER_ID = #{public_user_id,jdbcType=INTEGER},
	    	LAST_UPDATE_TIME = sysdate
	    WHERE ID = #{id,jdbcType=INTEGER}  
	</update>
	
	<!-- 会员授信审核后修改一系列金额并修改验证码 -->
	<select id="updateBankAccount" statementType="CALLABLE" parameterType="java.util.Map">
		<![CDATA[
			CALL PRO_ADJUST_CREDIT_MONEY(
					#{client_credit_user_name,mode=IN,jdbcType=VARCHAR},
					#{client_new_credit_money_number,mode=IN,jdbcType=INTEGER},
					#{output_status,mode=OUT,jdbcType=VARCHAR},
					#{output_msg,mode=OUT,jdbcType=VARCHAR}
				)
			]]>
	</select>
	
	<!-- 会员预审通过次数加1或者预审登入次数加1 -->
	<update id="updateMemberInfoById" parameterType="java.util.Map">
		UPDATE tbl_user_info 
		<set>
			<if test="pre_aprv_allowed_number != null and pre_aprv_allowed_number != ''">
				pre_aprv_allowed_number = #{pre_aprv_allowed_number,jdbcType=INTEGER},
			</if>
			<if test="pre_aprv_login_number != null and pre_aprv_login_number != ''">
				pre_aprv_login_number = #{pre_aprv_login_number,jdbcType=INTEGER}
			</if>
		</set>
		where id=#{ID,jdbcType=INTEGER} 
	</update>
	
	<!--查询临时会员信息 -->
	<select id="queryTempMemberInfo" parameterType="java.util.Map"  resultType="java.util.Map">
		SELECT <include refid="all_column"/>
		  FROM TBL_USER_INFO 
		 WHERE LOGIN_NAME = #{login_name} AND USER_RESOURCE = '临时会员'
	</select>
	
	<!--获取临时会员注册ID -->
	<select id="queryTempMemberInfoId" resultType="int" parameterType="java.util.Map"> 
        	SELECT seq_user_info.nextval FROM DUAL
    </select> 
    
	<!--注册临时会员信息 -->
	<insert id="insertTempMemberInfo" parameterType="java.util.Map">
		insert into tbl_user_info
			(
			id,user_name,login_name,user_pwd,user_manage_name,user_manage_sex,
			user_manage_cardid,user_manage_cardid_file1,user_manage_cardid_file2,
			user_manage_current_address,user_manage_telephone,user_manage_mobilephone,
			user_manage_weixin,user_manage_qq,user_manage_email,user_company_name,
			user_company_corporation,user_company_telephone,user_company_type,user_company_address_max,
			user_company_address_province,user_company_address_city,user_company_address_county,
			user_company_address_deails,user_company_comment,user_create_date,user_create_ip,openid,user_head_imgurl,
			user_resource,user_state,referee_user_name,
			referee_user_realname,user_business_licence_imgurl,
			shop_website,shop_name,platform,main_category,shop_photo,site_id
			)
		values
			(
			#{id,jdbcType=INTEGER},#{id,jdbcType=INTEGER},#{login_name,jdbcType=VARCHAR},#{user_pwd,jdbcType=VARCHAR},#{user_manage_name,jdbcType=VARCHAR},#{user_manage_sex,jdbcType=VARCHAR},
			#{user_manage_cardid,jdbcType=VARCHAR},#{user_manage_cardid_file1,jdbcType=VARCHAR},#{user_manage_cardid_file2,jdbcType=VARCHAR},
			#{user_manage_current_address,jdbcType=VARCHAR},#{user_manage_telephone,jdbcType=VARCHAR},#{user_manage_mobilephone,jdbcType=VARCHAR},
			#{user_manage_weixin,jdbcType=VARCHAR},#{user_manage_qq,jdbcType=VARCHAR},#{user_manage_email,jdbcType=VARCHAR},#{user_company_name,jdbcType=VARCHAR},
			#{user_company_corporation,jdbcType=VARCHAR},#{user_company_telephone,jdbcType=VARCHAR},#{user_company_type,jdbcType=INTEGER},#{user_company_address_max,jdbcType=INTEGER},
			#{user_company_address_province,jdbcType=INTEGER},#{user_company_address_city,jdbcType=INTEGER},#{user_company_address_county,jdbcType=INTEGER},
			#{user_company_address_deails,jdbcType=VARCHAR},#{user_company_comment,jdbcType=VARCHAR},sysdate,#{user_create_ip,jdbcType=VARCHAR},#{openid,jdbcType=VARCHAR},#{user_head_imgurl,jdbcType=VARCHAR}
			,#{user_resource,jdbcType=VARCHAR},#{user_state,jdbcType=INTEGER},#{referee_user_name,jdbcType=VARCHAR},#{referee_user_realname,jdbcType=VARCHAR}
			,#{user_business_licence_imgurl,jdbcType=VARCHAR},
			#{shop_website,jdbcType=VARCHAR},#{shop_name,jdbcType=VARCHAR},#{platform,jdbcType=VARCHAR},#{main_category,jdbcType=VARCHAR},#{shop_photo,jdbcType=VARCHAR},#{site_id,jdbcType=INTEGER}
			)
	</insert>
	
	<!--更新临时会员信息 -->
	<update id="updateTempMemberInfo" parameterType="java.util.Map">
		update tbl_user_info
		<set>
			<if test="user_company_address_province != null and user_company_address_province != ''">
				user_company_address_province = #{user_company_address_province,jdbcType=INTEGER},
			</if>
			<if test="user_company_address_city != null and user_company_address_city != ''">
				user_company_address_city = #{user_company_address_city,jdbcType=INTEGER},
			</if>
			<if test="user_company_address_county != null and user_company_address_county != ''">
				user_company_address_county = #{user_company_address_county,jdbcType=INTEGER},
			</if>
			<if test="user_company_address_max != null and user_company_address_max != ''">
				user_company_address_max = #{user_company_address_max,jdbcType=INTEGER},
			</if>
			<if test="site_id != null and site_id != ''">
				site_id = #{site_id,jdbcType=INTEGER}
			</if>
		</set>
		where user_name = #{user_name} 
	</update>
	
	<!-- 根据会员用户名获取会员信息以及会员账号信息 -->
	<select id="queryUserAccountByUserName" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT ui.id USER_ID,
       ui.USER_NAME,
       ui.LOGIN_NAME,
       ui.USER_MANAGE_CARDID,
       ui.USER_MANAGE_NAME,
       bc.BANK_ACCOUNT
       FROM TBL_USER_INFO ui
                 LEFT JOIN TBL_BANK_ACCOUNT bc ON ui.id = bc.user_id and bc.USER_TYPE = 1
                 where ui.user_name = #{user_name,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据会员用户ID获取会员信息以及会员账号信息 -->
	<select id="queryUserAccountById" parameterType="long" resultType="java.util.Map">
	   SELECT ui.id USER_ID,
       ui.USER_NAME,
       ui.LOGIN_NAME,
       ui.USER_MANAGE_CARDID,
       ui.USER_MANAGE_NAME,
       bc.BANK_ACCOUNT
       FROM TBL_USER_INFO ui
                 LEFT JOIN TBL_BANK_ACCOUNT bc ON ui.id = bc.user_id and bc.USER_TYPE = 1
                 where UI.id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- 查询该申请单号下的用户 -->
	<select id="queryUserDicountUserInfo" parameterType="java.util.Map" resultType="java.util.Map">
	   select b.user_name,b.user_manage_name,b.user_manage_mobilephone,min(b.login_name) login_name,
	   to_char(a.begin_time,'yyyy-mm-dd hh24:mi:ss')begin_time,
	   to_char(a.end_time,'yyyy-mm-dd hh24:mi:ss')end_time,
	   (select state from tbl_user_discount c where c.apply_number=a.apply_number)state
	   from tbl_user_discount_product a
	   left join tbl_user_info b on a.user_name=b.user_name
                 where a.apply_number = #{apply_number,jdbcType=VARCHAR}
                 group by b.user_name,b.user_manage_name,b.user_manage_mobilephone,a.begin_time,a.end_time,a.apply_number
	</select>
	
	<!-- 查询该申请单号下的商品信息 -->
	<select id="queryUserDicountProduct" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT pi.product_img_url,
		   dp.product_itemnumber,
		   dp.product_color,
		   dp.product_specs,
		   NVL (getproductspec_saleprice (#{user_name,jdbcType=VARCHAR}, spec.id), 0) AS sell_price,
		   discount,
		   NVL (getproductspec_tsprice (spec.id, discount), 0) AS discount_price,
		   spec.id
		  FROM tbl_user_discount_product dp,
			   tbl_product_info pi,
			   (SELECT id,
					   product_itemnumber,
					   product_group_member,
					   (SELECT product_group_member
						  FROM tbl_product_sku b
						 WHERE b.id = cc.parent_id)
						  product_color
				  FROM tbl_product_sku cc
				 WHERE product_group = '规格') spec
		  WHERE     pi.itemnumber = dp.product_itemnumber
			   AND user_name = #{user_name,jdbcType=VARCHAR}
			   AND apply_number = #{apply_number,jdbcType=VARCHAR}
			   AND spec.product_group_member = dp.product_specs
			   AND spec.product_itemnumber = dp.product_itemnumber
			   AND spec.product_color = dp.product_color
	</select>
	
	<!-- 根据id查询特殊价格 -->
	<select id="queryUserDiscountById" parameterType="long" resultType="string">
	   select apply_number from tbl_user_discount
                 where id = #{id,jdbcType=INTEGER}
	</select>
	
	<!--新增用户特殊价格-->
	<insert id="insertUserDiscount" parameterType="java.util.Map">
		insert into tbl_user_discount
		(
		id,
		apply_number,
		create_user_id,
		create_date
		)
		values
		(
		seq_user_discount.nextval,
		#{apply_number,jdbcType=VARCHAR},
		#{public_user_id,jdbcType=INTEGER},
		SYSDATE
		)
	</insert>
	
	<!--新增用户特殊价格-->
	<insert id="insertUserDiscountProduct" parameterType="java.util.Map">
		insert into tbl_user_discount_product
		(
		id,
		apply_number,
		USER_NAME,
		PRODUCT_ITEMNUMBER,
		PRODUCT_COLOR,
		PRODUCT_SPECS,
		DISCOUNT,
		BEGIN_TIME,
		END_TIME
		)
		values
		(
		seq_user_discount_product.nextval,
		#{apply_number,jdbcType=VARCHAR},
		#{user_name,jdbcType=VARCHAR},
		#{product_itemnumber,jdbcType=VARCHAR},
		#{product_color,jdbcType=VARCHAR},
		#{product_specs,jdbcType=VARCHAR},
		#{discount,jdbcType=INTEGER},
		to_date(#{begin_time,jdbcType=DATE},'YYYY-MM-DD HH24:MI:SS'),
		to_date(#{end_time,jdbcType=DATE},'YYYY-MM-DD HH24:MI:SS')
		)
	</insert>
	
	<!-- 删除特殊价格单 -->
	<delete id="removeUserDiscount" parameterType="string">
		DELETE
		FROM TBL_USER_DISCOUNT 
		WHERE APPLY_NUMBER =  #{apply_number,jdbcType=VARCHAR}
	</delete>
	
	<!-- 删除特殊价格商品表-->
	<delete id="removeUserDiscountProduct" parameterType="string">
		DELETE
		FROM TBL_USER_DISCOUNT_PRODUCT 
		WHERE APPLY_NUMBER =  #{apply_number,jdbcType=VARCHAR}
	</delete>
	
	
	<!-- 删除特殊价格商品表明细-->
	<delete id="removeByApplyNumberAndUserName" parameterType="java.util.Map">
		DELETE
		FROM TBL_USER_DISCOUNT_PRODUCT 
		WHERE APPLY_NUMBER =  #{apply_number,jdbcType=VARCHAR}
		AND   USER_NAME=#{user_name,jdbcType=VARCHAR}
	</delete>
	
	<!-- 删除特殊价格商品表明细-->
	<delete id="removeByCondition" parameterType="java.util.Map">
		DELETE
		FROM TBL_USER_DISCOUNT_PRODUCT 
		WHERE APPLY_NUMBER =  #{apply_number,jdbcType=VARCHAR}
		AND   USER_NAME=#{user_name,jdbcType=VARCHAR}
		AND   PRODUCT_ITEMNUMBER=#{product_itemnumber,jdbcType=VARCHAR}
		AND   PRODUCT_SPECS=#{product_specs,jdbcType=VARCHAR}
		AND   PRODUCT_COLOR=#{product_color,jdbcType=VARCHAR}
	</delete>
	
	<!-- 生成新的申请单号 -->
	<select id="queryApplyNumber" parameterType="java.lang.String"  resultType="java.lang.String">
		SELECT GETAUTONUMBER('TJ') FROM DUAL
	</select>
	
	<!-- 修改特价单状态 -->
    <update id="updateUserDiscountState" parameterType="java.util.Map">
    	UPDATE tbl_user_discount
    	<set>
    		<if test="state =='3'.toString()">
			    audit_user_id=#{public_user_id,jdbcType=INTEGER},
				audit_date=sysdate,
			</if>
			<if test="state !=null and state != ''">
			      state=#{state,jdbcType=VARCHAR},
			</if>
			<if test="remark !=null and remark != ''">
			      remark=#{remark,jdbcType=VARCHAR},
			</if>
    	</set>
		WHERE apply_number = #{apply_number,jdbcType=VARCHAR}
    </update>
	<!-- 获取会员折后价 -->
	<select id="querySpecialDiscountPrice" parameterType="java.util.Map" resultType="java.util.Map">
		<if test="spec_id !=null and spec_id != '' and discount !=null">
			SELECT getProductSpec_TsPrice(#{spec_id,jdbcType=VARCHAR},#{discount,jdbcType=FLOAT}) as discount_price from dual
		</if>
	</select>
	<!-- **********************************销售日报表改造********for wangpeng 2018-02-06 ******begin********************************** -->
	
	<!-- 通用个人收支查询条件（新） -->
    <sql id="public_user_where">
    		1=1 
			 <if test="login_name != null and login_name != '' ">
	 			and a.login_name like concat(concat('%', #{login_name,jdbcType=VARCHAR}),'%')
			 </if>
	 		 <if test="user_manage_name!=null and user_manage_name!=''">
				and a.user_manage_name like concat(concat('%', #{user_manage_name,jdbcType=VARCHAR}),'%')
			 </if>
			 <if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
				and a.user_manage_mobilephone like concat(concat('%', #{user_manage_mobilephone, jdbcType=VARCHAR}),'%')
			 </if>
			 <if test="user_company_type != null and user_company_type != 0 ">
			    and	a.user_company_type = #{user_company_type,jdbcType=INTEGER}
			</if>
			<if test="user_state != null and user_state != '' and user_state != 0 ">
			    and	a.user_state = #{user_state,jdbcType=INTEGER}
			</if>
			 <if test="ywjl_user_id != null and ywjl_user_id != '' ">
		    	and	a.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
			</if>
			<if test="md_id != null and md_id != 0 ">
			    and	a.store_id = #{md_id,jdbcType=INTEGER}
			</if>
			<if test="ywy_user_id != null and ywy_user_id != '' ">
			    and	a.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
			</if>
			 <if test="public_user_type != null and public_user_type == 2">
	            and EXISTS (SELECT 1 FROM TBL_SYS_USER_STORE TSUS WHERE TSUS.STORE_ID = a.STORE_ID AND TSUS.USER_ID = #{public_user_id,jdbcType=INTEGER})
	        </if>
	        <if test="public_user_type != null and public_user_type == 3">
	            and a.referee_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 4">
	            and a.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
	        </if>
	        <if test="public_user_type != null and public_user_type == 5">
	            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = a.STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
	        </if>
	        <if test="public_user_type != null and public_user_type == 6">
	            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = a.STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
	        </if>
	        <if test="public_user_type != null and public_user_type == 9">
	            and EXISTS(
	            	SELECT 1 FROM TBL_SYS_USER_INFO TSUI WHERE TSUI.USER_TYPE = 4 AND TSUI.ORGANIZATION_ID IN (
					  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
					  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
	              	)
	          		AND TSUI.id = a.market_supervision_user_id
	          	)
	        </if>
	        <if test="province != null and province!=''">
				and a.user_company_address_province =#{province,jdbcType=INTEGER} 
			</if>
			<if test="city != null and city!='' and city !=-1">
				and a.user_company_address_city =#{city,jdbcType=INTEGER} 
			</if>
			<if test="area != null and area!='' and area !=-1">
				and a.user_company_address_county =#{area,jdbcType=INTEGER} 
			</if>
    </sql>
	
	<!-- ****************************************第一部分*****根据条件获取结果集总数*********begin********************************** -->
	
	<!-- 查询用户销售日报表数量-默认-->
	<select id="queryUserDailyReportCountBy_Default" parameterType="java.util.Map" resultType="int">
		select count(1) from tbl_user_info a where 1=1 and <include refid="public_user_where"/>
	</select>
	
	<!-- 查询用户销售日报表数量-全部销售订单（新）-->
	<select id="queryUserDailyReportCountBy_SaleOrder" parameterType="java.util.Map" resultType="int">
		select count(*) from tbl_user_info a
		where
		exists (
		    select 1 from (
		        select b.user_name,nvl(sum(PAYMENT_MONEY),0) allPayMoney,0 preOrderFirstMoney from tbl_order_info b where b.payment_state = 2 
		        --时间过滤
		        and b.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		        and b.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		        group by b.user_name
		        union all
		        --尾款订单的定金金额     
		        select b.user_name,0 allPayMoney,nvl(sum(a.PRODUCT_TOTAL_MONEY*(g.EARNEST_MONEY/g.PRODUCT_MONEY)),0) preOrderFirstMoney from TBL_ORDER_PRODUCT a ,TBL_ORDER_INFO b,TBL_PRE_ORDER_RELATE f,TBL_PRE_ORDER_INFO g
		        where a.order_number = f.order_number and f.PRE_ORDER_NUMBER = g.ORDER_NUMBER
		        and a.order_number = b.order_number and b.PAYMENT_STATE = 2
		        --判断时间筛选
		        and b.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		        and b.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		        group by b.user_name
		    ) 
		    where user_name = a.user_name
		    group by USER_NAME
		    <trim prefix="having" prefixOverrides="and">
			    <if test="order_money_min!=null and order_money_min!='' ">
	 				and sum(allPayMoney-preOrderFirstMoney) >= #{order_money_min,jdbcType=DOUBLE}
			  	</if>
			  	<if test="order_money_max!=null and order_money_max!='' ">
	 				and sum(allPayMoney-preOrderFirstMoney) &lt;= #{order_money_max,jdbcType=DOUBLE}
			  	</if>
		  	</trim>
		)
		and <include refid="public_user_where"/>
	</select>
	
	<!-- 查询用户销售日报表数量-待付款 （新）-->
	<select id="queryUserDailyReportCountBy_NoPay" parameterType="java.util.Map" resultType="int">
		select count(*) from tbl_user_info a
		where
		exists (
		    select 1 from tbl_order_info b where b.order_state = 1 and a.user_name = b.user_name
		    --时间过滤
		    and b.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		    and b.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		    group by b.user_name
		    --金额过滤
		    <trim prefix="having" prefixOverrides="and">
			    <if test="order_money_min!=null and order_money_min!='' ">
	 				and sum(PRODUCT_MONEY+LOGISTICS_MONEY+DF_MONEY) >= #{order_money_min,jdbcType=DOUBLE}
			  	</if>
			  	<if test="order_money_max!=null and order_money_max!='' ">
	 				and sum(PRODUCT_MONEY+LOGISTICS_MONEY+DF_MONEY) &lt;= #{order_money_max,jdbcType=DOUBLE}
			  	</if>
		  	</trim>
		)
		and <include refid="public_user_where"/>
	</select>
	
	<!-- 查询用户销售日报表数量-未发货（新）-->
	<select id="queryUserDailyReportCountBy_NoSend" parameterType="java.util.Map" resultType="int">
		select count(*) from tbl_user_info a,
		(
		    select b.user_name,sum((c.COUNT-nvl(D.OUT_COUNT,0)-nvl(E.count,0))*c.PRODUCT_UNIT_PRICE) money from tbl_order_info b,TBL_ORDER_PRODUCT_SKU c ,
		    (
		        select ORDER_NUMBER_PLATFORM,product_sku ,sum(out_count) out_count from ${jdbc_user}.TBL_INVOICE_PRODUCT  t1
		        where EXISTS
		              (SELECT 1 FROM TBL_ORDER_INFO T2
		                WHERE     T2.ORDER_NUMBER =T1.ORDER_NUMBER_PLATFORM
		                      AND t2.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		                      AND t2.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		                      AND T2.PAYMENT_STATE = 2
		              )
		        group by ORDER_NUMBER_PLATFORM,product_sku
		    ) d,
		    (
		        select f.ORDER_NUMBER,f.PRODUCT_SKU,sum(f.count) count from TBL_ORDER_RETURN_INFO T1,TBL_ORDER_RETURN_PRODUCT f where T1.RETURN_NUMBER = f.RETURN_NUMBER and T1.STATE = 2
		        and EXISTS
		            (SELECT 1 FROM TBL_ORDER_INFO T2
		                WHERE     T2.ORDER_NUMBER = T1.ORDER_NUMBER
		              AND t2.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		              AND t2.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		              AND T2.PAYMENT_STATE = 2
		            )
		        group by f.ORDER_NUMBER,f.product_sku
		    ) e
		    where b.payment_state = 2
		    and b.order_number = c.order_number
		    and c.order_number = d.ORDER_NUMBER_PLATFORM(+) and c.product_sku = d.PRODUCT_SKU(+)
		    and c.ORDER_NUMBER = e.ORDER_NUMBER(+) and c.product_sku = e.PRODUCT_SKU(+)
		    --时间过滤
		    and b.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		    and b.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		   
		    group by b.user_name  
		) mo
		--金额过滤
		<where>
			a.user_name = mo.user_name
		    <if test="order_money_min!=null and order_money_min!='' ">
 				and money >=#{order_money_min,jdbcType=DOUBLE} 
		  	</if>
		  	<if test="order_money_max!=null and order_money_max!='' ">
 				and money &lt;=#{order_money_max,jdbcType=DOUBLE}
		  	</if>
			and <include refid="public_user_where"/>
	  	</where>
	</select>
	
	<!-- 查询用户销售日报表数量-发货订单 （新）-->
	<select id="queryUserDailyReportCountBy_Send" parameterType="java.util.Map" resultType="int">
		select count(*) from tbl_user_info a,
		(
		        select c.USER_NAME,sum(b.out_count*PRODUCT_UNIT_PRICE) money 
		        from ${jdbc_user}.TBL_INVOICE_PRODUCT  b,TBL_ORDER_PRODUCT_SKU c
		        where
		                      
		                      exists (
		                            select 1 from ${jdbc_user}.TBL_INVOICE_info a where a.DELIVER_STATE = 2 and  A.INVOICE_NUMBER = b.INVOICE_NUMBER
		                            AND a.DELIVER_DATE >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		                            AND a.DELIVER_DATE &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		                      )
		                      and b.product_sku = c.product_sku
		                      and b.ORDER_NUMBER_PLATFORM = c.order_number
		
		        group by c.USER_NAME
		) mo
		<where>
			a.user_name = mo.USER_NAME
		    <if test="order_money_min!=null and order_money_min!='' ">
 				and money >=#{order_money_min,jdbcType=DOUBLE}
		  	</if>
		  	<if test="order_money_max!=null and order_money_max!='' ">
 				and money &lt;=#{order_money_max,jdbcType=DOUBLE}
		  	</if>
			and <include refid="public_user_where"/>
	  	</where>
	</select>
	
	<!-- ****************************************第一部分*****根据条件获取结果集总数*********end********************************** -->
	
	<!-- ****************************************第二部分*****根据排序及分页获取用户ID列表*********begin*************************** -->
	
	<!-- 排序获取用户某一页的用户列表-无排序字段 （新） -->
	<select id="queryUserDailyReportListBy_Default" parameterType="java.util.Map" resultType="string">
		select a.user_name, rownum rn from (
		  	select * from (
				select a.user_name from tbl_user_info a
				<where>
					<include refid="public_user_where"/>
				</where>
				order by id 
			) a where rownum &lt;= #{end_rownum}
		)where rn &gt; #{start_rownum}
	</select>
	
	<!-- 排序获取用户某一页的用户列表-用户基础资料排序 （新） -->
	<select id="queryUserDailyReportListBy_User" parameterType="java.util.Map" resultType="string">
		select user_name from (
		  	select a.*, rownum rn from (
		  		select * from (
					select a.id,a.user_name,
						(select store_name from tbl_store_info t where t.id=a.store_id ) store_name,
				 		(select user_realname from tbl_sys_user_info t where t.id=a.referee_user_id) referee_user_realname,
				 		(select user_realname from tbl_sys_user_info t where t.id=a.market_supervision_user_id) market_supervision_user_realna,
				 		 login_name,
						 user_manage_name,
						 user_manage_mobilephone,
						 user_state
				  		from tbl_user_info a
					<where>
						<include refid="public_user_where"/>
					</where>
				) 
				order by ${sort} ${sort_by},id
			) a where rownum &lt;= #{end_rownum}
		)where rn &gt; #{start_rownum}
	</select>
	
	<!-- 排序获取用户某一页的用户列表-日志排序 （新） -->
	<select id="queryUserDailyReportListBy_Log" parameterType="java.util.Map" resultType="string">
		select user_name from (
		  	select a.*,rownum rn from (
				select aa.* from (
                    select a.user_name,count(1) LOGIN_NUM,count(1) PAGE_VIEW from tbl_user_info a,tbl_user_log_info b 
                    <where>
                    	a.user_name = b.CREATE_USER_NAME(+)
                    	<if test="sort=='nvl(LOGIN_NUM,0)'">
                    		and b.page_type = '登录'
                    	</if>
                    	<if test="sort=='nvl(PAGE_VIEW,0)'">
                    		and b.page_type != '登录'
                    	</if>
                    	and b.create_date >= to_date(#{start_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
		    			and b.create_date &lt;= to_date(#{end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
						and <include refid="public_user_where"/>
					</where>
                    group by user_name
                ) aa
				order by ${sort} ${sort_by},user_name
			) a where rownum &lt;= #{end_rownum}
		)where rn &gt; #{start_rownum}
	</select>
	
	<!-- 排序获取用户某一页的用户列表-全部销售订单 （新） -->
	<select id="queryUserDailyReportListBy_Allorder" parameterType="java.util.Map" resultType="string">
		select user_name from (
		  	select a.*,rownum rn from (
                   select a.user_name from tbl_user_info a,
                   (
	                   	select USER_NAME,sum(allPayMoney-preOrderFirstMoney) ALL_ORDER_PRODUCT_MONEY,sum(ALL_ORDER_COUNT) ALL_ORDER_COUNT,sum(ALL_ORDER_PRODUCT_COUNT) ALL_ORDER_PRODUCT_COUNT from (
					        select b.user_name,nvl(sum(PAYMENT_MONEY),0) allPayMoney,0 preOrderFirstMoney,count(*) ALL_ORDER_COUNT,sum(PRODUCT_COUNT) ALL_ORDER_PRODUCT_COUNT from tbl_order_info b where b.payment_state = 2 
					        --时间过滤
					        and b.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
					        and b.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
					        group by b.user_name
					        union all
					        --尾款订单的定金金额     
					        select b.user_name,0 allPayMoney,nvl(sum(a.PRODUCT_TOTAL_MONEY*(g.EARNEST_MONEY/g.PRODUCT_MONEY)),0) preOrderFirstMoney,0 ALL_ORDER_COUNT,0 ALL_ORDER_PRODUCT_COUNT from TBL_ORDER_PRODUCT a ,TBL_ORDER_INFO b,TBL_PRE_ORDER_RELATE f,TBL_PRE_ORDER_INFO g
					        where a.order_number = f.order_number and f.PRE_ORDER_NUMBER = g.ORDER_NUMBER
					        and a.order_number = b.order_number and b.PAYMENT_STATE = 2
					        --判断时间筛选
					        and b.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
					        and b.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
					        group by b.user_name
					    ) 
					    group by USER_NAME
					    <trim prefix="having" prefixOverrides="and">
						    <if test="order_money_min!=null and order_money_min!='' ">
				 				and sum(allPayMoney-preOrderFirstMoney) >= #{order_money_min,jdbcType=DOUBLE}
						  	</if>
						  	<if test="order_money_max!=null and order_money_max!='' ">
				 				and sum(allPayMoney-preOrderFirstMoney) &lt;= #{order_money_max,jdbcType=DOUBLE}
						  	</if>
					  	</trim>
				) b where a.user_name =b.user_name(+)
				and <include refid="public_user_where"/>
				order by ${sort} ${sort_by},user_name
			) a where rownum &lt;= #{end_rownum}
		)where rn &gt; #{start_rownum}
	</select>
	
	<!-- 排序获取用户某一页的用户列表-待付款订单 （新） -->
	<select id="queryUserDailyReportListBy_Obliorder" parameterType="java.util.Map" resultType="string">
		select user_name from (
		  	select a.*,rownum rn from (
                   select a.user_name from tbl_user_info a,
                   (
					    select user_name,count(*) OBLI_ORDER_COUNT,sum(PRODUCT_MONEY+DF_MONEY+LOGISTICS_MONEY) OBLI_ORDER_PRODUCT_MONEY,sum(PRODUCT_COUNT) OBLI_ORDER_PRODUCT_COUNT from tbl_order_info b where b.order_state = 1 
					    and b.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
					    and b.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
					    group by b.user_name
					    --金额过滤
					    <trim prefix="having" prefixOverrides="and">
						    <if test="order_money_min!=null and order_money_min!='' ">
				 				and sum(PRODUCT_MONEY+LOGISTICS_MONEY+DF_MONEY) >= #{order_money_min,jdbcType=DOUBLE}
						  	</if>
						  	<if test="order_money_max!=null and order_money_max!='' ">
				 				and sum(PRODUCT_MONEY+LOGISTICS_MONEY+DF_MONEY) &lt;= #{order_money_max,jdbcType=DOUBLE}
						  	</if>
					  	</trim>
				) b where a.user_name =b.user_name(+)
				and <include refid="public_user_where"/>
				order by ${sort} ${sort_by},user_name
			) a where rownum &lt;= #{end_rownum}
		)where rn &gt; #{start_rownum}
	</select>
	
	<!-- 排序获取用户某一页的用户列表-未发订单 （新） -->
	<select id="queryUserDailyReportListBy_Unshiporder" parameterType="java.util.Map" resultType="string">
		select user_name from (
		  	select a.*,rownum rn from (
                select a.user_name from tbl_user_info a,
                (
				    select b.user_name,sum((c.COUNT-nvl(D.OUT_COUNT,0)-nvl(E.count,0))*c.PRODUCT_UNIT_PRICE) UNSHIP_ORDER_PRODUCT_MONEY,sum(c.COUNT-nvl(D.OUT_COUNT,0)-nvl(E.count,0)) UNSHIP_ORDER_PRODUCT_COUNT from tbl_order_info b,TBL_ORDER_PRODUCT_SKU c ,
				    (
				        select ORDER_NUMBER_PLATFORM,product_sku ,sum(out_count) out_count from ${jdbc_user}.TBL_INVOICE_PRODUCT  t1
				        where EXISTS
				              (SELECT 1 FROM TBL_ORDER_INFO T2
				                WHERE     T2.ORDER_NUMBER =T1.ORDER_NUMBER_PLATFORM
				                      AND t2.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
				                      AND t2.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
				                      AND T2.PAYMENT_STATE = 2
				              )
				        group by ORDER_NUMBER_PLATFORM,product_sku
				    ) d,
				    (
				        select f.ORDER_NUMBER,f.PRODUCT_SKU,nvl(sum(f.count),0) count from TBL_ORDER_RETURN_INFO T1,TBL_ORDER_RETURN_PRODUCT f where T1.RETURN_NUMBER = f.RETURN_NUMBER and T1.STATE = 2
				        and EXISTS
				            (SELECT 1 FROM TBL_ORDER_INFO T2
				                WHERE     T2.ORDER_NUMBER = T1.ORDER_NUMBER
				              AND t2.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
				              AND t2.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
				              AND T2.PAYMENT_STATE = 2
				            )
				        group by f.ORDER_NUMBER,f.product_sku
				    ) e
				    where b.payment_state = 2
				    and b.order_number = c.order_number
				    and c.order_number = d.ORDER_NUMBER_PLATFORM(+) and c.product_sku = d.PRODUCT_SKU(+)
				    and c.ORDER_NUMBER = e.ORDER_NUMBER(+) and c.product_sku = e.PRODUCT_SKU(+)
				    --时间过滤
				    and b.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
				    and b.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
				   
				    group by b.user_name  
				) b 
				<where>
					a.user_name =b.user_name(+)
				    <if test="order_money_min!=null and order_money_min!='' ">
		 				and nvl(UNSHIP_ORDER_PRODUCT_MONEY,0) >=#{order_money_min,jdbcType=DOUBLE} 
				  	</if>
				  	<if test="order_money_max!=null and order_money_max!='' ">
		 				and nvl(UNSHIP_ORDER_PRODUCT_MONEY,0) &lt;=#{order_money_max,jdbcType=DOUBLE}
				  	</if>
					and <include refid="public_user_where"/>
			  	</where>	
				order by ${sort} ${sort_by},user_name
			) a where rownum &lt;= #{end_rownum}
		)where rn &gt; #{start_rownum}
	</select>
	
	<!-- 排序获取用户某一页的用户列表-发货订单 （新） -->
	<select id="queryUserDailyReportListBy_Shiporder" parameterType="java.util.Map" resultType="string">
		select user_name from (
		  	select a.*,rownum rn from (
                select a.user_name from tbl_user_info a,
                (
			        select c.USER_NAME,sum(b.out_count*PRODUCT_UNIT_PRICE) SHIP_ORDER_PRODUCT_MONEY,sum(b.out_count) SHIP_ORDER_PRODUCT_COUNT 
			        from (
			        	select b.* from ${jdbc_user}.TBL_INVOICE_info a,${jdbc_user}.TBL_INVOICE_PRODUCT b where 
           					a.DELIVER_STATE = 2 and  A.INVOICE_NUMBER = b.INVOICE_NUMBER
           					AND a.DELIVER_DATE >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
	                        AND a.DELIVER_DATE &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
			        )  b,TBL_ORDER_PRODUCT_SKU c
			        where
                    b.product_sku = c.product_sku
                    and b.ORDER_NUMBER_PLATFORM = c.order_number
			        group by c.USER_NAME
				) b 
				<where>
					a.user_name =b.user_name(+)
				    <if test="order_money_min!=null and order_money_min!='' ">
		 				and SHIP_ORDER_PRODUCT_MONEY >=#{order_money_min,jdbcType=DOUBLE} 
				  	</if>
				  	<if test="order_money_max!=null and order_money_max!='' ">
		 				and SHIP_ORDER_PRODUCT_MONEY &lt;=#{order_money_max,jdbcType=DOUBLE}
				  	</if>
					and <include refid="public_user_where"/>
			  	</where>	
				order by ${sort} ${sort_by},user_name
			) a where rownum &lt;= #{end_rownum}
		)where rn &gt; #{start_rownum}
	</select>
	
	<!-- 排序获取用户某一页的用户列表-退款订单 （新） -->
	<select id="queryUserDailyReportListBy_Refund" parameterType="java.util.Map" resultType="string">
		select user_name from (
		  	select a.*,rownum rn from (
                select a.user_name from tbl_user_info a,
                (
			        select user_name,nvl(sum(RETURN_TOTAL_MONEY),0) REFUND_ORDER_PRODUCT_MONEY,nvl(sum(PRODUCT_COUNT),0) REFUND_ORDER_PRODUCT_COUNT,count(*) REFUND_ORDER_COUNT from TBL_ORDER_RETURN_INFO
					where state = 2
					--判断时间筛选
					and CHECK_DATE >= to_date(#{start_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
					and CHECK_DATE &lt;= to_date(#{end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
					group by user_name
				) b 
				<where>
					a.user_name =b.user_name(+)
					and <include refid="public_user_where"/>
			  	</where>	
				order by ${sort} ${sort_by},user_name
			) a where rownum &lt;= #{end_rownum}
		)where rn &gt; #{start_rownum}
	</select>
	
	<!-- 排序获取用户某一页的用户列表-退货订单 （新） -->
	<select id="queryUserDailyReportListBy_Returns" parameterType="java.util.Map" resultType="string">
		select user_name from (
		  	select a.*,rownum rn from (
                select a.user_name from tbl_user_info a,
                (
			        select user_name,nvl(sum(RETURN_MONEY),0) RETURNS_ORDER_PRODUCT_MONEY ,nvl(sum(RETURN_NUM),0) RETURNS_ORDER_PRODUCT_COUNT,count(*) RETURNS_ORDER_COUNT
				        from ${jdbc_user}.tbl_new_return_confirm a,${jdbc_user}.tbl_new_return_order b,tbl_product_sku c
						where a.product_sku = c.ID and a.RETURN_NUMBER = b.RETURN_NUMBER and b.state = '8' and a.RETURN_FLAG = 1
						--判断时间筛选
						and b.refund_date >= to_date(#{start_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
						and b.refund_date &lt;= to_date(#{end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
						group by b.user_name
				) b 
				<where>
					a.user_name =b.user_name(+)
					and <include refid="public_user_where"/>
			  	</where>	
				order by ${sort} ${sort_by},user_name
			) a where rownum &lt;= #{end_rownum}
		)where rn &gt; #{start_rownum}
	</select>
	
	<!-- 排序获取用户某一页的用户列表-实际销售 （新） -->
	<select id="queryUserDailyReportListBy_Actual" parameterType="java.util.Map" resultType="string">
		select user_name from (
		  	select a.*,rownum rn from (
                select a.user_name from tbl_user_info a,
                (
                	select aa.user_name,nvl(aa.money,0)-nvl(bb.RETURNS_ORDER_PRODUCT_MONEY,0) ACTUAL_SALE_PRODUCT_MONEY,nvl(aa.out_count,0)-nvl(bb.RETURN_NUM,0) ACTUAL_SALE_PRODUCT_COUNT from 
                	(
	                	select c.USER_NAME,sum(out_count) out_count,sum(b.out_count*PRODUCT_UNIT_PRICE) money 
				        from (
				        	select b.* from ${jdbc_user}.TBL_INVOICE_info a,${jdbc_user}.TBL_INVOICE_PRODUCT b where 
           					a.DELIVER_STATE = 2 and  A.INVOICE_NUMBER = b.INVOICE_NUMBER
           					AND a.DELIVER_DATE >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
	                        AND a.DELIVER_DATE &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
				        ) b,TBL_ORDER_PRODUCT_SKU c
				        where
	                    b.product_sku = c.product_sku
	                    and b.ORDER_NUMBER_PLATFORM = c.order_number
				        group by c.USER_NAME
				        <trim prefix="having" prefixOverrides="and">
						    <if test="order_money_min!=null and order_money_min!='' ">
				 				and sum(b.out_count*PRODUCT_UNIT_PRICE) >= #{order_money_min,jdbcType=DOUBLE}
						  	</if>
						  	<if test="order_money_max!=null and order_money_max!='' ">
				 				and sum(b.out_count*PRODUCT_UNIT_PRICE) &lt;= #{order_money_max,jdbcType=DOUBLE}
						  	</if>
					  	</trim>
				  	) aa,
                	(
				        select user_name,nvl(sum(RETURN_MONEY),0) RETURNS_ORDER_PRODUCT_MONEY ,nvl(sum(RETURN_NUM),0) RETURN_NUM
				        from ${jdbc_user}.tbl_new_return_confirm a,${jdbc_user}.tbl_new_return_order b,tbl_product_sku c
						where a.product_sku = c.ID and a.RETURN_NUMBER = b.RETURN_NUMBER and b.state = '8' and a.RETURN_FLAG = 1
						--判断时间筛选
						and b.refund_date >= to_date(#{start_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
						and b.refund_date &lt;= to_date(#{end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
						group by b.user_name
					) bb
					where aa.user_name = bb.user_name(+)
					
				) b 
				<where>
					a.user_name =b.user_name(+)
					and <include refid="public_user_where"/>
			  	</where>	
				order by ${sort} ${sort_by},user_name
			) a where rownum &lt;= #{end_rownum}
		) where rn &gt; #{start_rownum}
	</select>
	<!-- ****************************************第二部分*****根据排序及分页获取用户ID列表*********end*************************** -->
	
	
	<!-- ****************************************第三部分*****获取具体数据*********begin************************************ -->
	<!-- 通用拼装用户ID -->
	<sql id="public_usersid">
		<foreach collection="userList" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=VARCHAR}
        </foreach>
	</sql>
	
	<!-- 数据获取-用户基本信息（新） -->
	<select id="queryUserDailyReportList_User" parameterType="java.util.Map" resultType="java.util.Map">	
		select 
			user_name,
			(select store_name from tbl_store_info t where t.id=a.store_id ) store_name,
			 (select user_realname from tbl_sys_user_info t where t.id=a.referee_user_id) referee_user_realname,
			 (select user_realname from tbl_sys_user_info t where t.id=a.market_supervision_user_id) market_supervision_user_realna,
			 login_name,
			 user_manage_name,
			 user_manage_mobilephone,
			 user_state
			from tbl_user_info a
		<where>
			 user_name in <include refid="public_usersid"/>
		</where>
		order by 
		instr(
			<foreach collection="userList" item="item" open="'" close="'," separator=",">
	            ${item}
	        </foreach>
	        user_name
      	) 
	</select>	
	
	<!-- 数据获取-日志 -登录数（新） -->
	<select id="queryUserDailyReportList_Log_Login" parameterType="java.util.Map" resultType="java.util.Map">
           select create_user_name user_name,count(1) LOGIN_NUM from tbl_user_log_info b 
           <where>
	           	b.page_type = '登录'
	           	and b.create_date >= to_date(#{start_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
				and b.create_date &lt;= to_date(#{end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
				and create_user_name in <include refid="public_usersid"/>
			</where>
           group by create_user_name
	</select>
	
	<!-- 数据获取-日志 -访问数（新） -->
	<select id="queryUserDailyReportList_Log_Page" parameterType="java.util.Map" resultType="java.util.Map">
           select create_user_name user_name,count(1) PAGE_VIEW from tbl_user_log_info b 
           <where>
	           	b.page_type != '登录'
	           	and b.create_date >= to_date(#{start_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
				and b.create_date &lt;= to_date(#{end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
				and create_user_name in <include refid="public_usersid"/>
			</where>
           group by create_user_name
	</select>
	
	<!-- 数据获取-全部销售订单 （新） -->
	<select id="queryUserDailyReportList_Allorder" parameterType="java.util.Map" resultType="java.util.Map">
         select user_name,sum(allPayMoney-preOrderFirstMoney) ALL_ORDER_PRODUCT_MONEY,sum(ALL_ORDER_COUNT) ALL_ORDER_COUNT,sum(ALL_ORDER_PRODUCT_COUNT) ALL_ORDER_PRODUCT_COUNT from (
		       select b.user_name,nvl(sum(PAYMENT_MONEY),0) allPayMoney,0 preOrderFirstMoney,count(*) ALL_ORDER_COUNT,sum(PRODUCT_COUNT) ALL_ORDER_PRODUCT_COUNT from tbl_order_info b where b.payment_state = 2 
		       --时间过滤
		       and b.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		       and b.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		       and b.user_name in <include refid="public_usersid"/>
		       group by b.user_name
		       union all
		       --尾款订单的定金金额     
		       select b.user_name,0 allPayMoney,nvl(sum(a.PRODUCT_TOTAL_MONEY*(g.EARNEST_MONEY/g.PRODUCT_MONEY)),0) preOrderFirstMoney,0 ALL_ORDER_COUNT,0 ALL_ORDER_PRODUCT_COUNT from TBL_ORDER_PRODUCT a ,TBL_ORDER_INFO b,TBL_PRE_ORDER_RELATE f,TBL_PRE_ORDER_INFO g
		       where a.order_number = f.order_number and f.PRE_ORDER_NUMBER = g.ORDER_NUMBER
		       and a.order_number = b.order_number and b.PAYMENT_STATE = 2
		       --判断时间筛选
		       and b.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		       and b.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		       and b.user_name in <include refid="public_usersid"/>
		       group by b.user_name
		) b
		group by USER_NAME
	</select>
	
	
	<!-- 数据获取-预定订单 （新） -->
	<select id="queryUserDailyReportList_Preorder" parameterType="java.util.Map" resultType="java.util.Map">
        select to_char(b.USER_ID) user_name,nvl(sum(a.PRODUCT_MONEY*(b.EARNEST_MONEY/b.PRODUCT_MONEY)),0) PRE_ORDER_PRODUCT_MONEY from TBL_PRE_ORDER_DETAIL a ,TBL_PRE_ORDER_INFO b
        where a.order_number = b.order_number and b.PAYMENT_STATE = 2 and b.ORDER_STATE in (2,3,4,5)
        --判断时间筛选
        and b.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
        and b.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
        and b.USER_ID in <include refid="public_usersid"/>
        group by b.USER_ID
	</select>
	
	<!-- 数据获取-待付款订单 （新） -->
	<select id="queryUserDailyReportList_Obliorder" parameterType="java.util.Map" resultType="java.util.Map">
		    select user_name,count(*) OBLI_ORDER_COUNT,sum(PRODUCT_MONEY+DF_MONEY+LOGISTICS_MONEY) OBLI_ORDER_PRODUCT_MONEY,sum(PRODUCT_COUNT) OBLI_ORDER_PRODUCT_COUNT from tbl_order_info b where b.order_state = 1 
		    and b.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		    and b.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		    and b.user_name in <include refid="public_usersid"/>
		    group by b.user_name
	</select>
	
	<!-- 数据获取-未发订单 （新） -->
	<select id="queryUserDailyReportList_Unshiporder" parameterType="java.util.Map" resultType="java.util.Map">
		select user_name,sum(UNSHIP_ORDER_PRODUCT_MONEY) UNSHIP_ORDER_PRODUCT_MONEY,sum(UNSHIP_ORDER_PRODUCT_COUNT) UNSHIP_ORDER_PRODUCT_COUNT,count(*) UNSHIP_ORDER_COUNT from (
		    select b.user_name,sum((c.COUNT-nvl(D.OUT_COUNT,0)-nvl(E.count,0))*c.PRODUCT_UNIT_PRICE) UNSHIP_ORDER_PRODUCT_MONEY,sum(c.COUNT-nvl(D.OUT_COUNT,0)-nvl(E.count,0)) UNSHIP_ORDER_PRODUCT_COUNT from tbl_order_info b,TBL_ORDER_PRODUCT_SKU c ,
		    (
		        select ORDER_NUMBER_PLATFORM,product_sku ,sum(out_count) out_count from ${jdbc_user}.TBL_INVOICE_PRODUCT  t1
		        where EXISTS
		              (SELECT 1 FROM TBL_ORDER_INFO T2
		                WHERE     T2.ORDER_NUMBER =T1.ORDER_NUMBER_PLATFORM
		                      AND t2.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		                      AND t2.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		                      AND T2.PAYMENT_STATE = 2
		              )
		        group by ORDER_NUMBER_PLATFORM,product_sku
		    ) d,
		    (
		        select f.ORDER_NUMBER,f.PRODUCT_SKU,sum(f.count) count from TBL_ORDER_RETURN_INFO T1,TBL_ORDER_RETURN_PRODUCT f where T1.RETURN_NUMBER = f.RETURN_NUMBER and T1.STATE = 2
		        and EXISTS
		            (SELECT 1 FROM TBL_ORDER_INFO T2
		                WHERE     T2.ORDER_NUMBER = T1.ORDER_NUMBER
		              AND t2.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		              AND t2.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		              AND T2.PAYMENT_STATE = 2
		            )
		        group by f.ORDER_NUMBER,f.product_sku
		    ) e
		    where b.payment_state = 2
		    and b.order_number = c.order_number
		    and c.order_number = d.ORDER_NUMBER_PLATFORM(+) and c.product_sku = d.PRODUCT_SKU(+)
		    and c.ORDER_NUMBER = e.ORDER_NUMBER(+) and c.product_sku = e.PRODUCT_SKU(+)
		    --时间过滤
		    and b.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		    and b.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		    and b.user_name in <include refid="public_usersid"/>
		    group by b.user_name,c.order_number 
		    having sum(c.COUNT-nvl(D.OUT_COUNT,0)-nvl(E.count,0))>0
		) group by user_name
	</select>
	
	<!-- 数据获取-发货订单 （新） -->
	<select id="queryUserDailyReportList_Shiporder" parameterType="java.util.Map" resultType="java.util.Map">
		   select user_name,sum(SHIP_ORDER_PRODUCT_MONEY) SHIP_ORDER_PRODUCT_MONEY,sum(SHIP_ORDER_PRODUCT_COUNT) SHIP_ORDER_PRODUCT_COUNT ,count(*) SHIP_ORDER_COUNT from (
		       select c.user_name,sum(b.out_count*PRODUCT_UNIT_PRICE) SHIP_ORDER_PRODUCT_MONEY,sum(b.out_count) SHIP_ORDER_PRODUCT_COUNT 
		       from 
			   (
			   		 select b.* from ${jdbc_user}.TBL_INVOICE_info a,${jdbc_user}.TBL_INVOICE_PRODUCT b where 
		           	 a.DELIVER_STATE = 2 and  A.INVOICE_NUMBER = b.INVOICE_NUMBER
		             AND a.DELIVER_DATE >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		             AND a.DELIVER_DATE &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		           	 and a.USER_ID in <include refid="public_usersid"/>
			   ) b,TBL_ORDER_PRODUCT_SKU c
		       where
		       b.product_sku = c.product_sku
		       and b.ORDER_NUMBER_PLATFORM = c.order_number
		       group by c.USER_NAME,b.ORDER_NUMBER_PLATFORM
		       having sum(b.out_count)>0
	       ) group by user_name
	</select>
	
	<!-- 数据获取-退款订单 （新） -->
	<select id="queryUserDailyReportList_Refund" parameterType="java.util.Map" resultType="java.util.Map">
	        select user_name,nvl(sum(RETURN_TOTAL_MONEY),0) REFUND_ORDER_PRODUCT_MONEY,nvl(sum(PRODUCT_COUNT),0) REFUND_ORDER_PRODUCT_COUNT,count(*) REFUND_ORDER_COUNT from TBL_ORDER_RETURN_INFO
			where state = 2
			--判断时间筛选
			and CHECK_DATE >= to_date(#{start_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
			and CHECK_DATE &lt;= to_date(#{end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
			and user_name in <include refid="public_usersid"/>
			group by user_name
	</select>
	
	<!-- 数据获取-退货订单 （新） -->
	<select id="queryUserDailyReportList_Returns" parameterType="java.util.Map" resultType="java.util.Map">
		select user_name,nvl(sum(RETURNS_ORDER_PRODUCT_MONEY),0) RETURNS_ORDER_PRODUCT_MONEY ,nvl(sum(RETURNS_ORDER_PRODUCT_COUNT),0) RETURNS_ORDER_PRODUCT_COUNT,count(1) RETURNS_ORDER_COUNT from (
	       	select user_name,nvl(sum(RETURN_MONEY),0) RETURNS_ORDER_PRODUCT_MONEY ,nvl(sum(RETURN_NUM),0) RETURNS_ORDER_PRODUCT_COUNT
	        from ${jdbc_user}.tbl_new_return_confirm a,${jdbc_user}.tbl_new_return_order b,tbl_product_sku c
			where a.product_sku = c.ID and a.RETURN_NUMBER = b.RETURN_NUMBER and b.state = '8' and a.RETURN_FLAG = 1
			--判断时间筛选
			and b.refund_date >= to_date(#{start_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
			and b.refund_date &lt;= to_date(#{end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
			and b.user_name in <include refid="public_usersid"/>
			group by b.user_name,b.RETURN_NUMBER
        )group by user_name
	</select>
	<!-- ****************************************第三部分*****获取具体数据*********end************************************ -->
	
	<!-- ****************************************第四部分*****获取全局统计数据*********begin************************************ -->
	
	<!-- 获取数据全局统计数据-日志 -登录数（新） -->
	<select id="queryUserDailyReportTotal_Log_Login" parameterType="java.util.Map" resultType="java.util.Map">
           select count(1) LOGIN_NUM from tbl_user_log_info b 
           <where>
	           	b.page_type = '登录'
	           	and b.create_date >= to_date(#{start_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
				and b.create_date &lt;= to_date(#{end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
				and create_user_name in (<include refid="sql_queryUserName"/>)
			</where>
	</select>
	
	<!-- 获取数据全局统计数据-日志 -访问数（新） -->
	<select id="queryUserDailyReportTotal_Log_Page" parameterType="java.util.Map" resultType="java.util.Map">
           select count(1) PAGE_VIEW from tbl_user_log_info b 
           <where>
	           	b.page_type != '登录'
	           	and b.create_date >= to_date(#{start_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
				and b.create_date &lt;= to_date(#{end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
				and create_user_name in (<include refid="sql_queryUserName"/>)
			</where>
	</select>
	
	<!-- 获取数据全局统计数据-全部销售订单 （新） -->
	<select id="queryUserDailyReportTotal_Allorder" parameterType="java.util.Map" resultType="java.util.Map">
         select nvl(sum(allPayMoney-preOrderFirstMoney),0) ALL_ORDER_PRODUCT_MONEY,nvl(sum(ALL_ORDER_COUNT),0) ALL_ORDER_COUNT,nvl(sum(ALL_ORDER_PRODUCT_COUNT),0) ALL_ORDER_PRODUCT_COUNT from (
		       select b.user_name,nvl(sum(PAYMENT_MONEY),0) allPayMoney,0 preOrderFirstMoney,count(*) ALL_ORDER_COUNT,sum(PRODUCT_COUNT) ALL_ORDER_PRODUCT_COUNT from tbl_order_info b where b.payment_state = 2 
		       --时间过滤
		       and b.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		       and b.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		       and b.user_name in (<include refid="sql_queryUserName"/>)
		       group by b.user_name
		       union all
		       --尾款订单的定金金额     
		       select b.user_name,0 allPayMoney,nvl(sum(a.PRODUCT_TOTAL_MONEY*(g.EARNEST_MONEY/g.PRODUCT_MONEY)),0) preOrderFirstMoney,0 ALL_ORDER_COUNT,0 ALL_ORDER_PRODUCT_COUNT from TBL_ORDER_PRODUCT a ,TBL_ORDER_INFO b,TBL_PRE_ORDER_RELATE f,TBL_PRE_ORDER_INFO g
		       where a.order_number = f.order_number and f.PRE_ORDER_NUMBER = g.ORDER_NUMBER
		       and a.order_number = b.order_number and b.PAYMENT_STATE = 2
		       --判断时间筛选
		       and b.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		       and b.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		       and b.user_name in (<include refid="sql_queryUserName"/>)
		       group by b.user_name
		) b
	</select>
	
	<!-- 获取数据全局统计数据-预定订单 （新） -->
	<select id="queryUserDailyReportTotal_Preorder" parameterType="java.util.Map" resultType="java.util.Map">
         	select nvl(sum(a.PRODUCT_MONEY*(b.EARNEST_MONEY/b.PRODUCT_MONEY)),0) PRE_ORDER_PRODUCT_MONEY from TBL_PRE_ORDER_DETAIL a ,TBL_PRE_ORDER_INFO b
	        where a.order_number = b.order_number and b.PAYMENT_STATE = 2 and b.ORDER_STATE in (2,3,4,5)
	        and b.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
	        and b.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
	        and b.USER_ID in (<include refid="sql_queryUserName"/>)
	</select>
	
	<!-- 获取数据全局统计数据-待付款订单 （新） -->
	<select id="queryUserDailyReportTotal_Obliorder" parameterType="java.util.Map" resultType="java.util.Map">
		    select count(*) OBLI_ORDER_COUNT,nvl(sum(PRODUCT_MONEY+DF_MONEY+LOGISTICS_MONEY),0) OBLI_ORDER_PRODUCT_MONEY,nvl(sum(PRODUCT_COUNT),0) OBLI_ORDER_PRODUCT_COUNT from tbl_order_info b where b.order_state = 1 
		    and b.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		    and b.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		    and b.user_name in (<include refid="sql_queryUserName"/>)
	</select>
	
	<!-- 获取数据全局统计数据-未发订单 （新） -->
	<select id="queryUserDailyReportTotal_Unshiporder" parameterType="java.util.Map" resultType="java.util.Map">
		select nvl(sum(UNSHIP_ORDER_PRODUCT_MONEY),0) UNSHIP_ORDER_PRODUCT_MONEY,nvl(sum(UNSHIP_ORDER_PRODUCT_COUNT),0) UNSHIP_ORDER_PRODUCT_COUNT,count(*) UNSHIP_ORDER_COUNT from (
		    select sum((c.COUNT-nvl(D.OUT_COUNT,0)-nvl(E.count,0))*c.PRODUCT_UNIT_PRICE) UNSHIP_ORDER_PRODUCT_MONEY,sum(c.COUNT-nvl(D.OUT_COUNT,0)-nvl(E.count,0)) UNSHIP_ORDER_PRODUCT_COUNT from tbl_order_info b,TBL_ORDER_PRODUCT_SKU c ,
		    (
		        select ORDER_NUMBER_PLATFORM,product_sku ,sum(out_count) out_count from ${jdbc_user}.TBL_INVOICE_PRODUCT  t1
		        where EXISTS
		              (SELECT 1 FROM TBL_ORDER_INFO T2
		                WHERE     T2.ORDER_NUMBER =T1.ORDER_NUMBER_PLATFORM
		                      AND t2.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		                      AND t2.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		                      AND T2.PAYMENT_STATE = 2
		              )
		        group by ORDER_NUMBER_PLATFORM,product_sku
		    ) d,
		    (
		        select f.ORDER_NUMBER,f.PRODUCT_SKU,sum(f.count) count from TBL_ORDER_RETURN_INFO T1,TBL_ORDER_RETURN_PRODUCT f where T1.RETURN_NUMBER = f.RETURN_NUMBER and T1.STATE = 2
		        and EXISTS
		            (SELECT 1 FROM TBL_ORDER_INFO T2
		                WHERE     T2.ORDER_NUMBER = T1.ORDER_NUMBER
		              AND t2.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		              AND t2.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		              AND T2.PAYMENT_STATE = 2
		            )
		        group by f.ORDER_NUMBER,f.product_sku
		    ) e
		    where b.payment_state = 2
		    and b.order_number = c.order_number
		    and c.order_number = d.ORDER_NUMBER_PLATFORM(+) and c.product_sku = d.PRODUCT_SKU(+)
		    and c.ORDER_NUMBER = e.ORDER_NUMBER(+) and c.product_sku = e.PRODUCT_SKU(+)
		    --时间过滤
		    and b.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		    and b.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		    and b.user_name in (<include refid="sql_queryUserName"/>)
		    group by c.order_number 
		    having sum(c.COUNT-nvl(D.OUT_COUNT,0)-nvl(E.count,0))>0
		) 
	</select>
	
	<!-- 获取数据全局统计数据-发货订单 （新） -->
	<select id="queryUserDailyReportTotal_Shiporder" parameterType="java.util.Map" resultType="java.util.Map">
		   select nvl(sum(SHIP_ORDER_PRODUCT_MONEY),0) SHIP_ORDER_PRODUCT_MONEY,nvl(sum(SHIP_ORDER_PRODUCT_COUNT),0) SHIP_ORDER_PRODUCT_COUNT ,count(*) SHIP_ORDER_COUNT from (
		       select sum(b.out_count*PRODUCT_UNIT_PRICE) SHIP_ORDER_PRODUCT_MONEY,sum(b.out_count) SHIP_ORDER_PRODUCT_COUNT 
		       from 
			   (
			   		 select b.* from ${jdbc_user}.TBL_INVOICE_info a,${jdbc_user}.TBL_INVOICE_PRODUCT b where 
		           	 a.DELIVER_STATE = 2 and  A.INVOICE_NUMBER = b.INVOICE_NUMBER
		             AND a.DELIVER_DATE >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		             AND a.DELIVER_DATE &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		           	 and a.USER_ID in (<include refid="sql_queryUserName"/>)
			   ) b,TBL_ORDER_PRODUCT_SKU c
		       where
		       b.product_sku = c.product_sku
		       and b.ORDER_NUMBER_PLATFORM = c.order_number
		       group by b.ORDER_NUMBER_PLATFORM
		       having sum(b.out_count)>0
	       )
	</select>
	
	<!-- 获取数据全局统计数据-退款订单 （新） -->
	<select id="queryUserDailyReportTotal_Refund" parameterType="java.util.Map" resultType="java.util.Map">
	        select nvl(sum(RETURN_TOTAL_MONEY),0) REFUND_ORDER_PRODUCT_MONEY,nvl(sum(PRODUCT_COUNT),0) REFUND_ORDER_PRODUCT_COUNT,count(*) REFUND_ORDER_COUNT from TBL_ORDER_RETURN_INFO
			where state = 2
			--判断时间筛选
			and CHECK_DATE >= to_date(#{start_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
			and CHECK_DATE &lt;= to_date(#{end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
			and user_name in (<include refid="sql_queryUserName"/>)
	</select>
	
	<!-- 获取数据全局统计数据-退货订单 （新） -->
	<select id="queryUserDailyReportTotal_Returns" parameterType="java.util.Map" resultType="java.util.Map">
		select nvl(sum(RETURNS_ORDER_PRODUCT_MONEY),0) RETURNS_ORDER_PRODUCT_MONEY ,nvl(sum(RETURNS_ORDER_PRODUCT_COUNT),0) RETURNS_ORDER_PRODUCT_COUNT,count(1) RETURNS_ORDER_COUNT from (
	       	select nvl(sum(RETURN_MONEY),0) RETURNS_ORDER_PRODUCT_MONEY ,nvl(sum(RETURN_NUM),0) RETURNS_ORDER_PRODUCT_COUNT,count(*) RETURNS_ORDER_COUNT
	        from ${jdbc_user}.tbl_new_return_confirm a,${jdbc_user}.tbl_new_return_order b,tbl_product_sku c
			where a.product_sku = c.ID and a.RETURN_NUMBER = b.RETURN_NUMBER and b.state = '8' and a.RETURN_FLAG = 1
			--判断时间筛选
			and b.refund_date >= to_date(#{start_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
			and b.refund_date &lt;= to_date(#{end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss')
			and b.user_name in (<include refid="sql_queryUserName"/>)
			group by b.RETURN_NUMBER
		)
	</select>
	
	<!-- ****************************************第四部分*****获取全局统计数据*********end************************************ -->
	
	
	<!-- **********************************销售日报表改造********for wangpeng 2018-02-06 ******end********************************** -->
	
	
	
	
	
	
    <!-- 查询用户销售日报表数量 （废弃）-->
	<select id="queryUserDailyReportCountBy" parameterType="java.util.Map" resultType="int">
				select count(1)
				  from tbl_user_info a
						<if test="order_type==1 or order_type==2">
							 	<choose>
							 		<when test="(order_money_min!=null and order_money_min!='') or (order_money_max!=null and order_money_max!='')">
							 		  ,(select user_name from
							 		  (SELECT t1.user_name,sum(t1.product_money) as order_product_money
										  FROM tbl_order_info t1
										 WHERE t1.create_date &gt;= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
										       AND t1.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
										         <if test="order_type==1">
												 	AND T1.ORDER_STATE in ( 2, 3, 5, 6) and T1.PAYMENT_STATE = 2
												 </if>
												 <if test="order_type==2">
												 	and t1.order_state = 1
												 </if>
										       GROUP BY T1.USER_NAME)
										       <where>
										       	  <if test="order_money_min!=null and order_money_min!='' ">
										 			and order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
												  </if>
												  <if test="order_money_max!=null and order_money_max!='' ">
										 			and order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
												  </if>
										       </where>) c
							 		</when>
							 	</choose>
				         	</if>
				         	<if test="order_type==3">
				         		<choose>
							 		<when test="(order_money_min!=null and order_money_min!='') or (order_money_max!=null and order_money_max!='')">
				         				,(select user_name from
				         				(SELECT T10.USER_NAME,NVL(SUM(T10.NOT_DELIVER_PRODUCT_MONEY),0) AS unship_order_product_money
										 FROM(SELECT T9.ORDER_NUMBER,
										             T9.USER_NAME,
		                                             T9.PRODUCT_MONEY - NVL(T7.deliver_product_MONEY,0) - NVL(T8.RETURN_PRODUCT_MONEY,0) AS NOT_DELIVER_PRODUCT_MONEY
										      FROM TBL_ORDER_INFO T9,
										           (SELECT T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY  
										                FROM TBL_ORDER_PRODUCT_SKU T5,
										                     (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
										                             T4.PRODUCT_SKU,
										                             SUM (T4.OUT_COUNT) AS deliver_product_count
										                        FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
										                       WHERE     EXISTS
										                                    (SELECT 1
										                                       FROM TBL_ORDER_INFO T1
										                                      WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
										                                            AND t1.create_date &gt;= TO_DATE (#{start_date},'yyyy-mm-dd hh24:mi:ss')
										                                            AND t1.create_date &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
										                                            AND T1.ORDER_STATE IN (2, 3, 5, 6) and T1.PAYMENT_STATE = 2)
										                             AND EXISTS
										                                    (SELECT 1
										                                       FROM ${jdbc_user}.TBL_INVOICE_INFO T3
										                                      WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
										                                            AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
										                                            AND T3.DELIVER_STATE = '2')
										                     GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
										                WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
										                      AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
										                GROUP BY T5.ORDER_NUMBER) T7,
										           (SELECT T1.ORDER_NUMBER, SUM(T1.PRODUCT_COUNT) AS RETURN_PRODUCT_COUNT, SUM(T1.PRODUCT_MONEY) AS RETURN_PRODUCT_MONEY
										              FROM TBL_ORDER_RETURN_INFO T1
										             WHERE EXISTS
										             (SELECT 1
										                      FROM TBL_ORDER_INFO T2
										                     WHERE T2.ORDER_NUMBER = T1.ORDER_NUMBER
										                           AND t2.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
										                           AND t2.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
										                           AND T2.ORDER_STATE IN (2, 3, 5, 6) and T2.PAYMENT_STATE = 2)
										                   AND T1.STATE = '2'
										             GROUP BY T1.ORDER_NUMBER) T8
										      WHERE T9.ORDER_NUMBER = T7.ORDER_NUMBER(+)
										            AND T9.ORDER_NUMBER = T8.ORDER_NUMBER(+)
										            AND t9.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
										            AND t9.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
										            AND T9.ORDER_STATE IN (2, 3, 5, 6) and T9.PAYMENT_STATE = 2
										            AND T9.PRODUCT_COUNT - NVL(T7.deliver_product_count,0) - NVL(T8.RETURN_PRODUCT_COUNT,0) > 0) T10
										GROUP BY T10.USER_NAME)
										<where>
							            	<if test="order_money_min!=null and order_money_min!='' ">
									 			and unship_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
											 </if>
											 <if test="order_money_max!=null and order_money_max!='' ">
									 			and unship_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
											 </if> 
							            </where>
										) c
				         			</when>
				         		</choose>
				         	</if>
				         	<if test="order_type==4">
				         		<choose>
							 		<when test="(order_money_min!=null and order_money_min!='') or (order_money_max!=null and order_money_max!='')">
				         				,(select user_name from
				         				(SELECT T7.USER_NAME,SUM(T7.deliver_product_MONEY) AS ship_order_product_money
											FROM (SELECT T5.USER_NAME,T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY   
											      FROM TBL_ORDER_PRODUCT_SKU T5,
											           (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
											                   T4.PRODUCT_SKU,
											                   SUM (T4.OUT_COUNT) AS deliver_product_count
											              FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
											             WHERE     EXISTS
											                          (SELECT 1
											                             FROM TBL_ORDER_INFO T1
											                            WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
											                                  AND T1.ORDER_STATE IN (2, 3, 5, 6) and T1.PAYMENT_STATE = 2)
											                   AND EXISTS
											                          (SELECT 1
											                             FROM ${jdbc_user}.TBL_INVOICE_INFO T3
											                            WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
											                                  AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
											                                  AND T3.DELIVER_STATE = '2'
											                                  AND T3.DELIVER_DATE &gt;= TO_DATE (#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
											                                  AND T3.DELIVER_DATE &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss'))
											           GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
											      WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
											            AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
											      GROUP BY T5.USER_NAME,T5.ORDER_NUMBER) T7 
											GROUP BY T7.USER_NAME)
											<where>
										      	<if test="order_money_min!=null and order_money_min!='' ">
										 			 and ship_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
												 </if>
												 <if test="order_money_max!=null and order_money_max!='' ">
										 			 and ship_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
												 </if> 
										      </where>
											) c
				         			</when>
				         		</choose>
				         	</if>
				  where 1=1
				 	<if test="(order_money_min!=null and order_money_min!='') or (order_money_max!=null and order_money_max!='')">
				 	 and a.user_name = c.user_name
				 	</if>
				<if test="login_name != null and login_name != '' ">
		 			and a.login_name like concat(concat('%', #{login_name,jdbcType=VARCHAR}),'%')
				 </if>
		 		 <if test="user_manage_name!=null and user_manage_name!=''">
					and a.user_manage_name like concat(concat('%', #{user_manage_name,jdbcType=VARCHAR}),'%')
				 </if>
				 <if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
					and a.user_manage_mobilephone like concat(concat('%', #{user_manage_mobilephone, jdbcType=VARCHAR}),'%')
				 </if>
				 <if test="user_company_type != null and user_company_type != 0 ">
				    and	a.user_company_type = #{user_company_type,jdbcType=INTEGER}
				</if>
				<if test="user_state != null and user_state != '' and user_state != 0 ">
				    and	a.user_state = #{user_state,jdbcType=INTEGER}
				</if>
				 <if test="ywjl_user_id != null and ywjl_user_id != '' ">
			    	and	a.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
				</if>
				<if test="md_id != null and md_id != 0 ">
				    and	a.store_id = #{md_id,jdbcType=INTEGER}
				</if>
				<if test="ywy_user_id != null and ywy_user_id != '' ">
				    and	a.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
				</if>
				 <if test="public_user_type != null and public_user_type == 2">
		            and EXISTS (SELECT 1 FROM TBL_SYS_USER_STORE TSUS WHERE TSUS.STORE_ID = a.STORE_ID AND TSUS.USER_ID = #{public_user_id,jdbcType=INTEGER})
		        </if>
		        <if test="public_user_type != null and public_user_type == 3">
		            and a.referee_user_id = #{public_user_id,jdbcType=INTEGER}
		        </if>
		        <if test="public_user_type != null and public_user_type == 4">
		            and a.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
		        </if>
		        <if test="public_user_type != null and public_user_type == 5">
		            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = a.STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
		        </if>
		        <if test="public_user_type != null and public_user_type == 6">
		            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = a.STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
		        </if>
		        <if test="public_user_type != null and public_user_type == 9">
		            and EXISTS(SELECT 1 
		                         FROM TBL_SYS_USER_INFO TSUI
		                        WHERE TSUI.USER_TYPE = 4
		            				  AND TSUI.ORGANIZATION_ID IN (
										  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
										  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
							              )
							          AND TSUI.id = a.market_supervision_user_id)
		        </if>
	</select>
	<!-- (分页)查询用户销售日报表列表 （废弃）-->
	<select id="queryUserDailyReportListBy" parameterType="java.util.Map" resultType="java.util.Map">
		
				select *
				  from (select * from (
						select a.*, rownum rn from (select a.user_name,
											 (select store_name from tbl_store_info t where t.id=a.store_id ) store_name,
											 (select user_realname from tbl_sys_user_info t where t.id=a.referee_user_id) referee_user_realname,
											 (select user_realname from tbl_sys_user_info t where t.id=a.market_supervision_user_id) market_supervision_user_realna,
											 a.login_name,
											 a.user_manage_name,
											 a.user_manage_mobilephone,
											 a.user_state,
											 nvl(b.login_num,0) login_num,
										 	 nvl(b.page_view,0) page_view,
											 nvl(all_order_count,0) all_order_count,
											 nvl(all_order_product_count,0) all_order_product_count,   
											 nvl(all_order_product_money,0) all_order_product_money,    
											 nvl(obli_order_count,0) obli_order_count,
											 nvl(obli_order_product_count,0) obli_order_product_count,
											 nvl(obli_order_product_money,0) obli_order_product_money,   
											 nvl(unship_order_count,0) unship_order_count,
											 nvl(unship_order_product_count,0) unship_order_product_count,
											 nvl(unship_order_product_money,0) unship_order_product_money,
											 nvl(ship_order_count,0) ship_order_count,
											 nvl(ship_order_product_count,0) ship_order_product_count,
											 nvl(ship_order_product_money,0) ship_order_product_money,
											 nvl(refund_order_count,0) refund_order_count,
											 nvl(refund_order_product_count,0) refund_order_product_count,
											 nvl(refund_order_product_money,0) refund_order_product_money,
											 nvl(returns_order_count,0) returns_order_count,
											 nvl(returns_order_product_count,0) returns_order_product_count,
											 nvl(returns_order_product_money,0) returns_order_product_money,
											 nvl(actual_sale_product_count,0) actual_sale_product_count,
											 nvl(actual_sale_product_money,0) actual_sale_product_money
				  from tbl_user_info a,
				       (select user_name,
				               nvl(sum(login_num),0) login_num,
				               nvl(sum(page_view),0) page_view,
				               sum(all_order_count) all_order_count,
				               sum(all_order_product_count) all_order_product_count,
				               sum(all_order_product_money) all_order_product_money,
				               sum(obli_order_count) obli_order_count,
				               sum(obli_order_product_count) obli_order_product_count,
				               sum(obli_order_product_money) obli_order_product_money,
				               sum(unship_order_count) unship_order_count,
				               sum(unship_order_product_count) unship_order_product_count,
				               sum(unship_order_product_money) unship_order_product_money,
				               sum(ship_order_count) ship_order_count,
				               sum(ship_order_product_count) ship_order_product_count,
				               sum(ship_order_product_money) ship_order_product_money,
				               sum(refund_order_count) refund_order_count,
				               sum(refund_order_product_count) refund_order_product_count,
				               sum(refund_order_product_money) refund_order_product_money,
				               sum(returns_order_count) returns_order_count,
				               sum(returns_order_product_count) returns_order_product_count,
				               sum(returns_order_product_money) returns_order_product_money,
				               sum(ship_order_product_count) - sum(returns_order_product_count) actual_sale_product_count,
				               sum(ship_order_product_money) - sum(returns_order_product_money) actual_sale_product_money
				          from (select create_user_name user_name,
				                       case
				                         when page_type = '登录' then
				                          count(1)
				                       end login_num,
				                       case
				                         when page_type != '登录' then
				                          count(1)
				                       end page_view,
				                       0 as all_order_count,
								       0 as all_order_product_count,
								       0 as all_order_product_money,
								       0 as obli_order_count,
								       0 as obli_order_product_count,
								       0 as obli_order_product_money,
								       0 as unship_order_count,
								       0 as unship_order_product_count,
								       0 as unship_order_product_money,
								       0 as ship_order_count,
								       0 as ship_order_product_count,
								       0 as ship_order_product_money,
								       0 as refund_order_count,
								       0 as refund_order_product_count,
								       0 as refund_order_product_money,
								       0 as returns_order_count,
								       0 as returns_order_product_count,
								       0 as returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money
				                  from tbl_user_log_info
				                 where 1=1
				                 <include refid="sql_date"/>
				                 group by page_type, create_user_name
				                union all
				                SELECT t1.user_name,
				                	   0 as login_num,
				                	   0 as page_view,
								       count(1) as all_order_count,
								       sum(t1.product_count) as all_order_product_count,
								       sum(t1.product_money) as all_order_product_money,
								       0 as obli_order_count,
								       0 as obli_order_product_count,
								       0 as obli_order_product_money,
								       0 as unship_order_count,
								       0 as unship_order_product_count,
								       0 as unship_order_product_money,
								       0 as ship_order_count,
								       0 as ship_order_product_count,
								       0 as ship_order_product_money,
								       0 as refund_order_count,
								       0 as refund_order_product_count,
								       0 as refund_order_product_money,
								       0 as returns_order_count,
								       0 as returns_order_product_count,
								       0 as returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money
								  FROM tbl_order_info t1
								 WHERE t1.create_date &gt;= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
								       AND t1.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
									   AND T1.ORDER_STATE in ( 2, 3, 5, 6) and T1.PAYMENT_STATE = 2
								       GROUP BY  T1.USER_NAME
								union all
								SELECT t1.user_name,
									   0 as login_num,
				                	   0 as page_view,
								       0 as all_order_count,
								       0 as all_order_product_count,
								       0 as all_order_product_money,
								       count(1) as obli_order_count,
								       sum(t1.product_count) as obli_order_product_count,
								       sum(t1.product_money) as obli_order_product_money,
								       0 as unship_order_count,
								       0 as unship_order_product_count,
								       0 as unship_order_product_money,
								       0 as ship_order_count,
								       0 as ship_order_product_count,
								       0 as ship_order_product_money,
								       0 as refund_order_count,
								       0 as refund_order_product_count,
								       0 as refund_order_product_money,
								       0 as returns_order_count,
								       0 as returns_order_product_count,
								       0 as returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money
								  FROM tbl_order_info t1
								 WHERE t1.create_date &gt;= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
								       AND t1.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
								       AND T1.ORDER_STATE = 1
								       GROUP BY  T1.USER_NAME
								union all
								SELECT T10.USER_NAME,
									   0 as login_num,
				                	   0 as page_view,
								       0 as all_order_count,
								       0 as all_order_product_count,
								       0 as all_order_product_money,
								       0 as obli_order_count,
								       0 as obli_order_product_count,
								       0 as obli_order_product_money,
								       COUNT(1) AS unship_order_count,
								       NVL(SUM(T10.NOT_DELIVER_PRODUCT_COUNT),0) AS unship_order_product_count,
								       NVL(SUM(T10.NOT_DELIVER_PRODUCT_MONEY),0) AS unship_order_product_money,
								       0 as ship_order_count,
								       0 as ship_order_product_count,
								       0 as ship_order_product_money,
								       0 as refund_order_count,
								       0 as refund_order_product_count,
								       0 as refund_order_product_money,
								       0 as returns_order_count,
								       0 as returns_order_product_count,
								       0 as returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money
								 FROM(SELECT T9.ORDER_NUMBER,
								             T9.USER_NAME,
								             T9.PRODUCT_COUNT - NVL(T7.deliver_product_count,0) - NVL(T8.RETURN_PRODUCT_COUNT,0) AS NOT_DELIVER_PRODUCT_COUNT,
								             T9.PRODUCT_MONEY - NVL(T7.deliver_product_MONEY,0) - NVL(T8.RETURN_PRODUCT_MONEY,0) AS NOT_DELIVER_PRODUCT_MONEY
								      FROM TBL_ORDER_INFO T9,
								           (SELECT T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY  
								                FROM TBL_ORDER_PRODUCT_SKU T5,
								                     (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
								                             T4.PRODUCT_SKU,
								                             SUM (T4.OUT_COUNT) AS deliver_product_count
								                        FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
								                       WHERE     EXISTS
								                                    (SELECT 1
								                                       FROM TBL_ORDER_INFO T1
								                                      WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
								                                            AND t1.create_date &gt;= TO_DATE (#{start_date},'yyyy-mm-dd hh24:mi:ss')
								                                            AND t1.create_date &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
								                                            AND T1.ORDER_STATE IN (2, 3, 5, 6) and T1.PAYMENT_STATE = 2)
								                             AND EXISTS
								                                    (SELECT 1
								                                       FROM ${jdbc_user}.TBL_INVOICE_INFO T3
								                                      WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
								                                            AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
								                                            AND T3.DELIVER_STATE = '2')
								                     GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
								                WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
								                      AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
								                GROUP BY T5.ORDER_NUMBER) T7,
								           (SELECT T1.ORDER_NUMBER, SUM(T1.PRODUCT_COUNT) AS RETURN_PRODUCT_COUNT, SUM(T1.PRODUCT_MONEY) AS RETURN_PRODUCT_MONEY
								              FROM TBL_ORDER_RETURN_INFO T1
								             WHERE EXISTS
								             (SELECT 1
								                      FROM TBL_ORDER_INFO T2
								                     WHERE T2.ORDER_NUMBER = T1.ORDER_NUMBER
								                           AND t2.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
								                           AND t2.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
								                           AND T2.ORDER_STATE IN (2, 3, 5, 6) and T2.PAYMENT_STATE = 2)
								                   AND T1.STATE = '2'
								             GROUP BY T1.ORDER_NUMBER) T8
								      WHERE T9.ORDER_NUMBER = T7.ORDER_NUMBER(+)
								            AND T9.ORDER_NUMBER = T8.ORDER_NUMBER(+)
								            AND t9.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
								            AND t9.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
								            AND T9.ORDER_STATE IN (2, 3, 5, 6) and T9.PAYMENT_STATE = 2
								            AND T9.PRODUCT_COUNT - NVL(T7.deliver_product_count,0) - NVL(T8.RETURN_PRODUCT_COUNT,0) > 0) T10
								GROUP BY T10.USER_NAME
								union all
								SELECT T7.USER_NAME,
									   0 as login_num,
				                	   0 as page_view,
								       0 as all_order_count,
								       0 as all_order_product_count,
								       0 as all_order_product_money,
								       0 as obli_order_count,
								       0 as obli_order_product_count,
								       0 as obli_order_product_money,
								       0 as unship_order_count,
								       0 as unship_order_product_count,
								       0 as unship_order_product_money,
								       COUNT(1) ship_order_count,
								       SUM(T7.deliver_product_count) AS ship_order_product_count,
								       SUM(T7.deliver_product_MONEY) AS ship_order_product_money,
								       0 as refund_order_count,
								       0 as refund_order_product_count,
								       0 as refund_order_product_money,
								       0 as returns_order_count,
								       0 as returns_order_product_count,
								       0 as returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money
								FROM (SELECT T5.USER_NAME,T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY  
								      FROM TBL_ORDER_PRODUCT_SKU T5,
								           (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
								                   T4.PRODUCT_SKU,
								                   SUM (T4.OUT_COUNT) AS deliver_product_count
								              FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
								             WHERE     EXISTS
								                          (SELECT 1
								                             FROM TBL_ORDER_INFO T1
								                            WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
								                                  AND T1.ORDER_STATE IN (2, 3, 5, 6) and T1.PAYMENT_STATE = 2)
								                   AND EXISTS
								                          (SELECT 1
								                             FROM ${jdbc_user}.TBL_INVOICE_INFO T3
								                            WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
								                                  AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
								                                  AND T3.DELIVER_STATE = '2'
								                                  AND T3.DELIVER_DATE &gt;= TO_DATE (#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
								                                  AND T3.DELIVER_DATE &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss'))
								           GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
								      WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
								            AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
								      GROUP BY T5.USER_NAME,T5.ORDER_NUMBER) T7 
								GROUP BY T7.USER_NAME
								union all
								SELECT T3.USER_NAME,
									   0 as login_num,
				                	   0 as page_view,
								       0 as all_order_count,
								       0 as all_order_product_count,
								       0 as all_order_product_money,
								       0 as obli_order_count,
								       0 as obli_order_product_count,
								       0 as obli_order_product_money,
								       0 as unship_order_count,
								       0 as unship_order_product_count,
								       0 as unship_order_product_money,
								       0 as ship_order_count,
								       0 as ship_order_product_count,
								       0 as ship_order_product_money,
								       COUNT(1) AS refund_order_count,
								       SUM(T3.RETURN_PRODUCT_COUNT) AS refund_order_product_count,
								       SUM(T3.RETURN_PRODUCT_MONEY) AS refund_order_product_money,
								       0 as returns_order_count,
								       0 as returns_order_product_count,
								       0 as returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money
								FROM (SELECT T1.USER_NAME,T1.ORDER_NUMBER, SUM(T1.PRODUCT_COUNT) AS RETURN_PRODUCT_COUNT, SUM(T1.PRODUCT_MONEY) AS RETURN_PRODUCT_MONEY
								        FROM TBL_ORDER_RETURN_INFO T1
								       WHERE EXISTS
								       (SELECT 1
								                FROM TBL_ORDER_INFO T2
								               WHERE T2.ORDER_NUMBER = T1.ORDER_NUMBER
								                     AND T2.ORDER_STATE IN (2, 3, 5, 6) and T2.PAYMENT_STATE = 2)
								             AND T1.STATE = '2'
								             AND T1.CHECK_DATE &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
								             AND T1.CHECK_DATE &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
								       GROUP BY T1.USER_NAME,T1.ORDER_NUMBER
								      ) T3
								GROUP BY T3.USER_NAME                       
								UNION ALL
								SELECT T1.USER_NAME,
									   0 as login_num,
				                	   0 as page_view,
								       0 as all_order_count,
								       0 as all_order_product_count,
								       0 as all_order_product_money,
								       0 as obli_order_count,
								       0 as obli_order_product_count,
								       0 as obli_order_product_money,
								       0 as unship_order_count,
								       0 as unship_order_product_count,
								       0 as unship_order_product_money,
								       0 as ship_order_count,
								       0 as ship_order_product_count,
								       0 as ship_order_product_money,
								       0 as refund_order_count,
								       0 as refund_order_product_count,
								       0 as refund_order_product_money,
								       COUNT(1) AS returns_order_count,
								       SUM(T1.count) AS returns_order_product_count,
								       SUM(T1.MONEY) AS returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money      
								  FROM TBL_USER_ACCOUNT_RECORD T1
								 WHERE T1.RECORD_CHANNEL = '退货退款'
								       AND EXISTS
								       (SELECT 1
								                FROM ${jdbc_user}.TBL_NEW_RETURN_ORDER T2
								               WHERE T2.RETURN_NUMBER = T1.TURNOVER_NUMBER
								                     AND T2.STATE = 8
								                     AND T2.REFUND_DATE &gt;= TO_DATE(#{start_date}, 'YYYY-MM-DD HH24:MI:SS')
								                     AND T2.REFUND_DATE &lt;= TO_DATE(#{end_date}, 'YYYY-MM-DD HH24:MI:SS'))
								GROUP BY T1.USER_NAME)
				         group by user_name) b
				         <if test="order_type==1 or order_type==2">
							 	<choose>
							 		<when test="(order_money_min!=null and order_money_min!='') or (order_money_max!=null and order_money_max!='')">
							 		  ,(select user_name from
							 		  (SELECT t1.user_name,sum(t1.product_money) as order_product_money
										  FROM tbl_order_info t1
										 WHERE t1.create_date &gt;= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
										       AND t1.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
										       	<if test="order_type==1">
												 	AND T1.ORDER_STATE in ( 2, 3, 5, 6) and T1.PAYMENT_STATE = 2
												 </if>
												 <if test="order_type==2">
												 	and t1.order_state = 1
												 </if>
										       GROUP BY T1.USER_NAME)
										       <where>
										       	  <if test="order_money_min!=null and order_money_min!='' ">
										 			and order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
												  </if>
												  <if test="order_money_max!=null and order_money_max!='' ">
										 			and order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
												  </if>
										       </where>) c
							 		</when>
							 	</choose>
				         	</if>
				         	<if test="order_type==3">
				         		<choose>
							 		<when test="(order_money_min!=null and order_money_min!='') or (order_money_max!=null and order_money_max!='')">
				         				,
				         				(select user_name from
				         				(SELECT T10.USER_NAME,NVL(SUM(T10.NOT_DELIVER_PRODUCT_MONEY),0) AS unship_order_product_money
										 FROM(SELECT T9.ORDER_NUMBER,
										             T9.USER_NAME,
		                                             T9.PRODUCT_MONEY - NVL(T7.deliver_product_MONEY,0) - NVL(T8.RETURN_PRODUCT_MONEY,0) AS NOT_DELIVER_PRODUCT_MONEY
										      FROM TBL_ORDER_INFO T9,
										           (SELECT T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY  
										                FROM TBL_ORDER_PRODUCT_SKU T5,
										                     (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
										                             T4.PRODUCT_SKU,
										                             SUM (T4.OUT_COUNT) AS deliver_product_count
										                        FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
										                       WHERE     EXISTS
										                                    (SELECT 1
										                                       FROM TBL_ORDER_INFO T1
										                                      WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
										                                            AND t1.create_date &gt;= TO_DATE (#{start_date},'yyyy-mm-dd hh24:mi:ss')
										                                            AND t1.create_date &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
										                                            AND T1.ORDER_STATE IN (2, 3, 5, 6) and T1.PAYMENT_STATE = 2)
										                             AND EXISTS
										                                    (SELECT 1
										                                       FROM ${jdbc_user}.TBL_INVOICE_INFO T3
										                                      WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
										                                            AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
										                                            AND T3.DELIVER_STATE = '2')
										                     GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
										                WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
										                      AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
										                GROUP BY T5.ORDER_NUMBER) T7,
										           (SELECT T1.ORDER_NUMBER, SUM(T1.PRODUCT_COUNT) AS RETURN_PRODUCT_COUNT, SUM(T1.PRODUCT_MONEY) AS RETURN_PRODUCT_MONEY
										              FROM TBL_ORDER_RETURN_INFO T1
										             WHERE EXISTS
										             (SELECT 1
										                      FROM TBL_ORDER_INFO T2
										                     WHERE T2.ORDER_NUMBER = T1.ORDER_NUMBER
										                           AND t2.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
										                           AND t2.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
										                           AND T2.ORDER_STATE IN (2, 3, 5, 6) and T2.PAYMENT_STATE = 2)
										                   AND T1.STATE = '2'
										             GROUP BY T1.ORDER_NUMBER) T8
										      WHERE T9.ORDER_NUMBER = T7.ORDER_NUMBER(+)
										            AND T9.ORDER_NUMBER = T8.ORDER_NUMBER(+)
										            AND t9.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
										            AND t9.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
										            AND T9.ORDER_STATE IN (2, 3, 5, 6) and T9.PAYMENT_STATE = 2
										            AND T9.PRODUCT_COUNT - NVL(T7.deliver_product_count,0) - NVL(T8.RETURN_PRODUCT_COUNT,0) > 0) T10
										GROUP BY T10.USER_NAME)
										<where>
							            	<if test="order_money_min!=null and order_money_min!='' ">
									 			and unship_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
											 </if>
											 <if test="order_money_max!=null and order_money_max!='' ">
									 			and unship_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
											 </if> 
							            </where>
										) c
				         			</when>
				         		</choose>
				         	</if>
				         	<if test="order_type==4">
				         		<choose>
							 		<when test="(order_money_min!=null and order_money_min!='') or (order_money_max!=null and order_money_max!='')">
				         				,(select user_name from
				         				(SELECT T7.USER_NAME,SUM(T7.deliver_product_MONEY) AS ship_order_product_money
											FROM (SELECT T5.USER_NAME,T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY   
											      FROM TBL_ORDER_PRODUCT_SKU T5,
											           (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
											                   T4.PRODUCT_SKU,
											                   SUM (T4.OUT_COUNT) AS deliver_product_count
											              FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
											             WHERE     EXISTS
											                          (SELECT 1
											                             FROM TBL_ORDER_INFO T1
											                            WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
											                                  AND T1.ORDER_STATE IN (2, 3, 5, 6) and T1.PAYMENT_STATE = 2)
											                   AND EXISTS
											                          (SELECT 1
											                             FROM ${jdbc_user}.TBL_INVOICE_INFO T3
											                            WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
											                                  AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
											                                  AND T3.DELIVER_STATE = '2'
											                                  AND T3.DELIVER_DATE &gt;= TO_DATE (#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
											                                  AND T3.DELIVER_DATE &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss'))
											           GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
											      WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
											            AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
											      GROUP BY T5.USER_NAME,T5.ORDER_NUMBER) T7 
											GROUP BY T7.USER_NAME)
											<where>
										      	<if test="order_money_min!=null and order_money_min!='' ">
										 			 and ship_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
												 </if>
												 <if test="order_money_max!=null and order_money_max!='' ">
										 			 and ship_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
												 </if> 
										      </where>
											) c
				         			</when>
				         		</choose>
				         	</if>
				  		where 
			  			<choose>
			  			<when test="(order_money_min!=null and order_money_min!='') or (order_money_max!=null and order_money_max!='')">
						 	a.user_name = b.user_name
						 	and a.user_name = c.user_name
			  			</when>
			  			<otherwise>
			  				a.user_name = b.user_name(+)
			  			</otherwise>
			  			</choose>
					and a.user_state in (1, 2, 4)
					and user_resource != '临时会员'
							 <if test="login_name != null and login_name != '' ">
					 			and a.login_name like concat(concat('%', #{login_name,jdbcType=VARCHAR}),'%')
							 </if>
					 		 <if test="user_manage_name!=null and user_manage_name!=''">
								and a.user_manage_name like concat(concat('%', #{user_manage_name,jdbcType=VARCHAR}),'%')
							 </if>
							 <if test="user_manage_mobilephone!=null and user_manage_mobilephone!=''">
								and a.user_manage_mobilephone like concat(concat('%', #{user_manage_mobilephone, jdbcType=VARCHAR}),'%')
							 </if>
							 <if test="ywjl_user_id != null and ywjl_user_id != '' ">
						    	and	a.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
							</if>
							<if test="user_company_type != null and user_company_type != 0 ">
							    and	a.user_company_type = #{user_company_type,jdbcType=INTEGER}
							</if>
							<if test="user_state != null and user_state != '' and user_state != 0 ">
							    and	a.user_state = #{user_state,jdbcType=INTEGER}
							</if>
							<if test="md_id != null and md_id != 0 ">
							    and	a.store_id = #{md_id,jdbcType=INTEGER}
							</if>
							<if test="ywy_user_id != null and ywy_user_id != '' ">
							    and	a.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
							</if>
							 <if test="public_user_type != null and public_user_type == 2">
					            and EXISTS (SELECT 1 FROM TBL_SYS_USER_STORE TSUS WHERE TSUS.STORE_ID = a.STORE_ID AND TSUS.USER_ID = #{public_user_id,jdbcType=INTEGER})
					        </if>
					        <if test="public_user_type != null and public_user_type == 3">
					            and a.referee_user_id = #{public_user_id,jdbcType=INTEGER}
					        </if>
					        <if test="public_user_type != null and public_user_type == 4">
					            and a.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
					        </if>
					        <if test="public_user_type != null and public_user_type == 5">
					            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = a.STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
					        </if>
					        <if test="public_user_type != null and public_user_type == 6">
					            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = a.STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
					        </if>
					        <if test="public_user_type != null and public_user_type == 9">
					            and EXISTS(SELECT 1 
					                         FROM TBL_SYS_USER_INFO TSUI
					                        WHERE TSUI.USER_TYPE = 4
					            				  AND TSUI.ORGANIZATION_ID IN (
													  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
													  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
										              )
										          AND TSUI.id = a.market_supervision_user_id)
					        </if>
					        <choose>
					        	<when test="order_type==1">
					        		<if test="order_money_min!=null and order_money_min!='' ">
							 			and b.all_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
									</if>
									<if test="order_money_max!=null and order_money_max!='' ">
							 			and b.all_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
									</if>
					        	</when>
					        	<when test="order_type==2">
					        		<if test="order_money_min!=null and order_money_min!='' ">
							 			and b.obli_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
									</if>
									<if test="order_money_max!=null and order_money_max!='' ">
							 			and b.obli_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
									</if>
					        	</when>
					        	<when test="order_type==3">
					        		<if test="order_money_min!=null and order_money_min!='' ">
							 			and b.unship_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
									</if>
									<if test="order_money_max!=null and order_money_max!='' ">
							 			and b.unship_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
									</if>
					        	</when>
					        	<when test="order_type==4">
					        		<if test="order_money_min!=null and order_money_min!='' ">
							 			and b.ship_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
									</if>
									<if test="order_money_max!=null and order_money_max!='' ">
							 			and b.ship_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
									</if>
					        	</when>
					        </choose>
							  <if test="sort != null and sort != ''">
			                    order by ${sort} ${sort_by},id
			                  </if>
							 ) a where rownum &lt;= #{end_rownum})
						where rn &gt; #{start_rownum}) a
				 
	</select>
	
	<!-- 查询用户销售日报表总合计 -->
	<select id="queryUserDailyReportToMap" parameterType="java.util.Map" resultType="java.util.Map">		         
			         select    nvl(sum(login_num),0) login_num,
				               nvl(sum(page_view),0) page_view,
				               nvl(sum(all_order_count),0) all_order_count,
				               nvl(sum(all_order_product_count),0) all_order_product_count,
				               nvl(sum(all_order_product_money),0) all_order_product_money,
				               nvl(sum(obli_order_count),0) obli_order_count,
				               nvl(sum(obli_order_product_count),0) obli_order_product_count,
				               nvl(sum(obli_order_product_money),0) obli_order_product_money,
				               nvl(sum(unship_order_count),0) unship_order_count,
				               nvl(sum(unship_order_product_count),0) unship_order_product_count,
				               nvl(sum(unship_order_product_money),0) unship_order_product_money,
				               nvl(sum(ship_order_count),0) ship_order_count,
				               nvl(sum(ship_order_product_count),0) ship_order_product_count,
				               nvl(sum(ship_order_product_money),0) ship_order_product_money,
				               nvl(sum(refund_order_count),0) refund_order_count,
				               nvl(sum(refund_order_product_count),0) refund_order_product_count,
				               nvl(sum(refund_order_product_money),0) refund_order_product_money,
				               nvl(sum(returns_order_count),0) returns_order_count,
				               nvl(sum(returns_order_product_count),0) returns_order_product_count,
				               nvl(sum(returns_order_product_money),0) returns_order_product_money,
				               nvl(sum(actual_sale_product_count),0) actual_sale_product_count,
				               nvl(sum(actual_sale_product_money),0) actual_sale_product_money 
			           from
			         (select   user_name,
				               nvl(sum(login_num),0) login_num,
				               nvl(sum(page_view),0) page_view,
				               nvl(sum(all_order_count),0) all_order_count,
				               nvl(sum(all_order_product_count),0) all_order_product_count,
				               nvl(sum(all_order_product_money),0) all_order_product_money,
				               nvl(sum(obli_order_count),0) obli_order_count,
				               nvl(sum(obli_order_product_count),0) obli_order_product_count,
				               nvl(sum(obli_order_product_money),0) obli_order_product_money,
				               nvl(sum(unship_order_count),0) unship_order_count,
				               nvl(sum(unship_order_product_count),0) unship_order_product_count,
				               nvl(sum(unship_order_product_money),0) unship_order_product_money,
				               nvl(sum(ship_order_count),0) ship_order_count,
				               nvl(sum(ship_order_product_count),0) ship_order_product_count,
				               nvl(sum(ship_order_product_money),0) ship_order_product_money,
				               nvl(sum(refund_order_count),0) refund_order_count,
				               nvl(sum(refund_order_product_count),0) refund_order_product_count,
				               nvl(sum(refund_order_product_money),0) refund_order_product_money,
				               nvl(sum(returns_order_count),0) returns_order_count,
				               nvl(sum(returns_order_product_count),0) returns_order_product_count,
				               nvl(sum(returns_order_product_money),0) returns_order_product_money,
				               nvl(sum(ship_order_product_count),0) - nvl(sum(returns_order_product_count),0) actual_sale_product_count,
				               nvl(sum(ship_order_product_money),0) - nvl(sum(returns_order_product_money),0) actual_sale_product_money
				          from (select create_user_name user_name,
				                       case
				                         when page_type = '登录' then
				                          count(1)
				                       end login_num,
				                       case
				                         when page_type != '登录' then
				                          count(1)
				                       end page_view,
				                       0 as all_order_count,
								       0 as all_order_product_count,
								       0 as all_order_product_money,
								       0 as obli_order_count,
								       0 as obli_order_product_count,
								       0 as obli_order_product_money,
								       0 as unship_order_count,
								       0 as unship_order_product_count,
								       0 as unship_order_product_money,
								       0 as ship_order_count,
								       0 as ship_order_product_count,
								       0 as ship_order_product_money,
								       0 as refund_order_count,
								       0 as refund_order_product_count,
								       0 as refund_order_product_money,
								       0 as returns_order_count,
								       0 as returns_order_product_count,
								       0 as returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money
				                  from tbl_user_log_info
				                 where 1=1 and create_user_name in (<include refid="sql_queryUserName"/>)
				                 <include refid="sql_date"/>
				                 group by page_type, create_user_name
				                union all
				                SELECT t1.user_name,
				                	   0 as login_num,
				                	   0 as page_view,
								       count(1) as all_order_count,
								       sum(t1.product_count) as all_order_product_count,
								       sum(t1.product_money) as all_order_product_money,
								       0 as obli_order_count,
								       0 as obli_order_product_count,
								       0 as obli_order_product_money,
								       0 as unship_order_count,
								       0 as unship_order_product_count,
								       0 as unship_order_product_money,
								       0 as ship_order_count,
								       0 as ship_order_product_count,
								       0 as ship_order_product_money,
								       0 as refund_order_count,
								       0 as refund_order_product_count,
								       0 as refund_order_product_money,
								       0 as returns_order_count,
								       0 as returns_order_product_count,
								       0 as returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money
								  FROM tbl_order_info t1
								 WHERE t1.create_date &gt;= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
								       AND t1.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
								       AND T1.ORDER_STATE in ( 2, 3, 5, 6) and T1.PAYMENT_STATE = 2
								       AND t1.user_name in (<include refid="sql_queryUserName"/>)
								       GROUP BY  T1.USER_NAME
								union all
								SELECT t1.user_name,
									   0 as login_num,
				                	   0 as page_view,
								       0 as all_order_count,
								       0 as all_order_product_count,
								       0 as all_order_product_money,
								       count(1) as obli_order_count,
								       sum(t1.product_count) as obli_order_product_count,
								       sum(t1.product_money) as obli_order_product_money,
								       0 as unship_order_count,
								       0 as unship_order_product_count,
								       0 as unship_order_product_money,
								       0 as ship_order_count,
								       0 as ship_order_product_count,
								       0 as ship_order_product_money,
								       0 as refund_order_count,
								       0 as refund_order_product_count,
								       0 as refund_order_product_money,
								       0 as returns_order_count,
								       0 as returns_order_product_count,
								       0 as returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money
								  FROM tbl_order_info t1
								 WHERE t1.create_date &gt;= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
								       AND t1.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
								       AND T1.ORDER_STATE = 1
								       AND t1.user_name in (<include refid="sql_queryUserName"/>)
								       GROUP BY  T1.USER_NAME
								union all
								SELECT T10.USER_NAME,
									   0 as login_num,
				                	   0 as page_view,
								       0 as all_order_count,
								       0 as all_order_product_count,
								       0 as all_order_product_money,
								       0 as obli_order_count,
								       0 as obli_order_product_count,
								       0 as obli_order_product_money,
								       COUNT(1) AS unship_order_count,
								       NVL(SUM(T10.NOT_DELIVER_PRODUCT_COUNT),0) AS unship_order_product_count,
								       NVL(SUM(T10.NOT_DELIVER_PRODUCT_MONEY),0) AS unship_order_product_money,
								       0 as ship_order_count,
								       0 as ship_order_product_count,
								       0 as ship_order_product_money,
								       0 as refund_order_count,
								       0 as refund_order_product_count,
								       0 as refund_order_product_money,
								       0 as returns_order_count,
								       0 as returns_order_product_count,
								       0 as returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money
								 FROM(SELECT T9.ORDER_NUMBER,
								             T9.USER_NAME,
								             T9.PRODUCT_COUNT - NVL(T7.deliver_product_count,0) - NVL(T8.RETURN_PRODUCT_COUNT,0) AS NOT_DELIVER_PRODUCT_COUNT,
								             T9.PRODUCT_MONEY - NVL(T7.deliver_product_MONEY,0) - NVL(T8.RETURN_PRODUCT_MONEY,0) AS NOT_DELIVER_PRODUCT_MONEY
								      FROM TBL_ORDER_INFO T9,
								           (SELECT T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY  
								                FROM TBL_ORDER_PRODUCT_SKU T5,
								                     (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
								                             T4.PRODUCT_SKU,
								                             SUM (T4.OUT_COUNT) AS deliver_product_count
								                        FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
								                       WHERE     EXISTS
								                                    (SELECT 1
								                                       FROM TBL_ORDER_INFO T1
								                                      WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
								                                            AND t1.create_date &gt;= TO_DATE (#{start_date},'yyyy-mm-dd hh24:mi:ss')
								                                            AND t1.create_date &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
								                                            AND T1.ORDER_STATE IN (2, 3, 5 , 6) and T1.PAYMENT_STATE = 2)
								                             AND EXISTS
								                                    (SELECT 1
								                                       FROM ${jdbc_user}.TBL_INVOICE_INFO T3
								                                      WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
								                                            AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
								                                            AND T3.DELIVER_STATE = '2')
								                     GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
								                WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
								                      AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
								                GROUP BY T5.ORDER_NUMBER) T7,
								           (SELECT T1.ORDER_NUMBER, SUM(T1.PRODUCT_COUNT) AS RETURN_PRODUCT_COUNT, SUM(T1.PRODUCT_MONEY) AS RETURN_PRODUCT_MONEY
								              FROM TBL_ORDER_RETURN_INFO T1
								             WHERE EXISTS
								             (SELECT 1
								                      FROM TBL_ORDER_INFO T2
								                     WHERE T2.ORDER_NUMBER = T1.ORDER_NUMBER
								                           AND t2.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
								                           AND t2.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
								                           AND T2.ORDER_STATE IN (2, 3, 5, 6) and T2.PAYMENT_STATE = 2)
								                   AND T1.STATE = '2'
								             GROUP BY T1.ORDER_NUMBER) T8
								      WHERE T9.ORDER_NUMBER = T7.ORDER_NUMBER(+)
								            AND T9.ORDER_NUMBER = T8.ORDER_NUMBER(+)
								            AND t9.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
								            AND t9.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
								            AND T9.ORDER_STATE IN (2, 3, 5, 6) and T9.PAYMENT_STATE = 2
								            AND t9.user_name in (<include refid="sql_queryUserName"/>)
								            AND T9.PRODUCT_COUNT - NVL(T7.deliver_product_count,0) - NVL(T8.RETURN_PRODUCT_COUNT,0) > 0) T10 
								GROUP BY T10.USER_NAME
								union all
								SELECT T7.USER_NAME,
									   0 as login_num,
				                	   0 as page_view,
								       0 as all_order_count,
								       0 as all_order_product_count,
								       0 as all_order_product_money,
								       0 as obli_order_count,
								       0 as obli_order_product_count,
								       0 as obli_order_product_money,
								       0 as unship_order_count,
								       0 as unship_order_product_count,
								       0 as unship_order_product_money,
								       COUNT(1) ship_order_count,
								       SUM(T7.deliver_product_count) AS ship_order_product_count,
								       SUM(T7.deliver_product_MONEY) AS ship_order_product_money,
								       0 as refund_order_count,
								       0 as refund_order_product_count,
								       0 as refund_order_product_money,
								       0 as returns_order_count,
								       0 as returns_order_product_count,
								       0 as returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money
								FROM (SELECT T5.USER_NAME,T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY  
								      FROM TBL_ORDER_PRODUCT_SKU T5,
								           (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
								                   T4.PRODUCT_SKU,
								                   SUM (T4.OUT_COUNT) AS deliver_product_count
								              FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
								             WHERE     EXISTS
								                          (SELECT 1
								                             FROM TBL_ORDER_INFO T1
								                            WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
								                                  AND T1.ORDER_STATE IN (2, 3, 5, 6) and T1.PAYMENT_STATE = 2
								                                  AND t1.user_name in (<include refid="sql_queryUserName"/>))
								                   AND EXISTS
								                          (SELECT 1
								                             FROM ${jdbc_user}.TBL_INVOICE_INFO T3
								                            WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
								                                  AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
								                                  AND T3.DELIVER_STATE = '2'
								                                  AND T3.DELIVER_DATE &gt;= TO_DATE (#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
								                                  AND T3.DELIVER_DATE &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss'))
								           GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
								      WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
								            AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
								      GROUP BY T5.USER_NAME,T5.ORDER_NUMBER) T7 
								GROUP BY T7.USER_NAME
								union all
								SELECT T3.USER_NAME,
									   0 as login_num,
				                	   0 as page_view,
								       0 as all_order_count,
								       0 as all_order_product_count,
								       0 as all_order_product_money,
								       0 as obli_order_count,
								       0 as obli_order_product_count,
								       0 as obli_order_product_money,
								       0 as unship_order_count,
								       0 as unship_order_product_count,
								       0 as unship_order_product_money,
								       0 as ship_order_count,
								       0 as ship_order_product_count,
								       0 as ship_order_product_money,
								       COUNT(1) AS refund_order_count,
								       SUM(T3.RETURN_PRODUCT_COUNT) AS refund_order_product_count,
								       SUM(T3.RETURN_PRODUCT_MONEY) AS refund_order_product_money,
								       0 as returns_order_count,
								       0 as returns_order_product_count,
								       0 as returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money
								FROM (SELECT T1.USER_NAME,T1.ORDER_NUMBER, SUM(T1.PRODUCT_COUNT) AS RETURN_PRODUCT_COUNT, SUM(T1.PRODUCT_MONEY) AS RETURN_PRODUCT_MONEY
								        FROM TBL_ORDER_RETURN_INFO T1
								       WHERE EXISTS
								       (SELECT 1
								                FROM TBL_ORDER_INFO T2
								               WHERE T2.ORDER_NUMBER = T1.ORDER_NUMBER
								                     AND t2.user_name in (<include refid="sql_queryUserName"/>)
								                     AND T2.ORDER_STATE IN (2, 3, 5, 6) and T2.PAYMENT_STATE = 2)
								             AND T1.STATE = '2'
								             AND T1.CHECK_DATE &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
								             AND T1.CHECK_DATE &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
								       GROUP BY T1.USER_NAME,T1.ORDER_NUMBER
								      ) T3
								GROUP BY T3.USER_NAME                       
								UNION ALL
								SELECT T1.USER_NAME,
									   0 as login_num,
				                	   0 as page_view,
								       0 as all_order_count,
								       0 as all_order_product_count,
								       0 as all_order_product_money,
								       0 as obli_order_count,
								       0 as obli_order_product_count,
								       0 as obli_order_product_money,
								       0 as unship_order_count,
								       0 as unship_order_product_count,
								       0 as unship_order_product_money,
								       0 as ship_order_count,
								       0 as ship_order_product_count,
								       0 as ship_order_product_money,
								       0 as refund_order_count,
								       0 as refund_order_product_count,
								       0 as refund_order_product_money,
								       COUNT(1) AS returns_order_count,
								       SUM(T1.count) AS returns_order_product_count,
								       SUM(T1.MONEY) AS returns_order_product_money,
								       0 as actual_sale_product_count,
								       0 as actual_sale_product_money      
								  FROM TBL_USER_ACCOUNT_RECORD T1
								 WHERE T1.RECORD_CHANNEL = '退货退款'
								       AND t1.user_name in (<include refid="sql_queryUserName"/>)
								       AND EXISTS
								       (SELECT 1
								                FROM ${jdbc_user}.TBL_NEW_RETURN_ORDER T2
								               WHERE T2.RETURN_NUMBER = T1.TURNOVER_NUMBER
								                     AND T2.STATE = 8
								                     AND T2.REFUND_DATE &gt;= TO_DATE(#{start_date}, 'YYYY-MM-DD HH24:MI:SS')
								                     AND T2.REFUND_DATE &lt;= TO_DATE(#{end_date}, 'YYYY-MM-DD HH24:MI:SS'))
								GROUP BY T1.USER_NAME)
							 group by user_name) a
							 <if test="order_type==1 or order_type==2">
							 	<choose>
							 		<when test="(order_money_min!=null and order_money_min!='') or (order_money_max!=null and order_money_max!='')">
							 		  ,(select user_name from
							 		  (SELECT t1.user_name,sum(t1.product_money) as order_product_money
										  FROM tbl_order_info t1
										 WHERE t1.create_date &gt;= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
										       AND t1.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
										       	 <if test="order_type==1">
												 	AND T1.ORDER_STATE in ( 2, 3, 5, 6) and T1.PAYMENT_STATE = 2
												 </if>
												 <if test="order_type==2">
												 	and t1.order_state = 1
												 </if>
										       GROUP BY T1.USER_NAME)
										       <where>
										       	  <if test="order_money_min!=null and order_money_min!='' ">
										 			and order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
												  </if>
												  <if test="order_money_max!=null and order_money_max!='' ">
										 			and order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
												  </if>
										       </where>) c
							 		</when>
							 	</choose>
				         	</if>
				         	<if test="order_type==3">
				         		<choose>
							 		<when test="(order_money_min!=null and order_money_min!='') or (order_money_max!=null and order_money_max!='')">
				         				,(select user_name from
				         				(SELECT T10.USER_NAME,NVL(SUM(T10.NOT_DELIVER_PRODUCT_MONEY),0) AS unship_order_product_money
										 FROM(SELECT T9.ORDER_NUMBER,
										             T9.USER_NAME,
		                                             T9.PRODUCT_MONEY - NVL(T7.deliver_product_MONEY,0) - NVL(T8.RETURN_PRODUCT_MONEY,0) AS NOT_DELIVER_PRODUCT_MONEY
										      FROM TBL_ORDER_INFO T9,
										           (SELECT T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY  
										                FROM TBL_ORDER_PRODUCT_SKU T5,
										                     (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
										                             T4.PRODUCT_SKU,
										                             SUM (T4.OUT_COUNT) AS deliver_product_count
										                        FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
										                       WHERE     EXISTS
										                                    (SELECT 1
										                                       FROM TBL_ORDER_INFO T1
										                                      WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
										                                            AND t1.create_date &gt;= TO_DATE (#{start_date},'yyyy-mm-dd hh24:mi:ss')
										                                            AND t1.create_date &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
										                                            AND T1.ORDER_STATE IN (2, 3, 5, 6) and T1.PAYMENT_STATE = 2)
										                             AND EXISTS
										                                    (SELECT 1
										                                       FROM ${jdbc_user}.TBL_INVOICE_INFO T3
										                                      WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
										                                            AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
										                                            AND T3.DELIVER_STATE = '2')
										                     GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
										                WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
										                      AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
										                GROUP BY T5.ORDER_NUMBER) T7,
										           (SELECT T1.ORDER_NUMBER, SUM(T1.PRODUCT_COUNT) AS RETURN_PRODUCT_COUNT, SUM(T1.PRODUCT_MONEY) AS RETURN_PRODUCT_MONEY
										              FROM TBL_ORDER_RETURN_INFO T1
										             WHERE EXISTS
										             (SELECT 1
										                      FROM TBL_ORDER_INFO T2
										                     WHERE T2.ORDER_NUMBER = T1.ORDER_NUMBER
										                           AND t2.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
										                           AND t2.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
										                           AND T2.ORDER_STATE IN (2, 3, 5, 6) and T2.PAYMENT_STATE = 2)
										                   AND T1.STATE = '2'
										             GROUP BY T1.ORDER_NUMBER) T8
										      WHERE T9.ORDER_NUMBER = T7.ORDER_NUMBER(+)
										            AND T9.ORDER_NUMBER = T8.ORDER_NUMBER(+)
										            AND t9.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
										            AND t9.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
										            AND T9.ORDER_STATE IN (2, 3, 5, 6) and T9.PAYMENT_STATE = 2
										            AND T9.PRODUCT_COUNT - NVL(T7.deliver_product_count,0) - NVL(T8.RETURN_PRODUCT_COUNT,0) > 0) T10
										GROUP BY T10.USER_NAME)
										<where>
							            	<if test="order_money_min!=null and order_money_min!='' ">
									 			and unship_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
											 </if>
											 <if test="order_money_max!=null and order_money_max!='' ">
									 			and unship_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
											 </if> 
							            </where>
										) c
				         			</when>
				         		</choose>
				         	</if>
				         	<if test="order_type==4">
				         		<choose>
							 		<when test="(order_money_min!=null and order_money_min!='') or (order_money_max!=null and order_money_max!='')">
				         				,(select user_name from
				         				(SELECT T7.USER_NAME,SUM(T7.deliver_product_MONEY) AS ship_order_product_money
											FROM (SELECT T5.USER_NAME,T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY   
											      FROM TBL_ORDER_PRODUCT_SKU T5,
											           (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
											                   T4.PRODUCT_SKU,
											                   SUM (T4.OUT_COUNT) AS deliver_product_count
											              FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
											             WHERE     EXISTS
											                          (SELECT 1
											                             FROM TBL_ORDER_INFO T1
											                            WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
											                                  AND T1.ORDER_STATE IN (2, 3, 5, 6) and T1.PAYMENT_STATE = 2)
											                   AND EXISTS
											                          (SELECT 1
											                             FROM ${jdbc_user}.TBL_INVOICE_INFO T3
											                            WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
											                                  AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
											                                  AND T3.DELIVER_STATE = '2'
											                                  AND T3.DELIVER_DATE &gt;= TO_DATE (#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
											                                  AND T3.DELIVER_DATE &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss'))
											           GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
											      WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
											            AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
											      GROUP BY T5.USER_NAME,T5.ORDER_NUMBER) T7 
											GROUP BY T7.USER_NAME)
											<where>
										      	<if test="order_money_min!=null and order_money_min!='' ">
										 			 and ship_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
												 </if>
												 <if test="order_money_max!=null and order_money_max!='' ">
										 			 and ship_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
												 </if> 
										      </where>
											) c
				         			</when>
				         		</choose>
				         	</if>
				         <where>
						 	<if test="(order_money_min!=null and order_money_min!='') or (order_money_max!=null and order_money_max!='')">
						 		and a.user_name = c.user_name
						 	</if>
						 	<choose>
					        	<when test="order_type==1">
					        		<if test="order_money_min!=null and order_money_min!='' ">
							 			and a.all_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
									</if>
									<if test="order_money_max!=null and order_money_max!='' ">
							 			and a.all_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
									</if>
					        	</when>
					        	<when test="order_type==2">
					        		<if test="order_money_min!=null and order_money_min!='' ">
							 			and a.obli_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
									</if>
									<if test="order_money_max!=null and order_money_max!='' ">
							 			and a.obli_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
									</if>
					        	</when>
					        	<when test="order_type==3">
					        		<if test="order_money_min!=null and order_money_min!='' ">
							 			and a.unship_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
									</if>
									<if test="order_money_max!=null and order_money_max!='' ">
							 			and a.unship_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
									</if>
					        	</when>
					        	<when test="order_type==4">
					        		<if test="order_money_min!=null and order_money_min!='' ">
							 			and a.ship_order_product_money &gt;=#{order_money_min,jdbcType=DOUBLE}
									</if>
									<if test="order_money_max!=null and order_money_max!='' ">
							 			and a.ship_order_product_money &lt;=#{order_money_max,jdbcType=DOUBLE}
									</if>
					        	</when>
					        </choose>
					 	</where>
	</select>
	 <!-- 查询订单明细 （废弃）-->
    <select id="queryOrderRecord" parameterType="java.util.Map" resultType="java.util.Map">
    	select * from (
    		select a.*,rownum rn from (
				     SELECT t1.user_name, t1.order_number, t1.order_state, t1.product_count,t1.product_money, 
				     		(t1.product_money + t1.df_money + t1.logistics_money) as order_money, 
				     		to_char(t1.create_date, 'yyyy-mm-dd hh24:mi:ss') AS create_date
			           FROM tbl_order_info t1
			          WHERE t1.create_date &gt;= to_date(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
			                AND t1.create_date &lt;= to_date(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
			                AND T1.USER_NAME = #{user_name,jdbcType=VARCHAR}
			                 <choose>
			                    <when test="order_state != null and order_state != ''">
			                        AND T1.ORDER_STATE = 1
			                    </when>
			                    <otherwise>
			                    	AND T1.ORDER_STATE in ( 2, 3, 5, 6) and T1.PAYMENT_STATE = 2
			                    </otherwise>
			                </choose>
			          ORDER BY t1.create_date desc
		        ) a where rownum &lt;= #{end_rownum})
			where rn &gt; #{start_rownum}
    </select>
    
    <!-- 明细数量-销售订单（新） -->
    <select id="queryOrderRecordCount_Allorder" parameterType="java.util.Map" resultType="int">
  		SELECT count(*) FROM tbl_order_info t1
	    WHERE payment_state = 2 
        and t1.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
        and t1.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
        AND T1.USER_NAME = #{user_name,jdbcType=VARCHAR}
    </select>
    
    <!-- 明细列表-销售订单（新） -->
    <select id="queryOrderRecordList_Allorder" parameterType="java.util.Map" resultType="java.util.Map">
    	select * from (
    		select a.*,rownum rn from (
    			SELECT t1.user_name, t1.order_number, t1.order_state, t1.product_count,t1.product_money, 
			     		(t1.product_money + t1.df_money + t1.logistics_money) as order_money, 
			     		to_char(t1.payment_date, 'yyyy-mm-dd hh24:mi:ss') AS create_date,
			     		nvl(t2.earnest_money,0) earnest_money
			    FROM tbl_order_info t1,TBL_PRE_ORDER_RELATE t2
			    WHERE t1.order_number = t2.order_number(+) and 
			       payment_state = 2 
			       and t1.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
			       and t1.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
			       AND T1.USER_NAME = #{user_name,jdbcType=VARCHAR}
	  			   ORDER BY t1.payment_date,t1.id desc
        	) a where rownum &lt;= #{end_rownum})
		where rn &gt; #{start_rownum}
    </select>
    
    <!-- 明细数量-预定订单（新） -->
    <select id="queryOrderRecordCount_Preorder" parameterType="java.util.Map" resultType="int">
  		select count(*) from TBL_PRE_ORDER_INFO b
	    WHERE b.PAYMENT_STATE = 2 and b.ORDER_STATE in (2,3,4,5)
        and b.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
        and b.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
        AND b.USER_id = #{user_name,jdbcType=VARCHAR}
    </select>
    
    <!-- 明细列表-预定订单（新） -->
    <select id="queryOrderRecordList_Preorder" parameterType="java.util.Map" resultType="java.util.Map">
    	select * from (
    		select a.*,rownum rn from (
    			SELECT b.user_id user_name, b.order_number, b.order_state, b.product_count,b.product_money, 
			     		b.earnest_money ,
			     		to_char(b.payment_date, 'yyyy-mm-dd hh24:mi:ss') AS create_date
			    FROM TBL_PRE_ORDER_INFO b
			    WHERE b.PAYMENT_STATE = 2 
			    	and b.ORDER_STATE in (2,3,4,5)
			       and b.payment_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
        			and b.payment_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
			       AND b.user_id = #{user_name,jdbcType=VARCHAR}
	  			   ORDER BY b.payment_date desc
        	) a where rownum &lt;= #{end_rownum})
		where rn &gt; #{start_rownum}
    </select>
    
    <!-- 明细数量-未付款（新） -->
    <select id="queryOrderRecordCount_NoPayorder" parameterType="java.util.Map" resultType="int">
  		SELECT count(*) FROM tbl_order_info t1
	    WHERE T1.ORDER_STATE = 1
	    and t1.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
	    and t1.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
	    AND T1.USER_NAME = #{user_name,jdbcType=VARCHAR}
    </select>
    
    <!-- 明细列表-未付款（新） -->
    <select id="queryOrderRecordList_NoPayorder" parameterType="java.util.Map" resultType="java.util.Map">
    	select * from (
    		select a.*,rownum rn from (
    			SELECT t1.user_name, t1.order_number, t1.order_state, t1.product_count,t1.product_money, 
			     		(t1.product_money + t1.df_money + t1.logistics_money) as order_money, 
			     		to_char(t1.create_date, 'yyyy-mm-dd hh24:mi:ss') AS create_date
			    FROM tbl_order_info t1
			    WHERE T1.ORDER_STATE = 1
			       and t1.create_date >= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
			       and t1.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
			       AND T1.USER_NAME = #{user_name,jdbcType=VARCHAR}
	  			   ORDER BY t1.payment_date desc
        	) a where rownum &lt;= #{end_rownum})
		where rn &gt; #{start_rownum}
    </select>
    
    
    <!-- 查询订单列表总数（废弃） -->
    <select id="queryOrderRecordCount" parameterType="java.util.Map" resultType="int">
    	select count(1) from (
			   		SELECT 	t1.order_number
			           FROM tbl_order_info t1
			          WHERE t1.create_date &gt;= to_date(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
			                AND t1.create_date &lt;= to_date(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
			                AND T1.USER_NAME = #{user_name,jdbcType=VARCHAR}
			                <choose>
			                    <when test="order_state != null and order_state != ''">
			                        AND T1.ORDER_STATE = 1
			                    </when>
			                    <otherwise>
			                    	AND T1.ORDER_STATE in ( 2, 3, 5, 6) and T1.PAYMENT_STATE = 2
			                    </otherwise>
			                </choose>
			          )
    </select>

	<!-- 查询未发货订单明细 -->
    <select id="queryUnshipOrderRecord" parameterType="java.util.Map" resultType="java.util.Map">
    	select * from (
    		select a.*,rownum rn from (
			          SELECT   T9.ID, 
						       T9.ORDER_NUMBER,
						       t9.ORDER_STATE,
						       T9.PRODUCT_COUNT,
						       t9.product_money,
						       t9.product_money + t9.df_money + t9.logistics_money as ORDER_MONEY,
						       T9.PRODUCT_COUNT - NVL(T7.deliver_product_count,0) - NVL(T8.RETURN_PRODUCT_COUNT,0) AS NOT_DELIVER_PRODUCT_COUNT,
						       T9.PRODUCT_MONEY - NVL(T7.deliver_product_MONEY,0) - NVL(T8.RETURN_PRODUCT_MONEY,0) AS NOT_DELIVER_PRODUCT_MONEY,
						       TO_CHAR(T9.CREATE_DATE,'yyyy-mm-dd hh24:mi:ss') as CREATE_DATE
						FROM TBL_ORDER_INFO T9,
						     (SELECT T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY  
						          FROM TBL_ORDER_PRODUCT_SKU T5,
						               (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
						                       T4.PRODUCT_SKU,
						                       SUM (T4.OUT_COUNT) AS deliver_product_count
						                  FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
						                 WHERE     EXISTS
						                              (SELECT 1
						                                 FROM TBL_ORDER_INFO T1
						                                WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
						                                      AND t1.create_date &gt;= TO_DATE (#{start_date},'yyyy-mm-dd hh24:mi:ss')
						                                      AND t1.create_date &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
						                                      AND T1.USER_NAME = #{user_name,jdbcType=VARCHAR}
						                                      AND T1.ORDER_STATE IN (2, 3, 5, 6) and T1.PAYMENT_STATE = 2)
						                       AND EXISTS
						                              (SELECT 1
						                                 FROM ${jdbc_user}.TBL_INVOICE_INFO T3
						                                WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
						                                      AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
						                                      AND T3.DELIVER_STATE = '2')
						               GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
						          WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
						                AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
						          GROUP BY T5.ORDER_NUMBER) T7,
						     (SELECT T1.ORDER_NUMBER, SUM(T1.PRODUCT_COUNT) AS RETURN_PRODUCT_COUNT, SUM(T1.PRODUCT_MONEY) AS RETURN_PRODUCT_MONEY
						        FROM TBL_ORDER_RETURN_INFO T1
						       WHERE EXISTS
						       (SELECT 1
						                FROM TBL_ORDER_INFO T2
						               WHERE T2.ORDER_NUMBER = T1.ORDER_NUMBER
						                     AND t2.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
						                     AND t2.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
						                     AND T2.USER_NAME = #{user_name,jdbcType=VARCHAR}
						                     AND T2.ORDER_STATE IN (2, 3, 5, 6) and T2.PAYMENT_STATE = 2)
						             AND T1.STATE = '2'
						       GROUP BY T1.ORDER_NUMBER) T8
						WHERE T9.ORDER_NUMBER = T7.ORDER_NUMBER(+)
						      AND T9.ORDER_NUMBER = T8.ORDER_NUMBER(+)
						      AND t9.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
						      AND t9.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
						      AND T9.USER_NAME = #{user_name,jdbcType=VARCHAR}
						      AND T9.ORDER_STATE IN (2, 3, 5, 6) and T9.PAYMENT_STATE = 2
						      AND T9.PRODUCT_COUNT - NVL(T7.deliver_product_count,0) - NVL(T8.RETURN_PRODUCT_COUNT,0) &gt; 0
						ORDER BY T9.CREATE_DATE desc
		        ) a where rownum &lt;= #{end_rownum})
			where rn &gt; #{start_rownum}
    </select>
    
    <!-- 查询未发货订单列表总数 -->
    <select id="queryUnshipOrderRecordCount" parameterType="java.util.Map" resultType="int">
    	select count(1) from (
			   		SELECT  T9.ORDER_NUMBER,T9.PRODUCT_MONEY - NVL(T7.deliver_product_MONEY,0) - NVL(T8.RETURN_PRODUCT_MONEY,0) AS NOT_DELIVER_PRODUCT_MONEY
						FROM TBL_ORDER_INFO T9,
						     (SELECT T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY  
						          FROM TBL_ORDER_PRODUCT_SKU T5,
						               (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
						                       T4.PRODUCT_SKU,
						                       SUM (T4.OUT_COUNT) AS deliver_product_count
						                  FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
						                 WHERE     EXISTS
						                              (SELECT 1
						                                 FROM TBL_ORDER_INFO T1
						                                WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
						                                      AND t1.create_date &gt;= TO_DATE (#{start_date},'yyyy-mm-dd hh24:mi:ss')
						                                      AND t1.create_date &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
						                                      AND T1.USER_NAME = #{user_name,jdbcType=VARCHAR}
						                                      AND T1.ORDER_STATE IN (2, 3, 5, 6) and T1.PAYMENT_STATE = 2)
						                       AND EXISTS
						                              (SELECT 1
						                                 FROM ${jdbc_user}.TBL_INVOICE_INFO T3
						                                WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
						                                      AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
						                                      AND T3.DELIVER_STATE = '2')
						               GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
						          WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
						                AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
						          GROUP BY T5.ORDER_NUMBER) T7,
						     (SELECT T1.ORDER_NUMBER, SUM(T1.PRODUCT_COUNT) AS RETURN_PRODUCT_COUNT, SUM(T1.PRODUCT_MONEY) AS RETURN_PRODUCT_MONEY
						        FROM TBL_ORDER_RETURN_INFO T1
						       WHERE EXISTS
						       (SELECT 1
						                FROM TBL_ORDER_INFO T2
						               WHERE T2.ORDER_NUMBER = T1.ORDER_NUMBER
						                     AND t2.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
						                     AND t2.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
						                     AND T2.USER_NAME = #{user_name,jdbcType=VARCHAR}
						                     AND T2.ORDER_STATE IN (2, 3, 5, 6) and T2.PAYMENT_STATE = 2)
						             AND T1.STATE = '2'
						       GROUP BY T1.ORDER_NUMBER) T8
						WHERE T9.ORDER_NUMBER = T7.ORDER_NUMBER(+)
						      AND T9.ORDER_NUMBER = T8.ORDER_NUMBER(+)
						      AND t9.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
						      AND t9.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
						      AND T9.USER_NAME = #{user_name,jdbcType=VARCHAR}
						      AND T9.ORDER_STATE IN (2, 3, 5, 6) and T9.PAYMENT_STATE = 2
						      AND T9.PRODUCT_COUNT - NVL(T7.deliver_product_count,0) - NVL(T8.RETURN_PRODUCT_COUNT,0) &gt; 0
			          )
    </select>

	<!-- 查询发货订单明细 -->
    <select id="queryShipOrderRecord" parameterType="java.util.Map" resultType="java.util.Map">
    	select * from (
    		select a.*,rownum rn from (
			          SELECT   T8.ID,
			          		   T8.user_name,
						       T8.order_number, 
						       T8.order_state, 
						       T8.product_count,
						       T8.product_money, 
						       (T8.product_money + T8.df_money + T8.logistics_money) as order_money,
						       to_char(T8.create_date, 'yyyy-mm-dd hh24:mi:ss') AS create_date,
						       T7.deliver_product_count,T7.deliver_product_MONEY
						  FROM TBL_ORDER_INFO T8,
						(SELECT T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY  
						FROM TBL_ORDER_PRODUCT_SKU T5,
						     (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
						             T4.PRODUCT_SKU,
						             SUM (T4.OUT_COUNT) AS deliver_product_count
						        FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
						       WHERE     EXISTS
						                    (SELECT 1
						                       FROM TBL_ORDER_INFO T1
						                      WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
						                            AND T1.USER_NAME = #{user_name,jdbcType=VARCHAR}
						                            AND T1.PAYMENT_STATE = 2)
						             AND EXISTS
						                    (SELECT 1
						                       FROM ${jdbc_user}.TBL_INVOICE_INFO T3
						                      WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
						                            AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
						                            AND T3.DELIVER_STATE = '2'
						                            AND T3.DELIVER_DATE &gt;= TO_DATE (#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
						                            AND T3.DELIVER_DATE &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss'))
						             and t4.out_count>0
						     GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
						WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
						      AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
						GROUP BY T5.ORDER_NUMBER) T7
						WHERE T8.ORDER_NUMBER = T7.ORDER_NUMBER 
						ORDER BY T8.CREATE_DATE desc
		        ) a where rownum &lt;= #{end_rownum})
			where rn &gt; #{start_rownum}
    </select>
    
    <!-- 查询发货订单列表总数 -->
    <select id="queryShipOrderRecordCount" parameterType="java.util.Map" resultType="int">
    	select count(1) from (
			   		SELECT T8.order_number,T7.deliver_product_MONEY
					  FROM TBL_ORDER_INFO T8,
						(SELECT T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY  
						FROM TBL_ORDER_PRODUCT_SKU T5,
						     (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
						             T4.PRODUCT_SKU,
						             SUM (T4.OUT_COUNT) AS deliver_product_count
						        FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
						       WHERE     EXISTS
						                    (SELECT 1
						                       FROM TBL_ORDER_INFO T1
						                      WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
						                            AND T1.USER_NAME = #{user_name,jdbcType=VARCHAR}
						                            AND T1.PAYMENT_STATE = 2)
						             AND EXISTS
						                    (SELECT 1
						                       FROM ${jdbc_user}.TBL_INVOICE_INFO T3
						                      WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
						                            AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
						                            AND T3.DELIVER_STATE = '2'
						                            AND T3.DELIVER_DATE &gt;= TO_DATE (#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
						                            AND T3.DELIVER_DATE &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss'))
						             and t4.out_count>0
						     GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
						WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
						      AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
						GROUP BY T5.ORDER_NUMBER) T7
						WHERE T8.ORDER_NUMBER = T7.ORDER_NUMBER 
						ORDER BY T8.ID
			          )
    </select>

 	<!-- 查询退款单明细 -->
    <select id="queryRefundOrderRecord" parameterType="java.util.Map" resultType="java.util.Map">
    	select * from (
    		select a.*,rownum rn from (
			          SELECT   T4.ID,
						       T4.user_name,
						       T4.order_number,
						       T4.order_state,
						       T4.product_count,
						       T4.product_money,
						       (t4.product_money + t4.df_money + t4.logistics_money) as order_money,
						       to_char(T4.create_date, 'yyyy-mm-dd hh24:mi:ss') AS create_date,
						       T3.RETURN_PRODUCT_COUNT,
						       T3.RETURN_PRODUCT_MONEY
						  FROM TBL_ORDER_INFO T4,
						      (SELECT T1.ORDER_NUMBER, SUM(T1.PRODUCT_COUNT) AS RETURN_PRODUCT_COUNT, SUM(T1.RETURN_TOTAL_MONEY) AS RETURN_PRODUCT_MONEY
						        FROM TBL_ORDER_RETURN_INFO T1
						       WHERE EXISTS
						       (SELECT 1
						                FROM TBL_ORDER_INFO T2
						               WHERE T2.ORDER_NUMBER = T1.ORDER_NUMBER
						                     AND T2.USER_NAME = #{user_name,jdbcType=VARCHAR}
						                     )
						             AND T1.STATE = '2'
						             AND T1.CHECK_DATE &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
						             AND T1.CHECK_DATE &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
						       GROUP BY T1.ORDER_NUMBER
						      ) T3
						WHERE T4.ORDER_NUMBER = T3.ORDER_NUMBER
						ORDER BY T4.CREATE_DATE desc
		        ) a where rownum &lt;= #{end_rownum})
			where rn &gt; #{start_rownum}
    </select>
    
    <!-- 查询退款单列表总数 -->
    <select id="queryRefundOrderRecordCount" parameterType="java.util.Map" resultType="int">
    	select count(1) from (
			   		SELECT  T4.order_number
					  FROM TBL_ORDER_INFO T4,
						      (SELECT T1.ORDER_NUMBER, SUM(T1.PRODUCT_COUNT) AS RETURN_PRODUCT_COUNT, SUM(T1.PRODUCT_MONEY) AS RETURN_PRODUCT_MONEY
						        FROM TBL_ORDER_RETURN_INFO T1
						       WHERE EXISTS
						       (SELECT 1
						                FROM TBL_ORDER_INFO T2
						               WHERE T2.ORDER_NUMBER = T1.ORDER_NUMBER
						                     AND T2.USER_NAME = #{user_name,jdbcType=VARCHAR}
						                     AND T2.PAYMENT_STATE = 2)
						             AND T1.STATE = '2'
						             AND T1.CHECK_DATE &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
						             AND T1.CHECK_DATE &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
						       GROUP BY T1.ORDER_NUMBER
						      ) T3
						WHERE T4.ORDER_NUMBER = T3.ORDER_NUMBER
						ORDER BY T4.ID
			          )
    </select>

	<!-- 查询退货单明细 -->
    <select id="queryReturnOrderRecord" parameterType="java.util.Map" resultType="java.util.Map">
    	select * from (
    		select a.*,rownum rn from (
			          	select * from (
					   		select b.user_name,b.RETURN_NUMBER,nvl(sum(RETURN_MONEY),0)  returns_order_product_money,nvl(sum(RETURN_NUM),0) returns_order_product_count,to_char(b.REFUND_DATE, 'yyyy-mm-dd hh24:mi:ss') returns_date
				            from ${jdbc_user}.tbl_new_return_confirm a,${jdbc_user}.tbl_new_return_order b,tbl_product_sku c
				            where a.product_sku = c.ID and a.RETURN_NUMBER = b.RETURN_NUMBER and b.state = '8' and a.RETURN_FLAG = 1
				            AND b.REFUND_DATE &gt;= TO_DATE(#{start_date}, 'YYYY-MM-DD HH24:MI:SS')
				            AND b.REFUND_DATE &lt;= TO_DATE(#{end_date}, 'YYYY-MM-DD HH24:MI:SS')
				            and b.user_name = #{user_name,jdbcType=VARCHAR}
				            group by b.user_name,b.RETURN_NUMBER,b.REFUND_DATE
					   ) order by returns_date desc,RETURN_NUMBER
		        ) a where rownum &lt;= #{end_rownum})
			where rn &gt; #{start_rownum}
    </select>
    
    <!-- 查询退货单列表总数 -->
    <select id="queryReturnOrderRecordCount" parameterType="java.util.Map" resultType="int">
    	select count(1) from (
	   		select b.RETURN_NUMBER
            from ${jdbc_user}.tbl_new_return_confirm a,${jdbc_user}.tbl_new_return_order b,tbl_product_sku c
            where a.product_sku = c.ID and a.RETURN_NUMBER = b.RETURN_NUMBER and b.state = '8' and a.RETURN_FLAG = 1
            AND b.REFUND_DATE &gt;= TO_DATE(#{start_date}, 'YYYY-MM-DD HH24:MI:SS')
            AND b.REFUND_DATE &lt;= TO_DATE(#{end_date}, 'YYYY-MM-DD HH24:MI:SS')
            and b.user_name = #{user_name,jdbcType=VARCHAR}
            group by b.RETURN_NUMBER
		)
    </select>
    
    <select id="queryBrowseRecord" parameterType="java.util.Map" resultType="java.util.Map">
	    select * from (
		    select a.*,rownum rn from (
		        SELECT page_type,page_name,page_url,to_char(create_date, 'yyyy-mm-dd hh24:mi:ss') create_date
		        FROM TBL_USER_LOG_INFO
		        <where>
		        	create_user_name = #{user_name,jdbcType=VARCHAR}
		        	<choose>
		                <when test="queryType == 1 ">
		                	and page_type = '登录'
		                </when>
		                <otherwise>
		                    and page_type != '登录'
		                 </otherwise>
		         	</choose>
		         	and create_date &gt;= to_date(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
		         	and create_date &lt;= to_date(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
		        </where>
		        order by create_date desc
		        ) a where rownum &lt;= #{end_rownum})
			where rn &gt; #{start_rownum}
    </select>
    <!-- 查询浏览记录和登录次数列表总数 -->
    <select id="queryBrowseRecordCount" parameterType="java.util.Map" resultType="int">
    	SELECT count(1)
		        FROM TBL_USER_LOG_INFO
		        <where>
		        	create_user_name = #{user_name,jdbcType=VARCHAR}
		        	<choose>
		                <when test="queryType == 1 ">
		                	and page_type = '登录'
		                </when>
		                <otherwise>
		                    and page_type != '登录'
		                 </otherwise>
		         	</choose>
		         	and create_date &gt;= to_date(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
		         	and create_date &lt;= to_date(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
		        </where>
    </select>
	<!-- 更新用户校验码 -->
	<update id="updateUserAccountCode" statementType="CALLABLE" parameterType="long">
		<![CDATA[
			call PRO_UPDATE_USER_ACCOUNT_CODE(
					#{user_id,mode=IN,jdbcType=INTEGER}
				)
			]]>
	</update>
	<!-- 查询用户账户额度信息 -->
	<select id="queryBankAccount" parameterType="long" resultType="java.util.Map">
		SELECT USER_ID,CREDIT_MONEY,CREDIT_MONEY_BALANCE,CREDIT_MONEY_USE from TBL_BANK_ACCOUNT where USER_ID = #{user_id,jdbcType=INTEGER}
	</select>
	<!-- 取消月结 -->
	<update id="cancelMonthlyStatement" parameterType="long">
		update TBL_BANK_ACCOUNT set CREDIT_MONEY = 0,CREDIT_MONEY_BALANCE=0,CREDIT_MONEY_USE=0 where USER_ID = #{user_id,jdbcType=INTEGER}
	</update>
	<!-- 更新会员余额及冻结余额 add wanghai -->
	<update id="updateAccountAndFrozenBalance" parameterType="java.util.Map">
		update TBL_BANK_ACCOUNT set account_balance = nvl(account_balance, 0) + #{money,jdbcType=INTEGER},
			frozen_balance = nvl(frozen_balance, 0) + #{money,jdbcType=INTEGER}
		where USER_ID = #{user_id,jdbcType=INTEGER}
	</update>
	<!-- 更新会员余额 add wanghai -->
	<update id="updateAccountBalance" parameterType="java.util.Map">
		update TBL_BANK_ACCOUNT set account_balance = nvl(account_balance, 0) + #{money,jdbcType=INTEGER}
		where USER_ID = #{user_id,jdbcType=INTEGER}
	</update>
	<!-- 更新授信余额和已使用额度 -->
	<update id="updateCreditBalanceAndUse" parameterType="java.util.Map">
		update TBL_BANK_ACCOUNT set CREDIT_MONEY_BALANCE = nvl(CREDIT_MONEY_BALANCE, 0) + #{money,jdbcType=INTEGER},
		CREDIT_MONEY_USE = nvl(CREDIT_MONEY_USE, 0) - #{money,jdbcType=INTEGER} where USER_ID = #{user_id,jdbcType=INTEGER}
	</update>
		<!--获取会员门店管理总数 -->
	<select id="queryMemberStoreInfoCount" parameterType="java.util.Map" resultType="int">
		  select count(1) 
		  	from TBL_USER_STORE_ADDRESS a
		  		left join tbl_user_info d on a.user_id=d.id
		  		<where> 
			  		<if test="user_id !=null and user_id !=''">
						 a.user_id = #{user_id,jdbcType=INTEGER}
					</if>
			  		<if test="store_name !=null and store_name !=''">
						and a.store_name like '%'||#{store_name}||'%'
					</if>
					<if test="store_address !=null and store_address !=''">
						and a.store_address like '%'||#{store_address}||'%'
					</if>
					<if test="login_name !=null and login_name !=''">
						and d.login_name like '%'||#{login_name}||'%'
					</if>
					<if test="ywjl_user_id != null and ywjl_user_id != '' ">
					    and	d.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
					</if>
					<if test="md_id != null and md_id != 0 ">
					    and	d.store_id = #{md_id,jdbcType=INTEGER}
					</if>
					<if test="ywy_user_id != null and ywy_user_id != '' ">
					    and	d.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
					</if>
					<if test="start_date!=null and start_date!=''">
			      		and a.create_date &gt;= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
			        </if>
			        <if test="end_date!=null and end_date!=''">
			       		and a.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
			        </if>
					<if test="approval_state != null">
						and a.approval_state IN
			                <foreach item="item" collection="approval_state" open="(" separator="," close=")">
								#{item}
							</foreach>
					</if>
					<!-- 添加门店是否被禁用条件 -->
					<if test="user_state != null">
						and d.user_state IN 
							<foreach item="item" collection="user_state" open="(" separator="," close=")">
								#{item}
							</foreach>
					</if>
					<if test="public_user_type != null and public_user_type == 2">
			            and EXISTS (SELECT 1 FROM TBL_SYS_USER_STORE TSUS WHERE TSUS.STORE_ID = d.STORE_ID AND TSUS.USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 3">
			            and d.referee_user_id = #{public_user_id,jdbcType=INTEGER}
			        </if>
			        <if test="public_user_type != null and public_user_type == 4">
			            and d.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
			        </if>
			        <if test="public_user_type != null and public_user_type == 5">
			            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = d.STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 6">
			            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = d.STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 9">
			            and EXISTS(SELECT 1 
			                         FROM TBL_SYS_USER_INFO TSUI
			                        WHERE TSUI.USER_TYPE = 4
			            				  AND TSUI.ORGANIZATION_ID IN (
											  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
											  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
								              )
								          AND TSUI.id = d.market_supervision_user_id)
			        </if>
				</where>
	</select>
	
	<!-- 分页获取会员门店管理列表 -->
	<select id="queryMemberStoreInfoList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select * from (
		select b.*, rownum rn from (
			select a.*,to_char(a.create_date,'yyyy-mm-dd hh24:mi:ss')apply_date,b.user_realname apply_user_name,
			c.user_realname approval_user_name,to_char(a.approval_date,'yyyy-mm-dd hh24:mi:ss')approval_dates, 
			e.name||f.name||g.name address,h.user_realname referee_user_realname,i.user_realname market_supervision_user_realna,
			j.store_name user_store_name from
				TBL_USER_STORE_ADDRESS a 
				left join tbl_sys_user_info b on a.create_user_id=b.id
				left join tbl_sys_user_info c on a.approval_user_id=c.id
				left join tbl_user_info d on a.user_id=d.id
				left join tbl_dic_region e on a.province=e.id
				left join tbl_dic_region f on a.city=f.id
				left join tbl_dic_region g on a.county=g.id
				left join tbl_sys_user_info h on d.referee_user_id=h.id
				left join tbl_sys_user_info i on d.market_supervision_user_id=i.id
				left join tbl_store_info j on d.store_id=j.id
				<where> 
			  		<if test="user_id !=null and user_id !=''">
						 a.user_id = #{user_id,jdbcType=INTEGER}
					</if>
			  		<if test="store_name !=null and store_name !=''">
						and a.store_name like '%'||#{store_name}||'%'
					</if>
					<if test="store_address !=null and store_address !=''">
						and a.store_address like '%'||#{store_address}||'%'
					</if>
					<if test="login_name !=null and login_name !=''">
						and d.login_name like '%'||#{login_name}||'%'
					</if>
					<if test="ywjl_user_id != null and ywjl_user_id != '' ">
					    and	d.market_supervision_user_id = #{ywjl_user_id,jdbcType=VARCHAR}
					</if>
					<if test="md_id != null and md_id != 0 ">
					    and	d.store_id = #{md_id,jdbcType=INTEGER}
					</if>
					<if test="ywy_user_id != null and ywy_user_id != '' ">
					    and	d.referee_user_id = #{ywy_user_id,jdbcType=VARCHAR}
					</if>
					<if test="start_date!=null and start_date!=''">
			      		and a.create_date &gt;= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
			        </if>
			        <if test="end_date!=null and end_date!=''">
			       		and a.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
			        </if>
					<if test="approval_state != null">
						and a.approval_state IN
			                <foreach item="item" collection="approval_state" open="(" separator="," close=")">
								#{item}
							</foreach>
					</if>
					<!-- 添加是否禁用查询条件 -->
					<if test="user_state != null">
						and d.user_state IN 
							<foreach item="item" collection="user_state" open="(" separator="," close=")">
								#{item}
							</foreach>
					</if>
					<if test="public_user_type != null and public_user_type == 2">
			            and EXISTS (SELECT 1 FROM TBL_SYS_USER_STORE TSUS WHERE TSUS.STORE_ID = d.STORE_ID AND TSUS.USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 3">
			            and d.referee_user_id = #{public_user_id,jdbcType=INTEGER}
			        </if>
			        <if test="public_user_type != null and public_user_type == 4">
			            and d.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
			        </if>
			        <if test="public_user_type != null and public_user_type == 5">
			            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = d.STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 6">
			            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = d.STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
			        </if>
			        <if test="public_user_type != null and public_user_type == 9">
			            and EXISTS(SELECT 1 
			                         FROM TBL_SYS_USER_INFO TSUI
			                        WHERE TSUI.USER_TYPE = 4
			            				  AND TSUI.ORGANIZATION_ID IN (
											  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
											  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
								              )
								          AND TSUI.id = d.market_supervision_user_id)
			        </if>
				</where>
			order by a.approval_state,a.create_date desc,a.user_id
		) b where
		rownum &lt;= #{end_rownum})
		where rn &gt; #{start_rownum}
	</select>
	
	<!-- 新增会员门店管理 -->
	<insert id="insertMemberStore" parameterType="java.util.HashMap">
		<selectKey keyProperty="id" resultType="int" order="BEFORE"> 
        	SELECT SEQ_USER_STORE_ADDRESS.nextval FROM DUAL
    	</selectKey>
    	insert into TBL_USER_STORE_ADDRESS
		(
		ID,
		USER_ID,
		LOGIN_NAME,
		USER_MANAGE_NAME,
		STORE_NAME,
		STORE_ADDRESS,
		MANAGEMENT_ADDRESS,
	    LONGITUDE,
	    LATITUDE,
	    CREATE_DATE,
	    APPROVAL_DATE,
	    PROVINCE,
	    CITY,
	    COUNTY,
	    APPROVAL_STATE,
	    CREATE_USER_ID,
	    APPROVAL_USER_ID,
	    REMARK,
	    USER_STORE_RESOURCE
		)
		values
		(
		#{id,jdbcType=INTEGER},
		#{user_id,jdbcType=INTEGER},
		#{login_name,jdbcType=VARCHAR},
		#{user_manage_name,jdbcType=VARCHAR},
		#{store_name,jdbcType=VARCHAR},
		#{store_address,jdbcType=VARCHAR},
		#{management_address,jdbcType=VARCHAR},
		#{longitude,jdbcType=INTEGER},
		#{latitude,jdbcType=INTEGER},
		sysdate,
		TO_DATE(#{approval_date,jdbcType=VARCHAR},'YYYY-MM-DD HH24:MI:SS'),
		#{province,jdbcType=INTEGER},
		#{city,jdbcType=INTEGER},
		#{area,jdbcType=INTEGER},
		#{approval_state,jdbcType=CHAR},
		#{public_user_id,jdbcType=INTEGER},
		#{approval_user_id,jdbcType=INTEGER},
		#{remark,jdbcType=VARCHAR},
		#{user_store_resource,jdbcType=CHAR})
	</insert>
	
	<!--获取会员门店管理详情 -->
	<select id="queryMemberStoreDetail" parameterType="java.util.Map" resultType="java.util.Map">
		  select a.* ,b.user_name apply_user_name,to_char(a.create_date,'yyyy-mm-dd hh24:mi:ss')apply_date,
		  c.name||d.name||e.name||a.store_address address,
		  c.name||d.name||e.name||a.management_address location_address
		  	from TBL_USER_STORE_ADDRESS  a 
		  		left join tbl_sys_user_info b on a.create_user_id=b.id
		  		left join tbl_dic_region c on a.province=c.id
				left join tbl_dic_region d on a.city=d.id
				left join tbl_dic_region e on a.county=e.id
		  		where a.ID = #{id,jdbcType=INTEGER}
	</select>
	
	<!--会员门店审批-->
	<update id="updateMemberStoreApprovalState" parameterType="java.util.Map">
		  update TBL_USER_STORE_ADDRESS 
		  	<set>
		  		 <if test="approval_state !=null and approval_state != ''">
				      approval_state=#{approval_state,jdbcType=VARCHAR},
				</if>
				<if test="rejected_reason !=null and rejected_reason != ''">
				      rejected_reason=#{rejected_reason,jdbcType=VARCHAR},
				</if>
				approval_user_id =#{public_user_id,jdbcType=INTEGER},
				approval_date = sysdate
		  	</set>
		  	where id=#{id,jdbcType=INTEGER}
	</update>
	
	<!--会员门店编辑-->
	<update id="memberStoreEdit" parameterType="java.util.Map">
		  update TBL_USER_STORE_ADDRESS 
		  	<set>
		  		<if test="edit_flag !=null and edit_flag != ''">
				      APPROVAL_STATE='0',
				      CREATE_DATE=SYSDATE,
				</if>
		  		<if test="STORE_NAME !=null and STORE_NAME != ''">
				      STORE_NAME=#{STORE_NAME,jdbcType=VARCHAR},
				</if>
				<if test="STORE_ADDRESS !=null and STORE_ADDRESS != ''">
				      STORE_ADDRESS=#{STORE_ADDRESS,jdbcType=VARCHAR},
				</if>
				<if test="MANAGEMENT_ADDRESS !=null and MANAGEMENT_ADDRESS != ''">
				      MANAGEMENT_ADDRESS=#{MANAGEMENT_ADDRESS,jdbcType=VARCHAR},
				</if>
				<if test="REMARK !=null and REMARK != ''">
				      REMARK=#{REMARK,jdbcType=VARCHAR},
				</if>
				<if test="longitude !=null and longitude != 0">
				      longitude=#{longitude,jdbcType=INTEGER},
				</if>
				<if test="latitude !=null and latitude != 0">
				      latitude=#{latitude,jdbcType=INTEGER},
				</if>
				<if test="province !=null and province != ''">
				      province=#{province,jdbcType=INTEGER},
				</if>
				<if test="city !=null and city != ''">
				      city=#{city,jdbcType=INTEGER},
				</if>
				<if test="area !=null and area != ''">
				      county=#{area,jdbcType=INTEGER}
				</if>
		  	</set>
		  	where id=#{id,jdbcType=INTEGER}
	</update>
	
	<!--会员门店启用禁用-->
	<update id="memberStoreUpdateState" parameterType="java.util.Map">
		  update tbl_user_store_address 
		  	set user_store_state=#{user_store_state,jdbcType=INTEGER}
		  where id=#{user_store_id,jdbcType=INTEGER}
	</update>
	
	<!--根据用户id查询会员门店地址数量 -->
	<select id="queryUserStoreAddressByUserId" parameterType="long" resultType="int">
		 select count(1) from tbl_user_store_address where user_id=#{user_id,jdbcType=INTEGER}
	</select>
	
	<!--查询是否有重复的会员门店名称 -->
	<select id="queryMemberStoreNameCount" parameterType="string" resultType="int">
		 select count(1) from tbl_user_store_address where store_name=#{store_name,jdbcType=VARCHAR}
	</select>
	
	<!-- 更新会员业务归属-->
	<update id="updateMemberBussiness" parameterType="java.util.Map">
		update tbl_user_info 
		<set>
			<if test="referee_user_id !=null and referee_user_id !=''">
				referee_user_id =#{referee_user_id,jdbcType=INTEGER},
			</if>
			<if test="store_id !=null and store_id !=''">
				store_id =#{store_id,jdbcType=INTEGER},
			</if>
			<if test="market_supervision_user_id !=null and market_supervision_user_id !=''">
				market_supervision_user_id =#{market_supervision_user_id,jdbcType=INTEGER},
			</if>
			<if test="site_id !=null and site_id !=''">
				site_id =#{site_id,jdbcType=INTEGER},
			</if>
			<if test="referee_user_name !=null and referee_user_name !=''">
				referee_user_realname =#{referee_user_name,jdbcType=VARCHAR},
			</if>
			<if test="store_name !=null and store_name !=''">
				store_name =#{store_name,jdbcType=VARCHAR},
			</if>
			<if test="market_supervision_user_realna !=null and market_supervision_user_realna !=''">
				market_supervision_user_realna =#{market_supervision_user_realna,jdbcType=INTEGER}
			</if>
		</set>
		 where id = #{id,jdbcType=INTEGER}
	</update>
	
	
	<!--查询是否有重复的会员门店名称 -->
	<select id="queryUserDiscountCount" parameterType="java.util.Map" resultType="int">
		 select count(1) from tbl_user_discount_product 
		 	where apply_number=#{apply_number,jdbcType=VARCHAR}
		 	and user_name=#{user_name,jdbcType=VARCHAR}
	</select>
	
	<!-- 更新特殊价格 -->
    <update id="updateUserDiscount" parameterType="java.util.Map">
    	UPDATE tbl_user_discount_product
    	<set>
			    discount=#{discount,jdbcType=INTEGER},
			<if test="begin_time !=null and begin_time != ''">
			     begin_time=to_date(#{begin_time,jdbcType=DATE},'YYYY-MM-DD HH24:MI:SS'),
			</if>
			<if test="end_time !=null and end_time != ''">
			      end_time=to_date(#{end_time,jdbcType=DATE},'YYYY-MM-DD HH24:MI:SS')
			</if>
    	</set>
		where apply_number = #{apply_number,jdbcType=VARCHAR}
		and   user_name=#{user_name,jdbcType=VARCHAR}
		and   product_itemnumber=#{product_itemnumber,jdbcType=VARCHAR}
		and   product_specs=#{product_specs,jdbcType=VARCHAR}
		and   product_color=#{product_color,jdbcType=VARCHAR}
    </update>
	
	<!-- 变更会员业务经理【门店业务经理编辑时切换】 -->
    <update id="updateUserMSUIBecauseStoreMangerChange" parameterType="java.util.Map">
    	UPDATE TBL_USER_INFO 
    	   SET MARKET_SUPERVISION_USER_ID = #{manager_user_id,jdbcType=INTEGER},
    	   	   MARKET_SUPERVISION_USER_REALNA = (select USER_REALNAME from TBL_SYS_USER_INFO where ID = #{manager_user_id,jdbcType=INTEGER})
		where STORE_ID = #{store_id,jdbcType=INTEGER}
    </update>
    
    <!-- 变更会员业务经理【门店业务经理编辑时切换】apply -->
    <update id="updateUserApplyMSUIBecauseStoreMangerChange" parameterType="java.util.Map">
    	UPDATE TBL_USER_INFO_APPLY 
    	   SET MARKET_SUPERVISION_USER_ID = #{manager_user_id,jdbcType=INTEGER},
    	   	   MARKET_SUPERVISION_USER_REALNA = (select USER_REALNAME from TBL_SYS_USER_INFO where ID = #{manager_user_id,jdbcType=INTEGER})
		where STORE_ID = #{store_id,jdbcType=INTEGER}
    </update>
    
    
     <!-- 会员政策期设置 -->
    <update id="memberUpdatePolicyPeriod" parameterType="java.util.Map">
    	update tbl_user_info set user_policy_period=#{user_policy_period,jdbcType=INTEGER}
    	where id=#{id,jdbcType=INTEGER}
    </update>
    
    <!--会员状态日志记录-->
	<insert id="insertMemberStateLogs" parameterType="java.util.Map">
		insert into tbl_member_state_logs
		(
			id,
			user_id,
			state,
			remark,
			voucher_img_url,
			create_user_id,
			create_date
		)
		values
		(
			seq_member_state_logs.nextval,
			#{user_id,jdbcType=INTEGER},
			#{state,jdbcType=CHAR},
			#{remark,jdbcType=VARCHAR},
			#{voucher_img_url,jdbcType=VARCHAR},
			#{public_user_id,jdbcType=INTEGER},
			sysdate
		)
	</insert>
	
	<!-- 会员状态日志列表 -->
	 <select id="queryMemberStateLogsList" parameterType="java.util.Map" resultType="java.util.Map">
	    select * from (
		    select a.*,
		    (select user_realname from tbl_sys_user_info tsui where tsui.id=a.create_user_id) operator_name,
		    (select login_name from tbl_user_info tui where tui.id=a.user_id) login_name,
		    (select user_manage_name from tbl_user_info tui where tui.id=a.user_id) user_manage_name,
		    rownum rn from (
		        select id,user_id,remark,voucher_img_url,state,create_user_id,
		        to_char(create_date, 'yyyy-mm-dd hh24:mi:ss') create_date
		        from tbl_member_state_logs tmsl
		        where user_id=#{user_id,jdbcType=INTEGER}
		        and exists(
		        	select 1 from tbl_sys_user_info tsui where tsui.id=tmsl.create_user_id and  tsui.user_realname like '%'||#{user_realname,jdbcType=VARCHAR}||'%'
		        )
		        order by create_date desc
		        ) a where rownum &lt;= #{end_rownum})
			where rn &gt; #{start_rownum}
    </select>
    <!-- 查询浏览记录和登录次数列表总数 -->
    <select id="queryMemberStateLogsCount" parameterType="java.util.Map" resultType="int">
    	select count(1)
		        from tbl_member_state_logs tmsl
		       where tmsl.user_id=#{user_id,jdbcType=INTEGER}
		       and exists(
		        	select 1 from tbl_sys_user_info tsui where tsui.id=tmsl.create_user_id and tsui.user_realname like '%'||#{user_realname,jdbcType=VARCHAR}||'%'
		        )
    </select>
    
     <!--查询所有订单在某个区间内的会员-->
    <select id="queryAllOrderMember" parameterType="java.util.Map" resultType="string">
    	 SELECT t1.user_name
		  FROM tbl_order_info t1
		 WHERE t1.create_date &gt;= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		       AND t1.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		       GROUP BY  T1.USER_NAME
    </select>
    
     <!-- 查询待付款订单在某个区间内的会员 -->
    <select id="queryObliOrderMember" parameterType="java.util.Map" resultType="string">
    	 SELECT t1.user_name
		  FROM tbl_order_info t1
		 WHERE t1.create_date &gt;= to_date(#{start_date},'yyyy-mm-dd hh24:mi:ss')
		       AND t1.create_date &lt;= to_date(#{end_date},'yyyy-mm-dd hh24:mi:ss')
		       AND T1.ORDER_STATE = 1
		       GROUP BY  T1.USER_NAME
    </select>
    
     <!--  查询未发订单在某个区间内的会员-->
    <select id="queryUnshipOrderMember" parameterType="java.util.Map" resultType="string">
    	SELECT T10.USER_NAME
		 FROM(SELECT T9.ORDER_NUMBER,
		             T9.USER_NAME,
		             T9.PRODUCT_COUNT - NVL(T7.deliver_product_count,0) - NVL(T8.RETURN_PRODUCT_COUNT,0) AS NOT_DELIVER_PRODUCT_COUNT,
		             T9.PRODUCT_MONEY - NVL(T7.deliver_product_MONEY,0) - NVL(T8.RETURN_PRODUCT_MONEY,0) AS NOT_DELIVER_PRODUCT_MONEY
		      FROM TBL_ORDER_INFO T9,
		           (SELECT T5.ORDER_NUMBER,SUM(T6.deliver_product_count) AS deliver_product_count,SUM(T6.deliver_product_count * T5.PRODUCT_UNIT_PRICE) AS deliver_product_MONEY  
		                FROM TBL_ORDER_PRODUCT_SKU T5,
		                     (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
		                             T4.PRODUCT_SKU,
		                             SUM (T4.OUT_COUNT) AS deliver_product_count
		                        FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
		                       WHERE     EXISTS
		                                    (SELECT 1
		                                       FROM TBL_ORDER_INFO T1
		                                      WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
		                                            AND t1.create_date &gt;= TO_DATE (#{start_date},'yyyy-mm-dd hh24:mi:ss')
		                                            AND t1.create_date &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
		                                            AND T1.ORDER_STATE IN (2, 3, 5, 6) and T1.PAYMENT_STATE = 2)
		                             AND EXISTS
		                                    (SELECT 1
		                                       FROM ${jdbc_user}.TBL_INVOICE_INFO T3
		                                      WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
		                                            AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
		                                            AND T3.DELIVER_STATE = '2')
		                     GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
		                WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
		                      AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
		                GROUP BY T5.ORDER_NUMBER) T7,
		           (SELECT T1.ORDER_NUMBER, SUM(T1.PRODUCT_COUNT) AS RETURN_PRODUCT_COUNT, SUM(T1.PRODUCT_MONEY) AS RETURN_PRODUCT_MONEY
		              FROM TBL_ORDER_RETURN_INFO T1
		             WHERE EXISTS
		             (SELECT 1
		                      FROM TBL_ORDER_INFO T2
		                     WHERE T2.ORDER_NUMBER = T1.ORDER_NUMBER
		                           AND t2.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
		                           AND t2.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
		                           AND T2.ORDER_STATE IN (2, 3, 5, 6) and T2.PAYMENT_STATE = 2)
		                   AND T1.STATE = '2'
		             GROUP BY T1.ORDER_NUMBER) T8
		      WHERE T9.ORDER_NUMBER = T7.ORDER_NUMBER(+)
		            AND T9.ORDER_NUMBER = T8.ORDER_NUMBER(+)
		            AND t9.create_date &gt;= TO_DATE(#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
		            AND t9.create_date &lt;= TO_DATE(#{end_date}, 'yyyy-mm-dd hh24:mi:ss')
		            AND T9.ORDER_STATE IN (2, 3, 5, 6) and T9.PAYMENT_STATE = 2
		            AND T9.PRODUCT_COUNT - NVL(T7.deliver_product_count,0) - NVL(T8.RETURN_PRODUCT_COUNT,0) > 0) T10 
		GROUP BY T10.USER_NAME
    </select>
    
     <!--  查询已发订单在某个区间内的会员-->
    <select id="queryShipOrderMember" parameterType="java.util.Map" resultType="string">
    	SELECT T7.USER_NAME
		FROM (SELECT T5.USER_NAME  
		      FROM TBL_ORDER_PRODUCT_SKU T5,
		           (SELECT T4.ORDER_NUMBER_PLATFORM AS ORDER_NUMBER,
		                   T4.PRODUCT_SKU
		              FROM ${jdbc_user}.TBL_INVOICE_PRODUCT t4
		             WHERE     EXISTS
		                          (SELECT 1
		                             FROM TBL_ORDER_INFO T1
		                            WHERE     T1.ORDER_NUMBER = T4.ORDER_NUMBER_PLATFORM
		                                  AND T1.ORDER_STATE IN (2, 3, 5))
		                   AND EXISTS
		                          (SELECT 1
		                             FROM ${jdbc_user}.TBL_INVOICE_INFO T3
		                            WHERE     T3.INVOICE_NUMBER = T3.INVOICE_NUMBER
		                                  AND T3.INVOICE_NUMBER = T4.INVOICE_NUMBER
		                                  AND T3.DELIVER_STATE = '2'
		                                  AND T3.DELIVER_DATE &gt;= TO_DATE (#{start_date}, 'yyyy-mm-dd hh24:mi:ss')
		                                  AND T3.DELIVER_DATE &lt;= TO_DATE (#{end_date}, 'yyyy-mm-dd hh24:mi:ss'))
		           GROUP BY T4.ORDER_NUMBER_PLATFORM, T4.PRODUCT_SKU) T6
		      WHERE T5.ORDER_NUMBER = T6.ORDER_NUMBER
		            AND T5.PRODUCT_SKU = T6.PRODUCT_SKU
		      GROUP BY T5.USER_NAME,T5.ORDER_NUMBER) T7 
		GROUP BY T7.USER_NAME
    </select>
    
    <!-- 会员认证审批列表 -->
	 <select id="queryMemberCertificationApprovalList" parameterType="java.util.Map" resultType="java.util.Map">
	    select a.*,
	    	(select login_name from tbl_user_info T where t.id=a.user_id) as login_name,
	    	(select user_manage_name from tbl_user_info T where t.id=a.user_id) as user_manage_name,
	    	(select user_realname from tbl_sys_user_info T where t.id=a.approval_user_id) as approval_manage_name,
	    	(select name from tbl_dic_region where id = a.user_company_address_province)
          		||(select name from tbl_dic_region where id = a.user_company_address_city )
           		||(select name from tbl_dic_region where id = a.user_company_address_county)
           		||a.user_company_address_deails as address
		     from (
			    select t.*,
			    rownum rn from (
			        select 
					t.id,
					t.user_id,
					t.user_real_name,
					t.user_manage_cardid,
					t.user_manage_cardid_img,
					t.user_company_address_province,
					t.user_company_address_city,
					t.user_company_address_county,
					t.user_company_address_deails,
					t.state,
					t.type,
					t.rejected_reason,
					to_char(t.create_date,'yyyy-mm-dd hh24:mi:ss') create_date,
					t.user_company_img,
					t.approval_user_id,
					to_char(t.approval_date,'yyyy-mm-dd hh24:mi:ss') approval_date
					from tbl_bank_card_user_info t
					left join tbl_user_info a on t.user_id=a.id
					<where>
						t.type=1
						<if test="login_name !=null and login_name != ''">
						    and exists(select 1 from tbl_user_info t1 
						    	where t1.login_name like '%'||#{login_name,jdbcType=VARCHAR}||'%' and t1.id=t.user_id)
						</if>
						<if test="user_real_name != null and user_real_name != ''">
							and user_real_name like '%'||#{user_real_name,jdbcType=VARCHAR}||'%'
						</if>
						<if test="user_manage_mobilephone !=null and user_manage_mobilephone != ''">
						    and exists(select 1 from tbl_user_info t1 
						    	where t1.user_manage_mobilephone=#{user_manage_mobilephone,jdbcType=VARCHAR} and t1.id=t.user_id)
						</if>
						<if test="public_user_type != null and public_user_type == 2">
				            and EXISTS (SELECT 1 FROM TBL_SYS_USER_STORE TSUS WHERE TSUS.STORE_ID = a.STORE_ID AND TSUS.USER_ID = #{public_user_id,jdbcType=INTEGER})
				        </if>
				        <if test="public_user_type != null and public_user_type == 3">
				            and a.referee_user_id = #{public_user_id,jdbcType=INTEGER}
				        </if>
				        <if test="public_user_type != null and public_user_type == 4">
				            and a.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
				        </if>
				        <if test="public_user_type != null and public_user_type == 5">
				            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = a.STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
				        </if>
				        <if test="public_user_type != null and public_user_type == 6">
				            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = a.STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
				        </if>
				        <if test="public_user_type != null and public_user_type == 9">
				            and EXISTS(SELECT 1 
				                         FROM TBL_SYS_USER_INFO TSUI
				                        WHERE TSUI.USER_TYPE = 4
				            				  AND TSUI.ORGANIZATION_ID IN (
												  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
												  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
									              )
									          AND TSUI.id = a.market_supervision_user_id)
				        </if>
						<if test="state != null">
							and state IN
				                <foreach item="item" collection="state" open="(" separator="," close=")">
									#{item}
								</foreach>
						</if>
					</where>
					order by t.state,t.create_date desc
			        ) t where rownum &lt;= #{end_rownum})a
			where rn &gt; #{start_rownum}
    </select>
    <!-- 会员认证审批总数 -->
    <select id="queryMemberCertificationApprovalCount" parameterType="java.util.Map" resultType="int">
    	 select count(1)
			from tbl_bank_card_user_info t
			left join tbl_user_info a on t.user_id=a.id
			<where>
				t.type=1
				<if test="login_name !=null and login_name != ''">
				    and exists(select 1 from tbl_user_info t1 
				    	where t1.login_name like '%'||#{login_name,jdbcType=VARCHAR}||'%' and t1.id=t.user_id)
				</if>
				<if test="user_real_name != null and user_real_name != ''">
					and user_real_name like '%'||#{user_real_name,jdbcType=VARCHAR}||'%'
				</if>
				<if test="user_manage_mobilephone !=null and user_manage_mobilephone != ''">
				    and exists(select 1 from tbl_user_info t1 
				    	where t1.user_manage_mobilephone=#{user_manage_mobilephone,jdbcType=VARCHAR} and t1.id=t.user_id)
				</if>
				<if test="public_user_type != null and public_user_type == 2">
		            and EXISTS (SELECT 1 FROM TBL_SYS_USER_STORE TSUS WHERE TSUS.STORE_ID = a.STORE_ID AND TSUS.USER_ID = #{public_user_id,jdbcType=INTEGER})
		        </if>
		        <if test="public_user_type != null and public_user_type == 3">
		            and a.referee_user_id = #{public_user_id,jdbcType=INTEGER}
		        </if>
		        <if test="public_user_type != null and public_user_type == 4">
		            and a.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
		        </if>
		        <if test="public_user_type != null and public_user_type == 5">
		            and EXISTS(SELECT 1 FROM TBL_STORE_INFO TSI WHERE TSI.ID = a.STORE_ID AND TSI.SHOPKEEPER_USER_ID = #{public_user_id,jdbcType=INTEGER})
		        </if>
		        <if test="public_user_type != null and public_user_type == 6">
		            and EXISTS(SELECT 1 FROM TBL_STORE_USER_REL TSUI WHERE TSUI.STORE_ID = a.STORE_ID AND TSUI.USER_ID = #{public_user_id,jdbcType=INTEGER})
		        </if>
		        <if test="public_user_type != null and public_user_type == 9">
		            and EXISTS(SELECT 1 
		                         FROM TBL_SYS_USER_INFO TSUI
		                        WHERE TSUI.USER_TYPE = 4
		            				  AND TSUI.ORGANIZATION_ID IN (
										  	SELECT ID FROM TBL_SYS_ORGANIZATION_INFO WHERE CONNECT_BY_ISLEAF=1
										  	START WITH PARENT_ID = #{public_user_organization_id,jdbcType=INTEGER} CONNECT BY PRIOR ID = PARENT_ID
							              )
							          AND TSUI.id = a.market_supervision_user_id)
		        </if>
				<if test="state != null">
					and state IN
		                <foreach item="item" collection="state" open="(" separator="," close=")">
							#{item}
						</foreach>
				</if>
			</where>
    </select>
    <!-- 会员认证审批详情 -->
	<select id="queryMemberCertificationApprovalDetail" parameterType="java.util.Map" resultType="java.util.Map">
		select 
		id,
		user_id,
		user_real_name,
		user_manage_cardid,
		user_manage_cardid_img,
		user_company_address_province,
		user_company_address_city,
		user_company_address_county,
		user_company_address_deails,
		state,
		type,
		to_char(create_date,'yyyy-mm-dd hh24:mi:ss') create_date,
		to_char(approval_date,'yyyy-mm-dd hh24:mi:ss') approval_date,
		rejected_reason,
		(select user_realname from tbl_sys_user_info T where t.id=approval_user_id) as approval_manage_name,
		user_company_img,
		DECODE(state,0,'待审核',1,'已审核',2,'已驳回') as approval_state,
		(select name from tbl_dic_region where id = user_company_address_province) as province,
		(select name from tbl_dic_region where id = user_company_address_city) as city,
		(select name from tbl_dic_region where id = user_company_address_county) as district,
		(select name
             from tbl_dic_region
            where id = user_company_address_province)
       || (select name
             from tbl_dic_region
            where id = user_company_address_city)
       || (select name
             from tbl_dic_region
            where id = user_company_address_county)
       || user_company_address_deails
          as address
		from tbl_bank_card_user_info where id=#{id,jdbcType=INTEGER}
	</select>
	<!-- 会员账户表更新见证宝相关信息 -->
    <update id="updateBankAccountInfo" parameterType="java.util.Map">
    	UPDATE TBL_BANK_ACCOUNT 
    	   SET bank_account = #{bank_account,jdbcType=VARCHAR},
    	   sub_merchant_id=#{sub_merchant_id,jdbcType=VARCHAR}
		where user_id = #{user_id,jdbcType=INTEGER}
    </update>
    <!-- 更新银行卡会员资料信息状态-->
    <update id="updateBankCardUserInfo" parameterType="java.util.Map">
    	UPDATE TBL_BANK_CARD_USER_INFO 
    	   <set>
    	   		<if test="state !=null and state != ''">
			   		state=#{state,jdbcType=INTEGER},
				</if>
				<if test="rejected_reason !=null and rejected_reason != ''">
			   		rejected_reason=#{rejected_reason,jdbcType=VARCHAR},
				</if>
				approval_user_id = #{approval_user_id,jdbcType=INTEGER},
    	   	    approval_date=sysdate
    	   </set> 
		where id = #{id,jdbcType=INTEGER}
    </update>
    <!-- 会员门店列表(店铺) -->
    <select id="queryMemberStoreSelectList" parameterType="java.util.Map" resultType="java.util.Map" resultMap="memberSelectListMap">
    	select id, user_control_store_name
    	  from tbl_user_info tui
    	 where user_type = 2
    	 and user_state=1
    	 <if test="partner_user_id != null and partner_user_id != ''">
    	 	and partner_user_id = #{partner_user_id,jdbcType=INTEGER}
    	 </if>
    	 <if test="public_user_type != null and public_user_type == 3">
            and 1=2
         </if>
         <if test="public_user_type != null and public_user_type == 4">
            and tui.market_supervision_user_id = #{public_user_id,jdbcType=INTEGER}
         </if>
         <if test="public_user_type != null and public_user_type == 5">
            and 1=2
         </if>
         <if test="public_user_type != null and public_user_type == 6">
            and 1=2
         </if>
         <if test="public_user_type != null and public_user_type == 7">
			and tui.supervisor_user_id = #{public_user_id,jdbcType=INTEGER}
         </if>
         <if test="public_user_type != null and public_user_type == 9">
            and tui.partner_user_id = #{public_user_id,jdbcType=INTEGER}
         </if>
    	 order by id
    </select>
    
    
    <!-- 查询子账户列表 -->
   	<select id="queryMemberSubAccount" parameterType="java.util.Map" resultType="java.util.Map">
   		select id, sub_account_name, phone_num, sub_account_pwd, sub_realname
   		from tbl_member_sub_account
   		where member_id = #{member_id,jdbcType=INTEGER} 
   		order by id
   	</select>
   	<!-- 判断子账号用户名是否重复 -->
   	<select id="queryMemberSubAccountLoginName" parameterType="java.util.Map" resultType="int">
   		select count(1) from tbl_member_sub_account 
   			where SUB_ACCOUNT_NAME=#{sub_account_name,jdbcType=VARCHAR}
   		<if test="id !=null and id != ''">
	   		and id&lt;&gt; #{id,jdbcType=INTEGER}
		</if>
   	</select>
   	<!-- 更新子账户 -->
   	<update id="updateMemberSubAccount" parameterType="java.util.Map">
   		update tbl_member_sub_account
   			<set>
   				<if test="sub_account_name !=null and sub_account_name != ''">
			   		sub_account_name=#{sub_account_name,jdbcType=VARCHAR},
				</if>
				<if test="phone_num !=null and phone_num != ''">
			   		phone_num=#{phone_num,jdbcType=VARCHAR},
				</if>
   				<if test="sub_account_pwd !=null and sub_account_pwd != ''">
			   		sub_account_pwd=#{sub_account_pwd,jdbcType=VARCHAR},
				</if>
   				<if test="sub_realname !=null and sub_realname != ''">
			   		sub_realname=#{sub_realname,jdbcType=VARCHAR},
				</if>
				update_date=sysdate
   			</set>
   		where id = #{id,jdbcType=INTEGER}
   		and member_id = #{member_id,jdbcType=VARCHAR}
   	</update>
   	<!-- 删除子账号 -->
   	<delete id="deleteMemberSubAccount" parameterType="java.util.Map">
   		delete 
   		from tbl_member_sub_account
   		where id = #{id,jdbcType=INTEGER}
   	</delete>
   	<!-- 添加子账号 -->
   	<insert id="addMemeberSubAccount" parameterType="java.util.Map">
   		insert into tbl_member_sub_account
   		(
   			id,
   			member_id,
   			sub_account_name,
   			phone_num,
   			sub_account_pwd,
   			create_user_id,
   			create_date,
   			sub_realname
   		)
   		values
   		(
   			seq_member_sub_account.nextval,
   			#{member_id,jdbcType=INTEGER},
   			#{sub_account_name,jdbcType=VARCHAR},
   			#{phone_num,jdbcType=VARCHAR},
   			#{sub_account_pwd,jdbcType=VARCHAR},
   			#{public_user_id,jdbcType=INTEGER},
   			sysdate,
   			#{sub_realname,jdbcType=INTEGER}   			
   		)
   	</insert>
   	
    <resultMap id="memberSelectListMap" type="java.util.Map">
        <result column="id" property="id"/>
        <result column="user_control_store_name" property="option"/>
    </resultMap>
    <!--联营门店账号信息添加-->
	<insert id="insertStoreBankAccount" parameterType="java.util.Map">
		insert into tbl_store_bank_account
		(
			id, 
			user_id,
			user_type,
			account_balance,
			account_balance_checkcode,
			goods_deposit,
			goods_deposit_bal_checkcode,
			store_goods_deposit_rate,
			store_goods_deposit_balance,
			store_goods_dpst_bal_checkcode,
			store_deposit,
			store_deposit_checkcode,
			shelf_deposit,
			shelf_deposit_checkcode,
			create_date,
			goods_deposit_balance
		)
		values
		(
			seq_store_bank_account.nextval,
			#{user_id,jdbcType=INTEGER},
			1,
			0,
			#{account_balance_checkcode,jdbcType=VARCHAR},
			0,
			#{goods_deposit_bal_checkcode,jdbcType=VARCHAR},
			2,
			0,
			#{store_goods_dpst_bal_checkcode,jdbcType=VARCHAR},
			0,
			#{store_deposit_checkcode,jdbcType=VARCHAR},
			0,
			#{shelf_deposit_checkcode,jdbcType=VARCHAR},
			sysdate,
			0
		)
	</insert>
	<!-- 退货扣款规则 -->
	<update id="memberUpdateDeductions" parameterType="java.util.Map">
		update tbl_user_info
		   set expired_deductions = #{expired_deductions,jdbcType=INTEGER},
		  	   unexpired_deductions = #{unexpired_deductions,jdbcType=INTEGER}
		 where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 用户级别设置 -->
	<update id="memberUpdateUserLevel" parameterType="java.util.Map">
		update tbl_user_info
		   set user_level = #{user_level,jdbcType=INTEGER}
		 where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 三方订单启/禁用 -->
	<update id="updateUserInfoForOtherSyncState" parameterType="java.util.Map">
		update tbl_user_info
		   set other_sync_state = #{other_sync_state,jdbcType=INTEGER}
		 where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 更新本地经销商ID-->
    <update id="updateAgentId" parameterType="java.util.Map">
    	UPDATE TBL_USER_INFO
    		SET AGENT_ID=#{AGENT_ID,jdbcType=INTEGER}
		WHERE  USER_NAME = #{USER_NAME,jdbcType=VARCHAR}
    </update>
    <!-- 商家审核通过默认初始化商家门店数据-->
	<insert id="insertStoreUserManage" parameterType="string">
		insert into tbl_store_user_manage
		(
			id,
			user_id,
			store_name,
			store_mobilephone,
			store_duty_person,
			province,
			city,
			county,
			store_detail_address,
			store_position_address,
			longitude,
			latitude,
			create_date,
			create_user_id,
			approval_state
		)
		select seq_store_user_manage.nextval,
            id,
            user_manage_name,
            user_manage_mobilephone,
            user_company_corporation,
            user_store_address_province,
            user_store_address_city,
            user_store_address_county,
            user_store_address_deails,
            user_store_location_address,
            user_longitude,
            user_latitude,
            sysdate,
            create_user_id,
            0
            from tbl_user_info_apply where user_name=#{user_name,jdbcType=VARCHAR}
	</insert>
	<!-- 更新控货开关 -->
	<update id="updateUserStoreAddress" parameterType="java.util.Map">
		update tbl_user_store_address
		   set state = '1'
		 where user_id = #{id,jdbcType=INTEGER}
	</update>
	<!-- 删除控货明细表数据 -->
	<delete id="deleteProductControlDetail" parameterType="java.util.Map">
		delete tbl_product_control_detail where product_control_id in (select id from tbl_product_control where user_id = #{id,jdbcType=INTEGER})
	</delete>
	<!-- 删除控货明细申请表数据 -->
	<delete id="deleteProductControlDetApply" parameterType="java.util.Map">
		delete tbl_product_control_det_apply where product_control_id in (select id from tbl_product_control_apply where user_id = #{id,jdbcType=INTEGER})
	</delete>
	<!-- 删除控货文件表数据 -->
	<delete id="deleteProductControlAtt" parameterType="java.util.Map">
		delete tbl_product_control_att where product_control_id in (select id from tbl_product_control where user_id = #{id,jdbcType=INTEGER})
	</delete>
	<!-- 删除控货表数据 -->
	<delete id="deleteProductControl" parameterType="java.util.Map">
		delete tbl_product_control where user_id = #{id,jdbcType=INTEGER}
	</delete>
	<!-- 删除控货申请表数据 -->
	<delete id="deleteProductControlApply" parameterType="java.util.Map">
		delete tbl_product_control_apply where user_id = #{id,jdbcType=INTEGER}
	</delete>
	<!--查询用户预审信息-->
	<select id="queryUserInfoPreChkInfo" resultType="com.tk.oms.member.entity.MemberInfo">
		select
			b.id,
			b.user_name,
			b.login_name,
			b.user_state,
			b.user_type,
			b.user_manage_sex,
			b.user_manage_name,
			user_manage_cardid,
			user_manage_current_address,
			user_manage_mobilephone,
			user_manage_telephone,
			user_manage_weixin,
			user_manage_qq,
			user_manage_email,
			user_company_name,
			user_company_corporation,
			user_company_address_max,
			user_company_address_province,
			user_company_address_city,
			user_company_address_county,
			user_company_address_deails,
			user_business_licence_imgurl,
			referee_user_id,
			market_supervision_user_id,
			market_supervision_user_realna,
			(case user_resource when '临时会员' then 1 else 0 end) is_temp,
			store_id,
			site_id,
			b.referee_user_realname,
			b.market_supervision_user_realna,
			b.user_company_type,
			(select a.type_id from TBL_DIC_PUBLIC_TYPE a where a.id = user_company_type and type = '经营类型' and rownum &lt;=1) user_company_type_name,
			b.user_manage_weixin,
			b.user_manage_qq,
			b.platform,
			b.main_category,
			b.user_company_comment,
			b.referee_user_realname,
			b.market_supervision_user_realna,
			b.shop_name,
			b.user_logistics_template_id,
			(select name from tbl_site_info where b.site_id = id) site_name,
			(select template_name from TBL_USER_LOGISTICS_TEMPLATE t2 where b.user_logistics_template_id = t2.id ) user_logistics_template_name
		from TBL_USER_INFO_APPLY b where b.user_name = #{userName}
	</select>
	<!-- 会员送货入户设置新增-->
	<insert id="insertMemberDeliveryHome" parameterType="java.util.Map">
		insert into tbl_member_delivery_home
		(
			id,
			user_id,
			is_support,
			effect_begin_date,
			effect_end_date,
			create_user_id,
			create_date
		)values
		(
			SEQ_MEMBER_DELIVERY_HOME.nextval,
			#{user_id,jdbcType=INTEGER},
			#{is_support,jdbcType=INTEGER},
			to_date(#{effect_begin_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss'),
			to_date(#{effect_end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss'),
			#{public_user_id,jdbcType=INTEGER},
			sysdate
		)
	</insert>
	<!-- 会员送货入户设置编辑 -->
    <update id="updateMemberDeliveryHome" parameterType="java.util.Map">
    	UPDATE TBL_MEMBER_DELIVERY_HOME
    	<set>
    	  	<if test="is_support !=null and is_support != ''">
			      is_support=#{is_support,jdbcType=INTEGER},
			</if>
			<if test="effect_begin_date !=null and effect_begin_date != ''">
			      effect_begin_date=to_date(#{effect_begin_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss'),
			</if>
			<if test="effect_end_date !=null and effect_end_date != ''">
			      effect_end_date=to_date(#{effect_end_date,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss'),
			</if>
			update_user_id=#{public_user_id,jdbcType=INTEGER},
			update_date =sysdate
    	</set>
		WHERE  user_id = #{user_id,jdbcType=INTEGER}
    </update>
     <!-- 会员送货入户设置信息-->
   	<select id="queryMemberDeliveryHomeByUserId" parameterType="java.util.Map" resultType="java.util.Map">
   		select id,
   			user_id,
   			is_support,
   			to_char(effect_begin_date,'yyyy-mm-dd hh24:mi:ss')  as  effect_begin_date,
   			to_char(effect_end_date,'yyyy-mm-dd hh24:mi:ss')  as  effect_end_date
   		from tbl_member_delivery_home 
   		where user_id=#{user_id,jdbcType=INTEGER}
   	</select>
   		<!-- 会员账号预审删除-->
    <update id="accountPreRemove" parameterType="java.util.Map">
    	UPDATE tbl_user_info_apply
		SET 
		<if test="remark !=null and remark != ''">
		      remark=#{remark,jdbcType=VARCHAR},
		</if>
		user_state =  5
		WHERE  user_name = #{user_name,jdbcType=VARCHAR}
    </update>
    <!-- 更新会员快递状态 -->
    <update id="updateUserLogisticsState" parameterType="java.util.Map">
    	 update tbl_user_logistics_config
        	set state =1
          where user_id = #{user_id,jdbcType=INTEGER}
            and state =2
    </update>
    <!-- 新增会员快递 -->
    <insert id="insertUserLogistics" parameterType="java.util.Map">
    	insert into tbl_user_logistics_config
    		(
    			id,
	    		user_id,
	    		enable_logistics,
	    		disabled_logistics,
	    		enable_logistics_name,
	    		disabled_logistics_name,
	    		create_user_id,
	    		create_date,
	    		state
    		) values (
    		seq_user_logistics_config.nextVal,
    		#{user_id,jdbcType=INTEGER},
    		#{enable_logistics,jdbcType=VARCHAR},
    		#{disabled_logistics,jdbcType=VARCHAR},
    		#{enable_logistics_name,jdbcType=VARCHAR},
    		#{disabled_logistics_name,jdbcType=VARCHAR},
    		#{public_user_id,jdbcType=INTEGER},
    		sysdate,
    		2
    		)
   </insert>
   <!-- 查询会员快递详情 -->
   <select id="queryUserLogisticsDetail" parameterType="java.util.Map" resultType="java.util.Map">
   	 select id,
			user_id,
			enable_logistics,
			disabled_logistics,
			state,
			to_char (create_date, 'yyyy-mm-dd hh24:mi:ss') create_date
	   from tbl_user_logistics_config 
	  where user_id=#{user_id,jdbcType=VARCHAR}
		and state=2
   </select>
   <!-- 用户操作日志记录 -->
    <insert id="insertUserOperationLog"  parameterType="java.util.Map">
         INSERT INTO TBL_USER_OPERATION_LOG(
             ID,
             USER_TYPE,
             OPERATE_ID,
             CREATE_USER_ID,
             CREATE_DATE,
             REMARK,
             USER_NAME,
             USER_REALNAME
         ) VALUES
         (
             SEQ_USER_OPERATION_LOG.NEXTVAL,
             #{USER_TYPE,jdbcType=INTEGER},
             #{OPERATE_ID,jdbcType=INTEGER},
             #{CREATE_USER_ID,jdbcType=INTEGER},
             sysdate,
             #{REMARK,jdbcType=VARCHAR},
             #{USER_NAME,jdbcType=VARCHAR},
             #{USER_REALNAME,jdbcType=VARCHAR}
        )
    </insert>
</mapper>