<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tk.oms.basicinfo.dao.AfterSaleAddressDao">
	<!-- 查询售后地址列表 -->
	<select id="queryAfterSaleAddressList" parameterType="java.util.Map" resultType="java.util.Map">
		select * from (select T.*,rownum as rn from (
		         select l.*
		            from tbl_after_sale_address_info  l
		            <where>
					 	<if test="after_sale_name !=null and after_sale_name !=''">
					 		and after_sale_name like concat(concat('%', #{after_sale_name,jdbcType=VARCHAR}),'%')
					 	</if>
					 	<if test="after_sale_mobile !=null and after_sale_mobile !=''">
					 		and after_sale_mobile =#{after_sale_mobile, jdbcType=INTEGER}
					 	</if>
					 	<if test="after_sale_address !=null and after_sale_address !=''">
					 		and after_sale_address like concat(concat('%', #{after_sale_address,jdbcType=VARCHAR}),'%')
					 	</if>
					 	<if test="state !=null and state !=''">
					 		and state =#{state, jdbcType=CHAR}
					 	</if>
					 </where>
		                 order by create_date desc) T 
				where rownum &lt;= #{end_rownum,jdbcType=INTEGER})
		where rn &gt; #{start_rownum,jdbcType=INTEGER}
	</select>
	 <!-- 查询售后地址总数量 -->
	<select id="queryAfterSaleAddressCount" parameterType="java.util.Map" resultType="int">
		select count(1) cnt
		  from tbl_after_sale_address_info
		  <where>
		  	<if test="after_sale_name !=null and after_sale_name !=''">
		 		and after_sale_name like concat(concat('%', #{after_sale_name,jdbcType=VARCHAR}),'%')
		 	</if>
		 	<if test="after_sale_mobile !=null and after_sale_mobile !=''">
		 		and after_sale_mobile =#{after_sale_mobile, jdbcType=INTEGER}
		 	</if>
		 	<if test="after_sale_address !=null and after_sale_address !=''">
		 		and after_sale_address like concat(concat('%', #{after_sale_address,jdbcType=VARCHAR}),'%')
		 	</if>
		 	<if test="state !=null and state !=''">
		 		and state =#{state, jdbcType=CHAR}
		 	</if>
		  </where>
	</select>
	
	<!-- 查询售后地址详情 -->
	<select id="queryAfterSaleAddressDetail" parameterType="java.util.Map" resultType="java.util.Map">
		select * from tbl_after_sale_address_info where id=#{id, jdbcType=INTEGER}
	</select>
	
	<!-- 售后地址新增 -->
	<insert id="addAfterSaleAddress" parameterType="java.util.Map">
		insert into tbl_after_sale_address_info
		(
			id,
			after_sale_name,
			after_sale_address,
			after_sale_mobile,
			state,
			create_date,
			create_user_id		
		) values
		(
			seq_after_sale_address_info.nextval,
			#{after_sale_name, jdbcType=INTEGER},
			#{after_sale_address, jdbcType=VARCHAR},
			#{after_sale_mobile, jdbcType=VARCHAR},
			#{state, jdbcType=CHAR},
			sysdate,
			#{public_user_id, jdbcType=INTEGER}
		)
	</insert>
	
	<!-- 售后地址修改-->
	<update id="editAfterSaleAddress" parameterType="java.util.Map">
		UPDATE TBL_AFTER_SALE_ADDRESS_INFO
		<set>
			<if test="AFTER_SALE_NAME !=null and AFTER_SALE_NAME !=''">
				AFTER_SALE_NAME=#{AFTER_SALE_NAME, jdbcType=INTEGER},
			</if>
			<if test="AFTER_SALE_ADDRESS !=null and AFTER_SALE_ADDRESS !=''">
				AFTER_SALE_ADDRESS=#{AFTER_SALE_ADDRESS, jdbcType=INTEGER},
			</if>
			<if test="AFTER_SALE_MOBILE !=null and AFTER_SALE_MOBILE !=''">
				AFTER_SALE_MOBILE=#{AFTER_SALE_MOBILE, jdbcType=INTEGER},
			</if>
			<if test="STATE !=null and STATE !=''">
				STATE=#{STATE, jdbcType=CHAR}
			</if>
		</set>
		WHERE ID=#{id, jdbcType=INTEGER}
	</update>
	
	<!-- 售后地址删除-->
	<delete id="removeAfterSaleAddress" parameterType="java.util.Map">
		delete from tbl_after_sale_address_info where id=#{id, jdbcType=INTEGER}
	</delete>
	
	<!-- 售后地址更新状态-->
	<update id="editAfterSaleAddressState" parameterType="java.util.Map">
		update tbl_after_sale_address_info
			set state=#{state, jdbcType=CHAR}
		where id=#{id, jdbcType=INTEGER}
	</update>
</mapper>